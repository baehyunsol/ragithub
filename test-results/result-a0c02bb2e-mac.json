{
    "meta": {
        "complete": true,
        "started_at": "2025-07-21 10:04:45.208943Z",
        "commit": "a0c02bb2e2375cdd1936a11b46876723d6cc35c1",
        "platform": {
            "cargo_version": "cargo 1.90.0-nightly (930b4f62c 2025-06-28)",
            "rustc_version": "rustc 1.90.0-nightly (f26e58023 2025-06-30)",
            "python_version": "3.9.6",
            "platform": "macOS-14.3.1-arm64-arm-64bit"
        },
        "ragit_version": "ragit 0.4.2-dev",
        "rand_seed": 20250721100445,
        "ended_at": "2025-07-21 11:53:02.138116Z",
        "elapsed_ms": 6496929,
        "commit_title": "update agent",
        "commit_message": "`Action::GetSummary` is deprecated and the summary is always added to\nthe system prompt.\n"
    },
    "tests": {
        "cargo_tests": {
            "seq": 0,
            "pass": false,
            "error": "\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 20.49s\n     Running unittests src/lib.rs (target/debug/deps/ragit-30052d63b0a11bab)\n     Running unittests src/main.rs (target/debug/deps/rag-94250edb0b4fa7bf)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `release` profile [optimized] target(s) in 9.30s\n     Running unittests src/lib.rs (target/release/deps/ragit-2040f1304fdfdabe)\n     Running unittests src/main.rs (target/release/deps/rag-ca2a5d69d56c2776)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 22.28s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test --release --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n Downloading crates ...\n  Downloaded winnow v0.7.12\n  Downloaded memmap2 v0.9.7\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\n    Finished `release` profile [optimized] target(s) in 52.27s\n     Running unittests src/lib.rs (target/release/deps/ragit-daffa452fff22575)\n     Running unittests src/main.rs (target/release/deps/rag-8f91848b876a25c2)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo doc --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 21.79s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/api: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 357 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/api: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 197 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 444 packages to latest Rust 1.90.0-nightly compatible versions\n Downloading crates ...\n  Downloaded h2 v0.3.27\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 33.09s\n     Running unittests src/lib.rs (target/debug/deps/ragit_server-08f52dd1f7c86e57)\n     Running unittests src/main.rs (target/debug/deps/ragit_server-9c0981db3f6d13dd)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `release` profile [optimized] target(s) in 57.97s\n     Running unittests src/lib.rs (target/release/deps/ragit_server-46bd05255b3c6225)\n     Running unittests src/main.rs (target/release/deps/ragit_server-09acd60be912fbd9)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 32.55s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server/target/doc/ragit_server/index.html\n\n\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/cargo_tests.py\", line 24, in cargo_tests\n    raise Exception(\"\\n\\n\".join(errors))\nException: \n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 20.49s\n     Running unittests src/lib.rs (target/debug/deps/ragit-30052d63b0a11bab)\n     Running unittests src/main.rs (target/debug/deps/rag-94250edb0b4fa7bf)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `release` profile [optimized] target(s) in 9.30s\n     Running unittests src/lib.rs (target/release/deps/ragit-2040f1304fdfdabe)\n     Running unittests src/main.rs (target/release/deps/rag-ca2a5d69d56c2776)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 22.28s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo test --release --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n Downloading crates ...\n  Downloaded winnow v0.7.12\n  Downloaded memmap2 v0.9.7\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\n    Finished `release` profile [optimized] target(s) in 52.27s\n     Running unittests src/lib.rs (target/release/deps/ragit-daffa452fff22575)\n     Running unittests src/main.rs (target/release/deps/rag-8f91848b876a25c2)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev: cargo doc --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 21.79s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/api: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 357 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/api: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 197 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/pdl: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 444 packages to latest Rust 1.90.0-nightly compatible versions\n Downloading crates ...\n  Downloaded h2 v0.3.27\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 33.09s\n     Running unittests src/lib.rs (target/debug/deps/ragit_server-08f52dd1f7c86e57)\n     Running unittests src/main.rs (target/debug/deps/ragit_server-9c0981db3f6d13dd)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `release` profile [optimized] target(s) in 57.97s\n     Running unittests src/lib.rs (target/release/deps/ragit_server-46bd05255b3c6225)\n     Running unittests src/main.rs (target/release/deps/ragit_server-09acd60be912fbd9)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:374:9\n    |\n374 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:699:1\n    |\n699 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:549:5\n    |\n549 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/src/agent/action.rs:682:1\n    |\n682 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 32.55s\n   Generated /Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/crates/server/target/doc/ragit_server/index.html\n\n\n",
            "elapsed_ms": 468637,
            "message": null
        },
        "cargo_features": {
            "seq": 1,
            "pass": true,
            "error": null,
            "elapsed_ms": 201491,
            "message": null
        },
        "add_and_rm": {
            "seq": 2,
            "pass": true,
            "error": null,
            "elapsed_ms": 113685,
            "message": null
        },
        "add_and_rm2": {
            "seq": 3,
            "pass": true,
            "error": null,
            "elapsed_ms": 39418,
            "message": null
        },
        "ignore": {
            "seq": 4,
            "pass": true,
            "error": null,
            "elapsed_ms": 12429,
            "message": null
        },
        "recover": {
            "seq": 5,
            "pass": true,
            "error": null,
            "elapsed_ms": 10574,
            "message": null
        },
        "cannot_read_images": {
            "seq": 6,
            "pass": true,
            "error": null,
            "elapsed_ms": 3926,
            "message": null
        },
        "clone": {
            "seq": 7,
            "pass": true,
            "error": null,
            "elapsed_ms": 115653,
            "message": null
        },
        "clone_empty": {
            "seq": 8,
            "pass": true,
            "error": null,
            "elapsed_ms": 11810,
            "message": null
        },
        "pull": {
            "seq": 9,
            "pass": true,
            "error": null,
            "elapsed_ms": 15168,
            "message": null
        },
        "pull_ragithub": {
            "seq": 10,
            "pass": true,
            "error": null,
            "elapsed_ms": 6400,
            "message": null
        },
        "server": {
            "seq": 11,
            "pass": true,
            "error": null,
            "elapsed_ms": 449961,
            "message": null
        },
        "server_ai_model": {
            "seq": 12,
            "pass": true,
            "error": null,
            "elapsed_ms": 3708,
            "message": null
        },
        "server_permission": {
            "seq": 13,
            "pass": true,
            "error": null,
            "elapsed_ms": 58423,
            "message": null
        },
        "server_file_tree": {
            "seq": 14,
            "pass": true,
            "error": null,
            "elapsed_ms": 15414,
            "message": null
        },
        "fetch_models": {
            "seq": 15,
            "pass": true,
            "error": null,
            "elapsed_ms": 36886,
            "message": null
        },
        "cli": {
            "seq": 16,
            "pass": true,
            "error": null,
            "elapsed_ms": 21771,
            "message": null
        },
        "outside": {
            "seq": 17,
            "pass": true,
            "error": null,
            "elapsed_ms": 10858,
            "message": null
        },
        "archive": {
            "seq": 18,
            "pass": true,
            "error": null,
            "elapsed_ms": 382442,
            "message": null
        },
        "many_chunks": {
            "seq": 19,
            "pass": true,
            "error": null,
            "elapsed_ms": 346133,
            "message": null
        },
        "erroneous_llm": {
            "seq": 20,
            "pass": true,
            "error": null,
            "elapsed_ms": 248594,
            "message": null
        },
        "pdl_escape": {
            "seq": 21,
            "pass": true,
            "error": null,
            "elapsed_ms": 14116,
            "message": null
        },
        "many_jobs": {
            "seq": 22,
            "pass": true,
            "error": null,
            "elapsed_ms": 55141,
            "message": null
        },
        "ls": {
            "seq": 23,
            "pass": true,
            "error": null,
            "elapsed_ms": 297327,
            "message": null
        },
        "meta": {
            "seq": 24,
            "pass": true,
            "error": null,
            "elapsed_ms": 6384,
            "message": null
        },
        "symlink": {
            "seq": 25,
            "pass": true,
            "error": null,
            "elapsed_ms": 9246,
            "message": null
        },
        "gh_issue_20": {
            "seq": 26,
            "pass": true,
            "error": null,
            "elapsed_ms": 7097,
            "message": null
        },
        "ii": {
            "seq": 27,
            "pass": false,
            "error": "tfidf result on term 'advertis produc whether necessari search' is not close enough. error: `answer[1] not in approximation`, answer: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', 'c5406542eea53121aab7f4743be81cf947da75ce007f3c180000000100000377', '27b6fc2b9f4e9bd9a5f089ffc5d90cdf1c584013bd30d1a00000000100000fa9', '9ced635e349957dee5be69535354356fb8638c0bc871fb7f00000001000007a5', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e343362a5dd71a44378d83653d0d2c55ff01b6d907e3d7420000000100000801', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2'], approximation: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2', 'aaca4b0160f181c6635c770f2faa237611237c9159d4f2de0000000100000fa2', 'b5960bc66c1407deff56f522e1dc06c89b435e5bbec067370000000100000d88', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', '8601f65738a3bc5b457682822aabd919351a261e9c653dcd0000000100000fa7', '3b51f2a1241ff95f03406ad001d1a583489b1c9ebae929160000000100000a72']\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/ii.py\", line 100, in ii_worker\n    raise AssertionError(f\"answer[{i}] not in approximation\")\nAssertionError: answer[1] not in approximation\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/ii.py\", line 49, in ii\n    ii_worker()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/ii.py\", line 116, in ii_worker\n    raise AssertionError(f\"tfidf result on term '{term}' is not close enough. error: `{e}`, answer: {answer}, approximation: {approximation}\")\nAssertionError: tfidf result on term 'advertis produc whether necessari search' is not close enough. error: `answer[1] not in approximation`, answer: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', 'c5406542eea53121aab7f4743be81cf947da75ce007f3c180000000100000377', '27b6fc2b9f4e9bd9a5f089ffc5d90cdf1c584013bd30d1a00000000100000fa9', '9ced635e349957dee5be69535354356fb8638c0bc871fb7f00000001000007a5', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e343362a5dd71a44378d83653d0d2c55ff01b6d907e3d7420000000100000801', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2'], approximation: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2', 'aaca4b0160f181c6635c770f2faa237611237c9159d4f2de0000000100000fa2', 'b5960bc66c1407deff56f522e1dc06c89b435e5bbec067370000000100000d88', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', '8601f65738a3bc5b457682822aabd919351a261e9c653dcd0000000100000fa7', '3b51f2a1241ff95f03406ad001d1a583489b1c9ebae929160000000100000a72']\n",
            "elapsed_ms": 118116,
            "message": null
        },
        "cat_file": {
            "seq": 28,
            "pass": true,
            "error": null,
            "elapsed_ms": 29899,
            "message": null
        },
        "generous_file_reader": {
            "seq": 29,
            "pass": true,
            "error": null,
            "elapsed_ms": 66708,
            "message": null
        },
        "clean_up_erroneous_chunk": {
            "seq": 30,
            "pass": true,
            "error": null,
            "elapsed_ms": 4329,
            "message": null
        },
        "images": {
            "seq": 31,
            "pass": false,
            "error": "\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/images.py\", line 65, in images\n    assert \"removed 6 files\" in cargo_run([\"gc\", \"--images\"], stdout=True)  # 3 images and 3 descriptions\nAssertionError\n",
            "elapsed_ms": 8280,
            "message": null
        },
        "markdown_reader": {
            "seq": 32,
            "pass": true,
            "error": null,
            "elapsed_ms": 13020,
            "message": null
        },
        "csv_reader": {
            "seq": 33,
            "pass": true,
            "error": null,
            "elapsed_ms": 10591,
            "message": null
        },
        "real_repos": {
            "seq": 34,
            "pass": true,
            "error": null,
            "elapsed_ms": 1076867,
            "message": "started creating a knowledge-base of ragit\n\nfinished creating a knowledge-base of ragit: it took 29 seconds\n\n----- ragit (0 errors) -----\n\n\nstarted creating a knowledge-base of git\n\nfinished creating a knowledge-base of git: it took 59 seconds\n\n----- git (0 errors) -----\n\n\nstarted creating a knowledge-base of postgresql\n\nfinished creating a knowledge-base of postgresql: it took 89 seconds\n\n----- postgresql (0 errors) -----\n\n\nstarted creating a knowledge-base of rustc\n\nfinished creating a knowledge-base of rustc: it took 23 seconds\n\n----- rustc (0 errors) -----\n\n\nstarted creating a knowledge-base of docker\n\nfinished creating a knowledge-base of docker: it took 86 seconds\n\n----- docker (38 errors) -----\n    `layouts/shortcodes/admin-sso-config.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./docker-hub/images/saml-create-connection.png`)\n    `content/get-started/docker-concepts/running-containers/sharing-local-files.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/running-containers/images/mounted-files.webp?border=true`)\n    `content/get-started/docker-concepts/building-images/understanding-image-layers.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/building-images/images/container_image_layers.webp?border=true`)\n    `content/get-started/docker-concepts/building-images/multi-stage-builds.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/building-images/images/multi-stage-builds-spring-initializer.webp?border=true`)\n    `content/get-started/docker-concepts/the-basics/what-is-a-container.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/the-basics/images/search-the-docker-image.webp?border=true&w=1000&h=700`)\n    `content/get-started/docker-concepts/the-basics/what-is-a-registry.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/the-basics/images/dockerhub-signup.webp?border`)\n    `content/get-started/docker-concepts/the-basics/what-is-docker-compose.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/the-basics/images/todo-list-delete.webp?w=930&h=400`)\n    `content/get-started/docker-concepts/the-basics/what-is-an-image.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/docker-concepts/the-basics/images/click-image.webp?border=true&w=1050&h=400`)\n    `content/get-started/introduction/get-docker-desktop.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/introduction/../docker-concepts/the-basics/images/access-the-frontend.webp?border=true`)\n    `content/get-started/workshop/07_multi_container.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/get-started/workshop/images/multi-container.webp?w=350h=250`)\n    `content/contribute/components/images.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./assets/images/footer_moby_icon.png`)\n    `content/manuals/engine/storage/drivers/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/storage/drivers/images/container-layers.webp?w=450&h=300`)\n    `content/manuals/engine/storage/drivers/zfs-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/storage/drivers/images/zfs_clones.webp?w=450`)\n    `content/manuals/engine/storage/drivers/btrfs-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/storage/drivers/images/btfs_subvolume.webp?w=350&h=100`)\n    `content/manuals/engine/network/drivers/ipvlan.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/network/drivers/images/macvlan-bridge-ipvlan-l2.webp?w=700`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/services.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/swarm/how-swarm-mode-works/../images/services-diagram.webp?w=550`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/nodes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./engine/swarm/images/swarm-diagram.webp`)\n    `content/guides/java/develop.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/guides/java/images/debug-menu.webp?w=300`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/pki.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./engine/swarm/images/tls.webp?w=600`)\n    `content/manuals/build/building/multi-platform.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./build/images/single-vs-multiplatform-image.svg`)\n    `content/manuals/ai/gordon/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/ai/gordon/../../images/gordon-run-ctr.png`)\n    `content/manuals/ai/mcp-catalog-and-toolkit/toolkit.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./assets/images/mcp_servers.png`)\n    `content/manuals/extensions/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./assets/images/extensions.webp`)\n    `content/manuals/extensions/extensions-sdk/architecture/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/extensions/extensions-sdk/architecture/images/extensions-architecture.png?w=600h=400`)\n    `content/manuals/extensions/private-marketplace.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./assets/images/extensions-private-marketplace.webp`)\n    `content/manuals/scout/policy/scores.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/scout/policy/../images/score-a-shiny.png?w=450px`)\n    `content/manuals/scout/integrations/team-collaboration/slack.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/scout/integrations/team-collaboration/../../images/scout-slack-notification.png?border=true \"Example Slack notification from Docker Scout\"`)\n    `content/manuals/scout/explore/metrics-exporter.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/scout/explore/../images/scout-metrics-prom-target.png \"Docker Scout metrics exporter Prometheus target\"`)\n    `content/manuals/scout/explore/dashboard.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/scout/explore/../images/dashboard-overview.webp?border=true`)\n    `content/manuals/scout/explore/exceptions.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./scout/images/suppressed-cve-cli.png`)\n    `content/manuals/desktop/use-desktop/builds.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/desktop/use-desktop/../images/build-ui-jaeger-screenshot.png \"Screenshot of a build trace in the Jaeger UI\"`)\n    `content/manuals/admin/company/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./admin/images/docker-admin-structure.webp`)\n    `content/manuals/admin/organization/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./admin/images/org-structure.webp`)\n    `content/manuals/build-cloud/usage.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/./build/images/set-default-builder-gui.webp`)\n    `content/manuals/copilot/usage.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/copilot/images/copilot-button.png?w=400px`)\n    `content/manuals/copilot/examples.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/copilot/images/copilot-vuln-report.png?w=500px&border=1`)\n    `content/manuals/enterprise/security/roles-and-permissions.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/enterprise/security/../images/roles-and-permissions-member-editor-roles.png`)\n    `content/manuals/engine/storage/drivers/device-mapper-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/docker/content/manuals/engine/storage/drivers/images/two_dm_container.webp?w=450&h=100`)\n\nstarted creating a knowledge-base of kubernetes\n\nfinished creating a knowledge-base of kubernetes: it took 434 seconds\n\n----- kubernetes (152 errors) -----\n    `content/en/blog/_posts/2021-08-09-csi-windows-support-with-csi-proxy-reaches-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-08-09-csi-windows-support-with-csi-proxy-reaches-ga/csi-proxy.png`)\n    `content/en/blog/_posts/2019-09-18-kubernetes-1-16-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-09-18-kubernetes-1-16-release-announcement/endpoint-slices.png`)\n    `content/en/blog/_posts/2019-09-24-san-diego-contributor-summit.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-09-24-san-diego-contributor-summit/IMG_2588.JPG`)\n    `content/en/blog/_posts/2021-12-21-admission-controllers-for-container-drift/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/sequence_diagram.svg`)\n    `content/en/blog/_posts/2018-10-01-health-checking-grpc.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-09-30-health-checking-grpc/options.png`)\n    `content/en/blog/_posts/2018-08-02-dynamically-expand-volume-csi.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-08-02-dynamically-expand-volume-csi/csi-diagram.png`)\n    `content/en/blog/_posts/2016-07-00-Update-On-Kubernetes-For-Windows-Server-Containers.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/muN6ySMhN7XhmNU_cuEu7CJbcnNuun_FeNidcvv1QVqtpWxTJUZVnKNDwXj9ttAsLBPDBlMi6l_-_sBxEWYvfK7SVp9bjxVa91VrR60v6Y8P8c5AQEl01Bt1cDTj4uVRPOUBn89e \\\"Wykres\\\" returned 400.\")\n    `content/en/blog/_posts/2018-04-10-container-storage-interface-beta.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog-logging/2018-04-10-container-storage-interface-beta/csi-kubernetes.png`)\n    `content/en/blog/_posts/2021-08-11-memory-manager-moves-to-beta.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-08-11-memory-manager-moves-to-beta/MemoryManagerDiagram.svg \"MemoryManagerDiagram\"`)\n    `content/en/blog/_posts/2020-05-21-wsl2-dockerdesktop-k8s.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-05-21-wsl2-dockerdesktop-k8s/wsl2-windows-store-terminal.png`)\n    `content/en/blog/_posts/2016-07-00-Rktnetes-Brings-Rkt-Container-Engine-To-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-k3RRYf70fsg/V4a_-lVypxI/AAAAAAAAAl4/m9lVW0mxw7s35dzLlT4XJO5gdMzy_RBiQCLcB/s640/rkt%2Bstages.png returned 404.\")\n    `content/en/blog/_posts/2018-07-20-history-kubernetes-community.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-07-20-history-kubernetes-community.png`)\n    `README.md`: ImageError(Unsupported(UnsupportedError { format: Unknown, kind: Format(Unknown) }))\n    `content/en/blog/_posts/2018-10-08-support-for-azure-vmss.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-10-08-support-for-azure-vmss/sample-azure-cluster.png`)\n    `content/en/blog/_posts/2017-01-00-Scaling-Kubernetes-Deployments-With-Policy-Base-Networking.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-jJK65zh2wE8/WIE5o3HkXFI/AAAAAAAAA7U/QkoCoYnTWAEz60H0nyP4_wN0tVG3WVWAwCEw/s640/k8spolicy.png returned 404.\")\n    `content/en/blog/_posts/2016-10-00-Globally-Distributed-Services-Kubernetes-Cluster-Federation.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-Gj83DdcKqTI/WAE8pwAEZYI/AAAAAAAAAwI/9dbyBFipvDIGkPQWRB1dRxNwkrvzlcYMwCLcB/s400/k8s%2Bfed%2Bmap.png returned 404.\")\n    `content/en/blog/_posts/2018-01-00-Core-Workloads-Api-Ga.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/0T36knExav8JAr41ict3EVOPOqaIJPMBQrOT2N5jehXw_12jEILD87tKW8BvaK2UCOtCHzS700Oki8Fxja3bF37J3eceanEBjbHpRsATBhC1y3P0mas7DvPeQjt6QmfYuNWDqZVl returned 404.\")\n    `content/en/blog/_posts/2020-12-16-third-party-device-metrics-hits-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-12-16-third-party-device-metrics-hits-ga/metrics-chart.png`)\n    `content/en/blog/_posts/2024-05-20-cloud-provider-migration.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/components-of-kubernetes.svg`)\n    `content/en/blog/_posts/2017-11-00-Kubernetes-Easy-Way.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/dqvtK-xyGelr_LW3qlFiamYRrpiq633R68cKitrbCZPtDY_uLBF7R7_PGVNvWja24_mG74vDBzpXddYhbRNeyBGPbQ_yfCq367Zp7eJZoiJEWurFWdmJ0AJlNJJ9TzDivE-8Ak9E returned 404.\")\n    `content/en/blog/_posts/2018-03-00-Expanding-User-Support-With-Office-Hours.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-Iy2GaddJp78/WqnFbVUu9FI/AAAAAAAAAM4/xUzhOSIlRDEMMZNl3SzPBd1Pa0T5y0pKQCLcBGAs/s400/24xkey.jpg returned 404.\")\n    `content/en/blog/_posts/2019-10-10-contributor-summit-san-diego-schedule.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-10-10-contributor-summit-san-diego-schedule/DSCF0806.jpg`)\n    `content/en/blog/_posts/2016-04-00-Kubernetes-Network-Policy-APIs.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/zMEpLMYmask-B-rYWnbMyGb0M7YusPQFPS6EfpNOSLbkf-cM49V7rTDBpA6k9-Zdh2soMul39rz9rHFJfL-jnEn_mHbpg0E1WlM-wjU-qvQu9KDTQqQ9uBmdaeWynDDNhcT3UjX5 returned 404.\")\n    `content/en/blog/_posts/2020-03-25-kubernetes-1.18-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-03-25-kubernetes-1.18-release-announcement/release-logo.png`)\n    `content/en/blog/_posts/2021-08-04-kubernetes-release-1.22.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-08-04-kubernetes-release-1.22/kubernetes-1.22.png`)\n    `content/en/blog/_posts/2018-07-11-dynamic-kubelet-configuration.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-07-11-dynamic-kubelet-configuration/kubelet-diagram.png`)\n    `content/en/blog/_posts/2018-05-17-gardener-the-kubernetes-botanist.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-05-17-gardener-the-kubernetes-botanist/dashboard.gif`)\n    `content/en/blog/_posts/2017-05-00-Kubernetes-Monitoring-Guide.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EPAkCUdIslDcsKaC81vl0-zZCiAO04wMynRSK7OMHDI5KUN6JQ0Pm-CGkpy9ssDJ-YTUDO06eJ8bMR4LslEP3FBTExmHZNF8r90QYAvVP2NgoVJ3TS50MtZN4mveeMnVRoOghCG3DK9Iuh2GxLkmfh8dUjnck6pCsQfIPwvcX8-Tol8kwappBpD2JUkMgFMfzd9B3GpSYFw4qrxkrInQ82GXCOdo2LO68TzYgE99vFGNlsOiKe9YEODKhU1uy9N6OhF-hTX0IzX6TyZTZPhm5NH0SZN1FdHCCQNxFrwks96XAhVlbrBeoYXJD8iNfMZtTSnBYhz2ge54kwPRrymms1MS0wAUQDDBdk0hUtcRjpa8AiunsauF6r0Cr82T6l9Ne03C0LPmeBftJQeSjhVH2gMb_UdkelScyvYPFczVLFRBYGbsAjd7UcNwQlLa327dBOuXzlUtZ5bAAUCPzC_FdFR9KtjBRCQWLQSQv9TtWC__4PK_mQCP3NV1C-qVy3eIoNTAxehm9UZLIDvTD096aezj_vg6EGUPOv-3fxRfLI2Izg=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-03-00-1000-Nodes-And-Beyond-Updates-To-Kubernetes-Performance-And-Scalability-In-12.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F1OTjHAJdt_GXXaOGv6R2JHGgFThRoVpv3UrbZqh3seUkonTLOkKGWZRL39XPQdWuJxu6kiJSltH7YgwqDOlHX0WQ6K0udyhFp5M4MhsWjRhyS8a-4ejpVGwLl-O1n2D1l0v16j7NxK4Khz3-EdM35UBfCfjy9nOKsmWHjPRLv7lsVa-IP5R1_pIPBsNu3Fon1PWDCUmDLVCHpVCqnT7FDOVbWpRle5cLs1wTcvrRL61arUfjvvcuc7H0xS3cYiHnROP4kSBpYZRABQWYXlAqzR7oFGfQF-wxJvpDKJRiSXTLTeOCsDTSI5a_c9XWUC8tr9TFsiwUVG4JWsL0QaIiaZx20WbItC4U5EAkl0wMZtmaewfRV0v9zcmvDi_ASHyncfiHQxWmyLKkBOHsFNAgGuYeTLg1WMvl0sMPtKrdleeHPBqxfPY0uoIU7aUvzmPnqWLr9gK6FxXyoi1HXlfY_JbfYSFF4B2O_bEPYCvbt8fgHZQuDQa2V97Nlrnbv8CnOJXW8n3RYsLPvMHfgKwAuChf9KFIYv4dqxAJ-8h3j9UoA=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-01-00-How-We-Run-Kubernetes-In-Kubernetes-Kubeception.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Fl6qRVCxp1erOCmQfFhfUBShKEG7KQQPCQU-JOxPKX-0arLdz9UEhoKtGMMFLDG0y9IFJ0LzwxMZNW96GWydRkKrxMN3xBkpcUaMlenpZ3-Sh31MbsEAQzQAIIevVqtHLE1Q91eVZrKr4qwgR1zD9RHPqO-qZutz8AeMbU_Ps711rZ7Mc1gV4zi1DjAlr9erFr_sjQyYUV-WF2AHIh7fGY9-xlnMIDG132cTfzs2w4z4ST3P6zRI990I6Q-2Lp86vS33h1VhiF6JdIK5jGMwiG77DDXr748K1mKoMda4uhtu_Prq1ZGfJmf84_4LaPipt1Gn1VyfMNmkiLQ3o5zYqOwnUFFQPk4kTQTKozWieL5YggAAgfo97A24BLPHOqEuYixjsQLVPkp7g2_vem3cEqaanV3nG0mQE4alddJ9bHAMNJ43VwsDJIduRkkIEDh152uYsQLKKoMLfnuS0ovuGVgMfDYLIA_3eVpUZzn1Z70rwnr8kQ90gkGWu6YEUbDdoXkqPrlWbZ9JleXq_QwmccTRq_E61mjk1AMDrdpnBNUT5N=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-04-00-Configuring-Private-Dns-Zones-Upstream-Nameservers-Kubernetes.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-Jj4r6bGt1f8/WORRugYMobI/AAAAAAAABBE/HXH-wBGqweQcJbyQA3bqnUtYeN5aOtE9ACEw/s400/dns2.png returned 404.\")\n    `content/en/blog/_posts/2017-02-00-Postgresql-Clusters-Kubernetes-Statefulsets.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GZHv_KiZniDnd4tnrdj2ENfruQH_d0X4fxC9OJdQvoHtCvt1xzUttWMX-ZD-Bpg-fDT8yA5H-4CjIt85sjp5vBcHtwjtIcl_tWO9VBLpzatMC9RZfqPm4OV9OHodg0VnnXeCBtKcgXONKR453A5qB6V-4wuEG_o9Z0tnH7BX5QfrqTAm8_IqvTXLIKYJVjLAl_Lq54jIhfR9fjdqE5acu-jBB5lmaKq1w2xDLvQ8R_wwCQuaHaUJsxtzcFTA8NB4_rWQgaboAiK--LADRPy8cHH_DC64F3jwiAr1JofN1Xb8298KWoQi1GrWt-jtzhFer6vmqKymonAawidlkZt7_JTUXrli7Dx26yEzTIQVEFCvZZMvMo8IEHWbW0vYlZSHfijtbfqzWg3g8_er3m2LdkNzWeWpw6tYYFkVemn-lBEN2ns_vJbFXhA7qxIDsoUyz68bVjOk_-HWCyIk-OhiQaQ9UrfCpEU84RyXnBBp6HPjvhnFxHhPi2fHibLNyHLXGGyOPauH6AGrymUMewQu2mZ3cdGgwYZEGGz2vuKGF6XNTD=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-11-00-Certified-Kubernetes-Conformance.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-YasPeoIh8tA/Wg28rH4dzXI/AAAAAAAAAHg/Hfk2dnUoav4XMefGyjzMWdJMZbu1QJFagCK4BGAYYCw/s200/certified_kubernetes_color.png returned 404.\")\n    `content/en/blog/_posts/2018-06-07-dynamic-ingress-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-06-01-dynamic-ingress-kubernetes/kubeflow.png`)\n    `content/en/blog/_posts/2017-04-00-Multi-Stage-Canary-Deployments-With-Kubernetes-In-The-Cloud-Onprem.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GRtuKR7rQr6NmPa7dnLMFfA6atADB1jclauo0zAuZVGgeDmzkvokSVuMzMmffG85hNqTWPYPWSjo8b5A0vqkEulI-1F9V0bE2rzMqHfdb5Zhrk7JdtCa4NHTeos67gkxlHoCWLSG_TWyLrsD4gTILgpLWLa21MMcKM5llrx_SA-qIxXuJMHeC4abLn2_vKvjLbBUKII4uz2sBgfQ8-e9va7pG0wwNiAgEpFuUt4gt8MUjOAYyVTE-pepPljgagNVZlwBp6m-xgJUz7HkRKe6d5OXZHYbjug3PBPcj67MPneIlGkXmQ2dlS0VQOxvzyIknyoQvZznW_79j12oyKM8PuGp7p7JZF5bBkB1wY-zK6QcawuqULMCFIKgf76GqbTU0tO-DGz7WBrrO4HawKQCVV6yg95Te7phU4BtiNpY6u46TiOe7ZL8hcnFmP51hN2LA96H3qa5lnoY0cyhPigY5rP4BQ9flK59acVsCaVs9hPV9L3yKU9ypetH3Y9a9Km8YmduakGM49CTgysqfl6uId2CskCFuZA-p8qdDGLURvsZ_c=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-04-22-gateway-api/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/content/en/blog/_posts/2021-04-22-gateway-api/route-binding.png `)\n    `content/en/blog/_posts/2017-03-00-Scalability-Updates-In-Kubernetes-1-6.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/LdjAOmsLGdxLNTo222uif1V0Eupoyaq6dY-leg1FBGkyQxUNt5ROjrFh_XzW27P7nP865FYUVwTOaUpDEnirdHSBKvh9xl8PsBNEFlVWpJUbnj0FEdLX4MywqbjwK9oc8avLRNAX \\\"Wykres\\\" returned 400.\")\n    `content/en/blog/_posts/2021-04-08-kubernetes-release-1.21.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-04-08-kubernetes-release-1.21/globe_250px.png`)\n    `content/en/blog/_posts/2018-04-25-open-source-charts-2017.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog-logging/2018-04-24-open-source-charts-2017/most-discussed.png`)\n    `content/en/blog/_posts/2019-08-30-announcing-etcd-3.4.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-08-30-announcing-etcd-3.4/figure-1.png`)\n    `content/en/blog/_posts/2017-03-00-K8Sport-Engaging-The-Kubernetes-Community.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_ElScnqCNttJDJP6Ud4pETWsUNDBaF-Z3nUOtRHkhUeX8qG7y5nRNJ1arehRfRm7krS20SGfHAt_3KtOfpbQv5TbFkXuOhxAyiM8UgnD8fYD-Z_k1wPerpKpiNyGcQM0i2IveHakLHGUqi_xxA3uxvpzU2lAS0NfeJtcveTMMgq6njorj3YcYPngbyuN1bHBjGkjX4d66kyXz415VgC6nuc9fJ-p9eR51OuBT2XcqlQa-ydWGOtQN8-OiWD97JwyH-h38QNxrLFUC5r7KQbNxaIXTE_XlEwPzse8tdYeVt9R9_QaiTdweRHHdENhCBCAfg2FXAWDvzJZaiFGGppw60Yx6DYOQ-jnjqUp4Kz2Gxo_XzTe_pYClFOXjMw9GGsyPwgaQNvIvgfH2AmlVndsfDx_e4u8IBV5sE7T_J6xv6nYLaf1B8Wakt0Ba4MJbLvO_8TBxdJX0Pkujt9SshHLkO3G7jG94DYLOGvtEpZsYX8So-omZeDvC642mbzYX-MQPsHEKoycOv6qR7ZjHn49V1F51zvOnl_XIieWUOIZGWcbaWu=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-07-00-Kubernetes-In-Rancher-Further-Evolution.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HLP1lPFz5YQ9-J1zFiSZpTiZRLcpkaPG1YPXRhzWtjhjltyF11w7vM3cdPYr33mnLSV1eTrvLCmUheQn5Z1ElGrrF-qAn8mbEJ43KkGdAs-Mvrso9w3JTpc-ZAJc97KVbtaHR047j17s5NFyGgaOpCfBh2-r6ZG4nPQ-cp2cTLtrQH5-2GBUTTnctpnKuDzSjNUe5F2vwZdJuG1ZF8ul0bqKR0V0X244BQzWHglfyNDPOG9szuoL_TknUDcKddoXc0EEfkOI2YIlk-4xeHJKhvVrTyPXCLknOmIzIr_PJGRbIyZeVXCPDrgHX72IVXNWLvgkbdi7GU_mxT3jDQCJKmhiQW6ILKDbNgXfk-U6OE9jHmJdhO5s14S1AzsC6tmgCIwnROrp1DjOgX12Xq3ygsp4tLiK-HkQamjdTx3tdptT-BitXeAfwMi7A5VyIUZA0CV-L_SQWkJFZfP02koLqvBGuCfK7yNlTNo8kkakykwa-SNbT6e57yHSK5iIaz1PZV73AxFMF9KP8sc7AxxaqNR8-V8kAItapsWfAucvH5RVX8=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-03-00-How-To-Integrate-Rollingupdate-Strategy.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/4WiSkxX-XBqARVqQ0No-1tZ31op90LAUkTco3FdIO1mFScNOTVtMCgnjaO8SRUmms-6MAb46CzxlXDhLBqAAAmbx26atJnu4t1FTTALZx_CbUPqrCxjL746DW4TD42-03Ac9VB2c returned 404.\")\n    `content/en/blog/_posts/2017-10-00-Enforcing-Network-Policies-In-Kubernetes.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/e8JzhKYICOzh44sHcedjt4IRRpw2zpFNbJ2UY83fBdWYCIvFVSlHJNmIwLzIHVxrScc2eNCyv37mm903TVT9VkMuHPxe_5Hk8CvJTqGsSK7WtEDCbn1Q25S-o_kHcEiKUUl1NV9g returned 404.\")\n    `content/en/blog/_posts/2020-08-31-increase-kubernetes-support-one-year.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-08-31-increase-kubernetes-support-one-year/versions-in-production-text-2.png`)\n    `content/en/blog/_posts/2019-06-24-kubeadm-ha-v115.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-06-24-kubeadm-ha-v115/overview.png`)\n    `content/en/blog/_posts/2016-09-00-Deploying-To-Multiple-Kubernetes-With-Kit.md`: FileReaderError(\"GET https://4.bp.blogspot.com/-BdD0AgQKFWY/V87u5p7uw2I/AAAAAAAAArM/Z6_279MSn2AVDmO192GtPPTuVBbLgsHCQCLcB/s640/kit.png returned 404.\")\n    `content/en/blog/_posts/2016-05-00-Hypernetes-Security-And-Multi-Tenancy-In-Kubernetes.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/8DjNb9IE0HjinFxkaoGbPaaKbts5_Osbj-8NVWQMgY_8D32643Aum0SaMc2OedV2gECG3EXov8qj_f8XDe0IfpptZt61HxfJEonLo3RA5xkr5zSmd2nxqVc8yESc423nPEZTj1H3 returned 404.\")\n    `content/en/blog/_posts/2016-11-00-Skytap-Modernizing-Microservice-Architecture-With-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HRdq95dBi0Nf6HEW-alfliuoeo8fAouOHheZX9U4_tbHsoMrPzyY7CstM4KgDCSzLDOER5owK8ACp71U2MqoJrxtHBT6WJALJox5pZ8ws32Pnb1guFqpeyjyKU0zA2JKrLcmuX1U-o6WxHuQoHONJ9glyo9WuWC6dGY5dT_b-DvgOU3dNfOpFEOYKkiOa3aqJd_Z-946he33nAlUZxjAHOAkoYX9HFeX-ko95HqBLRLU_o1qIQEdcSFtRA_gSdoUcu-iax2pXIr1Wd6GS6j9jNwVYM4g41UCfcviZiTFq24GYlGH7io9L3-QS_EHTkp6mgWR-w7bZ6wn6SoucVbT63fL5DX9AElwoVKHtilBwHhlTPpvephBb89a2FvHxi8RoWUpKASSbSRTFBihOSEy891mXbor2vXP3dGDSqIa1PUT-tweNdheoOzggjUB9DnISxPX7ezlOjpNb9jQYgylIRq80fgBqvM795ATJ56BwWtsKV-abbvmawdf6OFA9VS3IOMUjZzTtUxvcRr2AL1LiUjFX2_LImQWZ2alA0Ltby-SkI=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-12-00-Using-Ebpf-In-Kubernetes.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/Xe8qee5yYsJton2NHFLOhHevxdbpCHHPPgttOLP18ZWtoUJp9ChFKtKJiTxqNFn8zQPRJu4BdtG7xc24vlGkD2gtfbkCuHq_eU3Tx6z2m6ld4iYGEZv-MsSCcJ3jAcJO2HkMc_d_ returned 404.\")\n    `content/en/blog/_posts/2017-08-00-Kubernetes-Meets-High-Performance.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/nKTtfQVVmL4qBoSR0lBmBuLt8KOrVEyjn9YcAu7hrhhV-rwnxRY3p-Y5Qfddf7BI6u1KN85VKfeaaU74xDl-oDk5NzybdIxAp0SJ42x14gwzpmwLwjVy5nIng6K8Ih-bRDlOmA9j returned 404.\")\n    `content/en/blog/_posts/2016-07-00-Bringing-End-To-End-Kubernetes-Testing-To-Azure-2.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GzIFXHDPyqWqh0MiEJ8UbIkhYa7eMwmAbTzEbQ98A_VNkTW0P1smhusgbHn1RsCogewFGldpC3PMUT00Py35hyZtSfbQtLpOgXySsXNyYtOLEFdGCzOR1oISuSmTNyHMtWSZXaLz9tTH2VA6lLhn4CNvao0evN_jJvFvVptSRFjESIChj-FJIpgGyB9SAapM2XHRZ5GnGADNYFZg1jVczkJ9Qrn3IgMfxO6ZtwbZqCZ0hgw2dKFqu9bmhLvt-U1gHwnvbn-EuQPGFkeRSl_jP6vj8ghnlUp2L69YeD8eNPahBRnTtNF-QLhmXMC7IAfW6tbFEa8G51q6idVUUwlMunznzQnV3RRSiEBMakEuSoS8p_UgzAhuOGVr87qicfUN-jh648xgeHgQ-LywFdhOsy_dfQwq9AvHUJHEkeMLyRazvP2_OENKMOuWge276NToOmGRmKe6SZQ_7ETLZ0tasWZjMerMee_Er6sRRLHXtFVqbC5EQ2tgdPD6dy2DISZ2rVvasRPOOYc35UeYfF6cRCMBgqzBdpIfDG1_eVvUw5_mQ1=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-11-00-Securing-Software-Supply-Chain-Grafeas.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-TDD4slMA7gg/WfzDeKVLr2I/AAAAAAAAAGw/dhfWOrCMdmogSNhGr5RrA2ovr02K5nn8ACK4BGAYYCw/s400/Screen%2BShot%2B2017-11-03%2Bat%2B12.28.13%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2016-08-00-Create-Couchbase-Cluster-Using-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Gx0iuwQvuYUYWGlTwZOdlOcdeLYZuxbJmLTg2fvKN0_Jq0qCXIQSiJSFxK-mkIvrcgVg6qG6W9oKmaPyr_hNUIgDwA3q8CzXK0JgdGlKPF6Y5_PqezR7rHVzSWMm16Sj60UQcv46qWOULnEzp4MBmM_Sp_06ZKvxld-n4aHrzAbZXEITzv1IOvT03k1wC-47vxEKbMglSQ1Qx9Vcjds0HD_PE1TQa7EPpecaPk2jgfCXgjIFM-3NsMFpW9BCmtjdNQPEHUM4m8XktmwVc_Cc1uC6fvr-9JZnm1JKHKUvI8t5Rc-TakWHgtplPtw3Y9x04qxidzsKezCZHQm-PqQWQENeb2kn1Kx86D0HLENz0y8n5Kb79hgdYzy0-mZ8l6JD8zpYoeVTpWL8xmDdHc0uYneI2mEzKUNRUZhc12ty1LibN2QqLborcoYi4hJ1mN13HXSvyRnG_1JWyWenrUJUwMpUMTQW1rWJZAjfIKvCcURVYq3U8Dm1ZCCN3X2vg5rMGtXM6DBQNXxX4G6yAjE-lXynLbSPxk_3nutHj7I0iMC8ZS=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-06-05-meet-our-contributors-youtube-mentoring-series.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-06-05-meet-our-contributors-youtube-mentoring-series/meet-our-contributors.png`)\n    `content/en/blog/_posts/2018-10-09-volume-snapshot-alpha.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-10-09-volume-snapshot-alpha/snapshot.png`)\n    `content/en/blog/_posts/2016-09-00-High-Performance-Network-Policies-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HGaBZYKkAJ4mojvlhm78exXLCKFfMqYzR1HKUbRq9sRk5GMyPQ_VlUOFDXHHmMtpJ94F14QanuwIlM231x5tWX9dnDeEq34yL1rNe41XbIMzPjd1usEIV4YN4zhIu0ePvjrWyXyBPgJn462zVLcwJzBwOrDUfMlNtiFryvqwPZqRtrCo8BRrQ4gIczGSdsJh0_nfkRI7Nd6PJhL83075DKZcV8dk8OHK1ockfJWbSXJe4mgNcjSARb07WjmbmXQ58vQUaR28NBgpL8-6Q11mLr-AewI2WuV9yT0dala6z_243cAi7WU0q3yDKi-YrfAxOyLXVkLtZUWQ-uZKDPBm-ESD_38WM3l5j4DaM8Oc8R5_YJUqbrR3RED8h7J99y787zU1dSZkNQHVpLJzZKQIe4T0sh0VBg1JnQWjxxIT2qGbQIIwobYgvY-r53KXhOl_yrfdIcfwJ6mfIOPgt_B4Fd5IKcDWojAdNpUAHVvEjJDYHlQ0TopmnyHXV4A-aTnkWljymx4upPBwN2DmZeeBc_90LxLtsJg3RR5hCXEKjM1afY=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-10-00-Request-Routing-And-Policy-Management.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/kGRJnhkf30FBOY2pyZzID90f_zxlyMUv43hEvfq70bcmYhKrGv2em2qph21k-ahlwfBthV3XQSf6CuUQXMlvgSlOUJr4W1ksDVXIvChEd6a5Y51lwepHmyQx2ksJgUpyTiEbZN11 returned 404.\")\n    `content/en/blog/_posts/2019-05-23-Kyma-extend-and-build-on-kubernetes-with-ease.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-05-23-Kyma-extend-and-build-on-kubernetes-with-ease/ac-s-sc.svg`)\n    `content/en/blog/_posts/2018-11-07-grpc-load-balancing-with-linkerd.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/grpc-load-balancing-with-linkerd/Screenshot2018-11-0116-c4d86100-afc1-4a08-a01c-16da391756dd.34.36.png`)\n    `content/en/blog/_posts/2020-04-22-two-phased-canary-rollout-with-gloo.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-04-22-two-phased-canary-rollout-with-gloo/setup.png`)\n    `content/en/blog/_posts/2017-01-00-Fission-Serverless-Functions-As-Service-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Ho-gRU6XTWSEe8oxJEPgtdGBbsjy_pm6g7jEOj_08kmYvd4r8FVlnTgMAujTN8bVUfbZo57nu50eoPL-PRM1zOWP9E0fksrvfoAoKPbQ_-K1yZVGtu9L7JIO9RYPkDWisaR9t9wNdMTKr22V87eX7VACIchaLo2rvgDBHE-mFjTCL24Pqi1u1rrh7vx478LdgtZujhX4NOaNbsuQRCEekUQvrPHvkPdiBlBVKCt2BXDPjjIHbEli4y3vLSP0K0lPApWlMy9NxKOwKiPv477x2eCZaHmIWmisAeepsnkqEDflBF_u0q_-58eeaqdgPN6aoV09oLCpd7H3xs-82iEF9BC18MVat7I-CHEhqOxQmWiskHae2FUfl7m4YPYr8VgyR6V62zVfoDKU5ZwL6rxaTZUH_nFZgVjwO-qlM0XDvOFhZcOizaKlngtz5pEqOwuh3eN0ORfddUvDugqptHr-NVVI9x9pIpBqMqg6YZZ_RQdJBGjDm3baKwpweWKXGzsk1WzN_danUSe0Ct9X0CJdO_ywru1WwM89ZnAZty_xAiTHKX=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2020-02-18-Contributor-Summit-Amsterdam-Schedule-Announced.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-02-18-Contributor-Summit-Amsterdam-Schedule-Announced/contribsummit.jpg`)\n    `content/en/blog/_posts/2021-09-03-api-server-tracing.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-09-03-api-server-tracing/example-trace-1.png \"Jaeger screenshot showing API server and etcd trace\"`)\n    `content/en/blog/_posts/2016-03-00-Kubernetes-In-Enterprise-With-Fujitsus.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HzXhj6Lm1F316161XaS-xuFDE9NrOlxfJUFKWUY-Tc0WFrDQ0cit9gZdMDy4iuiPuaT4QxvqUgcOYFpoosztvIFSCnZmHQ1Uu_n8sOfwGbUp2FrQIL-Kajd-7lWEWhxC-xOgjmFakF0kw3K06aWkibBIj9yx2mc63fsvlqO3eWv_WWmOYUKOp_EuMf_bwgKwfLnbSM_gMcYQwXQeoHh4Hrto0llD4hZNrkW34VeDh_IVRYSj8Ag_yqKaqOMpa7_cRFPITjejVBlh8zuhv-BQNLAhdqxRXI5Hk4LhiF1RVF5QljtRSvAMRDNQTjuPnpiQgVTUBAcV4FkEZSKFbhGLsErwziQKaPY1FIwdQhIJVmCFUe7rIPOyrxBkfjYgf32AnB0LTrBeN74dOj2ktNK9TvigRuuYvM4TZVo1G2B_uOC8FjCIcNG9oxiJxFEy-wc2QwVtqr5zBHVjG5gVH_97R91C8FtQKSBt1MzycG9pP5A-_LVk9620yOFJMrF66jJsV-QCFwmU_ioZ52fcAarYrBU74oWK87FOe_iNQsBjbgJvrX=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-03-00-How-Container-Metadata-Changes-Your-Point-Of-View.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-7hrB4V8zAkg/VvmJRpLcQQI/AAAAAAAAAYA/Fz7pul56ZQ8Xus6u4zHBFAwe8HJesyeRw/s640/Kubernetes%2BMetadata%2BBlog%2B2.png returned 404.\")\n    `content/en/blog/_posts/2015-11-00-Monitoring-Kubernetes-With-Sysdig.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://1.bp.blogspot.com/-lQ-P2gLywlY/Vkz9MOoTgGI/AAAAAAAAAtk/UB6pW7sUbQA/s640/image09.gif\", source: TimedOut })\n    `content/en/blog/_posts/2018-05-30-say-hello-to-discuss-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-05-30-say-hello-to-discuss-kubernetes.png`)\n    `content/en/blog/_posts/2016-10-00-Production-Kubernetes-Dashboard-UI-1-4-improvements_3.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_E2A8yKK8RXINr248ChANh1vILc1wdH6-z7tSRjeo2RpDw4h8UGwApufgbZoPHxs0QOJyU4QMzi53bGW8JUPBJRrjATJyreXAOAtM1R2EIUfSk8toTjHonWUDMs1LfDQMlhzNVf_1VIDOOOC_0i5VhUkdOogjrs0h-OXCbs6RqiGe324jZuHa4Ar6AF2lRj_GuQohDGf226ZUsawd0FO1C6D5G_LTdI3dp76M3FXzPdcrnB_9SWsy8YSGDU9bIt3-UKGTTixrRwFJ2Hz5QOTP1-VsPUVl_fL47R7wFqL22Nx2Xy82eRA-7Iyu0rqxwphVwMiIHTmw9t8lFKA7bPvi1aTtga3d_fTADE_aFjI-TBq3O04Cis_B6RKlSuEuyaLUKxy2sH1fM6FVH_FCby-efEeF9pZWSgCG3lL-jZ3THHQfyqYBp8THYr8Q3bU5UVlIWC2IhNq4FzQ9lauK18JDy0WXNLdJKphJ03zGSkgZsCrY-74wfya9XhGa2aw1jCYQl16-azLc0_kzMNezR8AOq7ij7a4svZz4beGT9IV6CnZwlj=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-11-00-Kubernetes-Containers-Logging-Monitoring-With-Sematext.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HrwJhjomPpA2DKhruB8lKO3_EAcFDqPDKB2jMIrfWwf-kyW4UQri6bQpSVQgeeRDC1sl8DyHWlv4FWFfiEcizutv1taaw5QgD2ADOJwFhbfqnJ7AWD9zvpJ9MTK4wMeLMeXny9vHjuVxCXSTJnDnts9mqw1bnz9k2n4076x6oo4qXCy3giXhU3hYjnJ6cOmvEbxJkjQFwIIo7X88W27X6nA5Zut6OmZgdWJCfmi4kS8nsolN5TMJ1iZFeb85pZf8N29D72dA_UiZZAIdL6UWLoIZ5cT6_AbWfGv49tGvILS41kMbUgQAoE8Y_e-ew6aGMpRJL9xrp_8cfvyG5Cy_7Ga3bgjAOFXUk6OK1sfWKbcKPLBV7bXG4iBZva3YUe__7_PS_MuNG4n8mjmmUZFv1xUqjogoaEQ02P3mGtbNzXzD42GbhEZk-18lrmhrcDHvzVO9T3pVXawDoeb7bqrHJaWUBXCILykmZLEZlsYNp0hrSPUmCBi0ksrk5nxvu-Z0Lc0WUwtuy1PaT2_A0zqECaa_ZAGglywqjhBm7RKDpVZyn-=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-07-00-Strong-Simple-Ssl-For-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-ccmpTmulrng/VaVxOs7gysI/AAAAAAAAAU8/bCEzgGGm-pE/s400/0.png returned 404.\")\n    `content/en/blog/_posts/2020-01-15-Kubernetes-on-MIPS.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-01-15-Kubernetes-on-MIPS/kubernetes-on-mips.png`)\n    `content/en/blog/_posts/2015-05-00-Kubernetes-On-Openstack.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-EOrCHChZJZE/VVZzq43g6CI/AAAAAAAAF-E/JUilRHk369E/s400/Untitled%2Bdrawing.jpg returned 404.\")\n    `content/en/blog/_posts/2015-06-00-The-Distributed-System-Toolkit-Patterns.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2015-06-00-The-Distributed-System-Toolkit-Patterns/sidecar-containers.png`)\n    `content/en/blog/_posts/2017-02-00-Run-Deep-Learning-With-Paddlepaddle-On-Kubernetes.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-Mwn3FU9hffI/WJk8QBxA6SI/AAAAAAAAA8w/AS5QoMdPTN8bL9jnixlsCXzj1IfYerhRQCLcB/s200/baidu_research_logo_rgb.png returned 404.\")\n    `content/en/blog/_posts/2017-01-00-Running-Mongodb-On-Kubernetes-With-Statefulsets.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_ELdPHfytEL0dLCoOALCrtrryhDV8d-6xzNO_iKCXxmjkZzuJoAsGX9G3GE8YU-4HgyQb9jEYZKPz4o5pv4izSO8ahUZ-K3luQ-q7ybPV7AE5AIQ4stRw-_GfkI1v-w5gzyojqaSezRFRHmVIk4azm2e1kVdRmDImYVcOom7WMW5LWpDzoCwaSwPxKelu86OkOVIaYqIDno4zlEePp_0rmpuiIZlLeVmbsyUlQYSD1lwyLXk54zMhgJQJrmy_x-RURl8jmyt_1HjC5T6eCrgHyA5hHWYUy0Z2Kl-JS5gvzZOaHzpyKkijEJgaP_cG9IZ70N5ezuNMV7XzI2YHEt594i03NqYbR-rs2vvQ7zLAsaCMXyVQPbL9I0MM6aqbdm2vDwOcFveJUil1hLsyT08YHP_CwXYhCeqQDSqdxi69E9eVgeu_McNNvfdVYp3KvO-GXsyZam08M1Kf1HjtxmHvLOMuVpj7Mtm-Q_zGLKji_tR7L0M_JCNI04gBBF1o9NCJwdDThGJ_VnWgL0FJJr-WP9sU2jsfA0mjEP2ARGbRokd5KW=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-10-02-network-bootable-farm-with-ltsp.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-10-01-network-bootable-farm-with-ltsp/k8s+ltsp.svg`)\n    `content/en/blog/_posts/2017-10-00-Software-Conformance-Certification.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/-seEomiDY4syaWVbl0KT7k9fcJmylYK1n9_VANKyo5oIP5gH9MuIq_dcB_q3qvjE5YzOdM2HthMyc_wduC4xLmPStsb6Q6ASPBfOWi7ssGylfy1I7Pbd64THobytWa_1JX-pscH4 returned 404.\")\n    `content/en/blog/_posts/2018-03-00-Apache-Spark-23-With-Native-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-hl4pnOqiH4M/Wp4w9QmzghI/AAAAAAAAAL4/jcWoDOKEp3Y6lCzGxzTOlbvl2Mq1-2YeQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-03-05%2Bat%2B10.10.14%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2020-05-28-my-exciting-journey-into-kubernetes-history.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-05-28-my-exciting-journey-into-kubernetes-history/created-all.svg`)\n    `content/en/blog/_posts/2016-03-00-State-Of-Container-World-February-2016.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_G3ZFVLcMi8vMvqSfD2cYGurKIck6IdoeXeLO6rzCfbpwgLklaDVDq0wEzV3C0ctBij_sqd9sSkKSfK1O8gvEoXt-uMVmJ8Hea4KZP6z-4L6y3LZUa7vLcHrC7HJ46m3wv6-vtBfq_9iqF6Oa80-rK8Qr80f2RSHXd8YNfZ0dXw4LjiGwOrFQrEgbuHK-sM8fHEN05KPwznq62XaOD_djH5wlwN8ZvH19cIeBv_9QuRKS6qnDH8IKMgHByTkbO7NnUPMehId5lEJs001UK2zG4krvc65fZDiMjgzusP337SN6LQ5_IEngH19HqgsP4_jlQqMD3C1AlxbCddS_Rw2InfnhCWMgNTIxWsKg0fEVGXeG9IJ_IywaPUGEbkT6G0R6O5oW9NEm6v0IeVYJyAfZIFwNcGeoLKPu0VOtn7SXEFG_ysXaxKvpQPW1MeCOlCqWcJWn8EK3IV6lAMIX-Lje5Usy0D4KdmP7ifacFW2qP8gK680qIUGiZcK01B7mporc1_7AEUuq5_Uof9mzobAhOG5etoPCUS-sZSDnvxA7phN7vk=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-12-00-Windows-Server-Support-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_ELAb9Stc3tcsvx-aP70lcb45KJGmfo2jrPXffyYuEL-FF3Q0kTuT0vuVtOudVEgSRdUXgU6hEUaLVbwvhw7OWAUKXCp7QMJiVEWc5TCAFLGi32zleaEzoyR2is2nmN0B473CcdFpnrtMPt5Fq_QFL378S0FjOv7890i72_eVxpmU6gYKub1F84t2la8wZ7sJ1BkignhWAEYVkwXxEvK_XqgEhk6CMqVwz62GqlkO4oM2RRZZzobPPabS-OXv3kQ__rS0Em1y94epS0817YTEqDu383j0oO4k_IxAQ1J7ont4wEOCL2micjkl9a94-SapetXb5EY3llGyx_lIw1lO_GTYTo_Y4Zt6GxiFaFQHbyaaowVanse_jn1wiT7-COpvAUJ-IUC_azVP3aRfCjX1oQjuustt95tUXi7lbgUg_W51r7Ujr4l6Vdcj74vb5U1hVcJSxYDeb17F-y_-DsIAoh4Wm4vxugC63wqkd5ApmL6wwHr9rdU3-Yzxn8GgMRSRHZi5e9Ky1XYnM5JVt45tral14Kyqa5BCeb3hZOWxzCsoxg=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-12-22-kubernetes-in-kubernetes-and-pxe-bootable-server-farm.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-12-22-kubernetes-in-kubernetes-and-pxe-bootable-server-farm/screenshot01.svg`)\n    `content/en/blog/_posts/2020-09-02-scaling-kubernetes-networking-endpointslices.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-09-02-scaling-kubernetes-networking-endpointslices/endpoint-slices.png`)\n    `content/en/blog/_posts/2019-01-15-container-storage-interface-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog-logging/2018-04-10-container-storage-interface-beta/csi-kubernetes.png`)\n    `content/en/blog/_posts/2018-06-06-4-years-of-k8s.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-06-06-4-years-of-k8s/k8s-first-commit.png`)\n    `content/en/blog/_posts/2016-09-00-How-Qbox-Saved-50-Percent-On-Aws-Bills.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GN_qXkU6N7lqsAcL220V72MFzH-Jig5kjxE2UvaTSmCErI9thCPJ1CFsaWzhz6ZPjSzmtzORxTkl6ZcQ9ig-yQ1jPpjCiQFpMN2BKG4REwE1X-hC1Xg6MOnQvpK6TLlwTXaSjbPPpBCnoSjvDe4KyuCBs_GD0NHFQFFVY7guoz5mupTSCg6UmuAJ8xSBrG_SpUcg416rS6bpK25FCIXlhFN4Mc27kBjgWZtH9U9tzNcHDMfRvG-tKeDGjjFJpYpRr9MT8Rwq1m49EtMAdKvzGonM2tHhOVn7HcrRqeSqa6659YgCEY58-eZSVUjmoKniwfUQSW47394ZdR1U2QTWB_lTU-VhGA5ZhiXpDx6h1iX6HRS2vA2CH7W_Y-WMgskyzy6QlxBC_fHkUTo6YzxbmC54bAKVBDL7K9VcMGd45-kDGuWOcu8zOg9t_3h2_nFfr02oOQEW5Ex8YpcXiqHE4HOvQJWEpZ9pRZOfljUR_doGKuLp9sSWEsUOhEo_evIIlf-WZSbd0Z-Pjt0iMxkFNq6cFlB6GwhR8RKxUcPbdtEIqf=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-10-00-Tail-Kubernetes-With-Stern.md`: FileReaderError(\"GET https://4.bp.blogspot.com/-oNscZEvpzVw/WBeWc4cW4zI/AAAAAAAAAyw/71okg07IPHM6dtBOubO_0kxdYxzwoUGOACLcB/s640/stern-long.gif returned 404.\")\n    `content/en/blog/_posts/2016-07-00-Automation-Platform-At-Wercker-With-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Fo4NuJfOIfiAKGCAs1vxHCcLjf-Zmk-oByIgjE1DG6fwWAoWPEmUyYROVY2Voc1quiRsKZrtIj8wQ7UE1g-lxOmoIvMQ-S3MB94m2GM-y7AhWhHO1-yWUCf34ybqvrwri6Njcmfoa4TbKXnCfJhBd2L-LJibheimGeApnjjjGyt1uuKXTWvHqMIqnlUaakz6baQ4XtCw3cuLoBY15GIqXkZrUDa1u65FzEVIy7DJ5Nlng1c4m63e6U-KpZQteZizHEes9kkEPjRkdKP1mwNjA-0rTgp9mAuy-sva-5iOd_Q5dUoys_sbGrVJeRBSAgjLMs5X5xjBLGmFpjgDrS1uhpTjlJq6Rm6o77VIvBk3Q6BVQrnE79_YnfiwIDcw49hEWxwrQUzL1aPudpS7OTW4d61PWJpxQi6oD08pmq4NTP10Uzom3UrTC7ROXRrwTnGu3JKbkK0UA4mBM2xzgJQprI1qeoC6V8BjeUf63roQAOmJ4tek6FINOsA81H9adDYNdF4goLqd1NAPSDrEcK--iBqsxJs9R-B92bqyU3TMBDYKg0=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2020-05-05-introducing-podtopologyspread.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-05-05-introducing-podtopologyspread/api.png`)\n    `content/en/blog/_posts/2018-05-01-developing-on-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-05-01-developing-on-kubernetes/dok-devmodes_preview.png`)\n    `content/en/blog/_posts/2017-02-00-Inside-Jd-Com-Shift-To-Kubernetes-From-Openstack.md`: FileReaderError(\"GET https://upload.wikimedia.org/wikipedia/en/7/79/JD_logo.png returned 403.\")\n    `content/en/blog/_posts/2023-10-31-Gateway-API-GA/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/content/en/blog/_posts/2023-10-31-Gateway-API-GA/gateway-api-logo.png \"Gateway API Logo\"`)\n    `content/en/blog/_posts/2017-07-00-Happy-Second-Birthday-Kubernetes.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/ldb4PfuqammWmcPiFpMa48ALxD0kGrSre0WGMpuXKqAqnKhyWEmIcJXnQcAK2sdVCiE5cvw0H2FXtLt_dVihAk4b-XTA2HIQba3A0irnRaIHup4bhFUwPLSSFmw3zFk9ZOt61TKc returned 404.\")\n    `content/en/blog/_posts/2018-04-30-zero-downtime-deployment-kubernetes-jenkins.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-04-30-zero-downtime-deployment-kubernetes-jenkins/deployment-process.png`)\n    `content/en/blog/_posts/2015-09-00-Kubernetes-Performance-Measurements-And.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/NrKLoz2iB-TNdOxISL7OcqquCKL-MijDBCokf-u4ASAqgmo6zT7ZU24mXDvIwUUlRsFSsL3KF17dEAfUT41TSgNPvId5HN5ELQTXJSSBF0dp9EOccx4Y4WZ9fC9v9B_kCA=s1600 returned 403.\")\n    `content/en/blog/_posts/2017-01-00-Kubernetes-Ux-Survey-Infographic.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-aSAimiXhbkw/WHPgEveTIzI/AAAAAAAAA5s/BMa-6jVzW4Ir-JExg-njJJge2tQg6QSOwCLcB/s640/satisfaction-with-dashboard.png returned 404.\")\n    `content/en/blog/_posts/2017-07-00-How-Watson-Health-Cloud-Deploys.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/LeKfLOkNldqReFh47f2AuFU42dhvKDwDxac_Psil_bdZWldKY80ZZi4Rv3n0--jq8Mqq9qRFVa1AbLIt9TIPLLRVmon4DaBsltFYbUJikrOp0qcavJQ9XHjRL-A1yvWR6mTNayBP returned 404.\")\n    `content/en/blog/_posts/2019-08-06-OPA-Gatekeeper-Policy-and-Governance-for-Kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-08-06-opa-gatekeeper/v3.png`)\n    `content/en/blog/_posts/2016-11-00-Kompose-Tool-Go-From-Docker-Compose-To-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_H7-SlimALWHaPXzrKXCTmKrgGBU6fyS56ymN_oJ2esV56UEAKLuSNybzK0MIFOgCgw26LCZSrxq6z_geR-MVH3-zEIVSDzKu1YnpYQzOtEjh42fhztJoSOvO51IY1MTbEefPqJ2VZ27n8cf8dk5gK87daXuFA7oNVYNypNYJHtJdLluRSVz0ykrF0BuePew_7s9cIvvm-lEiUIs4h4_EEBBF8aD7QUtMAYnCc6sGKGcZCFXSiBpxJR0cZOYLYJtatgICtj2bWKXSkduNxLcNCVZjHxKc0A6a9MsMDC4K_S-yBLeMh653S-8zhfFrG0MFkLcWfvB_E82SztwhUTPBzcNofFYgGhcjX5jbvDpp_n0ZGAZkQWBwMNZb76WmndI4-gOh3gbJ-c-A9lqv1BmhqrRHY_wAcWi6ebMvKyFXrXRLIueZ93_ued7mJWj4ZjdJwzDurprLfJhTdnCojfqL9-noFjC84SCKmKvgDEVOe-6sX9NxuMEoovcx5VYlQoaKVD4uwl17XNRJyOeAmq-uhlclNU0pSUgRK8z7S0D7mn6e20=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-06-00-Bringing-End-To-End-Testing-To-Azure.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-U2KYWNzJpFI/V3QMYbKRX8I/AAAAAAAAAks/SqEvCDJHJ8QtbB9hJVM8WAkFuAUlrFl8ACLcB/s400/Kubernetes%2BBlog%2BPost%2B-%2BKubernetes%2Bon%2BAzure%2B%2528Part%2B1%2529.png returned 404.\")\n    `content/en/blog/_posts/2018-08-03-make-kubernetes-production-grade-anywhere.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-08-03-make-kubernetes-production-grade-anywhere/without-incidence.png`)\n    `content/en/blog/_posts/2016-08-00-Stateful-Applications-Using-Kubernetes-Datera.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FMMFtz793qxLvJ2cN-bHtvmpOKPJYM93PFMFTL5UTSJs8w35oC3XB6jh98nuK0aqDdslpLy4ESuSBJpNIiO5nL3e5HAsUTBiL0fVAg3_ziQNF7ZtsIvXZKK5NUGst4fSxg_b0uB_20NUdwTtMNUgQ9fjwaSHTfgrWphM5XUM-zWnmmR0ywxeKNsOvLWuOxtrEv6O7SRLznSzCqTDOG1wSqlVB93wvhSNDLbH9GHkNNERyuHRnuvP2-JzXxMjHQ4H2sgltM82chk9QrLO0uh2hSVjCsjrtK-u3Y3FJaqstIZkihRJ6l5VJnx2NWzTfsRp42ZIA2vZIZo1qJ6mv1qqBxvsZtRRH1ie5JKJdDbtCVCvVPPhEXGD-UfechWU4NfVAEy40gMmYB7FMu_hlPWetCdGTe9DJvH_mIWRc-lgVxN02-CO-Rmgi1BhJtoGSEcez7oprMbYDEZlQkZajrqSJ-J42Kko6vlVedeiv60t66MlPta6QHxKEBe51Z_9f8ml116EtgweDUi87DlHx7G0bMkBMfQ7F64td9Kg-fKygF1L2t=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-10-08-clusterclass-and-managed-topologies.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2021-10-08-clusterclass-and-managed-topologies/clusterclass.svg`)\n    `content/en/blog/_posts/2019-06-19-kubernetes-1-15-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2019-06-19-kubernetes-1-15-release-announcement/kubeadm-logo.png`)\n    `content/en/blog/_posts/2018-07-24-cpu-manager.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-07-24-cpu-manager/cpu-manager.png`)\n    `content/en/blog/_posts/2016-07-00-Dashboard-Web-Interface-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh3.googleusercontent.com/p9bMGxPx4jE6_Z2KB-MktmyuAxyFst-bEk29M_Bn0Bj5ul7uzinH6u5WjHsMmqhGvBwlABZt06dwQ5qkBZiLq_EM1oddCmpwChvXDNXZypaS5l8uzkKuZj3PBUmzTQT4dgDxSXgz\", source: TimedOut })\n    `content/en/blog/_posts/2020-03-18-Kong-Ingress-Controller-and-Service-Mesh.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/Kong-Ingress-Controller-and-Service-Mesh/KIC-gRPC.png`)\n    `content/en/blog/_posts/2016-03-00-Appformix-Helping-Enterprises.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh3.googleusercontent.com/sPfaXresP1wDPPVERwQC1eZHDKtwrD1buAmMhLcWxwbnPmJIgJql1VIn7mNoh_QSPxcMTzjraQulg3pSta6OM9VvJn0hgrQKSteP8ijIp14E9JAzJnUd5Ds_rvHQwj4IHPQ7Jhsr\", source: TimedOut })\n    `content/en/blog/_posts/2016-04-00-Adding-Support-For-Kubernetes-In-Rancher.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F0shoWhUeApjOdplD3PPvZzjjcN_PaYC21ZTSN_Lc0ZT3Gw96EzsNckyPR8JP_Bc1iPOxS_MS7A7I2P-poRO_2RZIyQi-N4kLiL0F2c7uLiFBt8PKZ6sF88cGKEvZQdzQB9DzBcwcPchoKPVqLIgJ07wGsw6k2u9Ka2BrigPNfWPneFpglDPx5_mUCgVHsOpQHrly4SgCVFHFvqYiKeAwhuEVWmYEW0TTtaJA9Bm4Vun4syrmF9ALfe6qBt8n5M-uJqRPr3Cn7Ie-HFKmAgHCgyQWDEWD-pAg-NjOT4HPgsovzAIcqzufiQbK65PSk-qTa-C8B21HO-XiY6qeBUou7WZTTqY467m3OVZuFp31qMfojvlNkNbrjipZZLyUIjHFcppo25EujIl80zUjCyAT7IT2gaTTE1SWipYrib7kjx3RpDcaOLEKHWaB_IGKoVHJlXuAECnZQAJKc6G7_OE4J6WR-Ph_YfoI0uyIJVghG4ClPnbWNBtd3A8Apj6HY1XyUomYfOKwmiyPsDAUknvlzIeGLJXceYO21L62EvjxdhAKS=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-10-00-Kubernetes-And-Openstack-At-Yahoo-Japan.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GtCHl7ilxjtYWTUTlmXS5JRWGn8XJR_c8LlAO8zgVB9ccYNYvll5XA9RtiuxaEoIXmgKkq42gQCJ9JTQ6JftABZFNmGDP2gFcRgOmLDF4TpXNMmtdIvFAcHwDWzkVDdK1RwRiYBr2KoXu0wmacPeH7F2IawgPD0g04bPW2-RXoqhu_tDIWm_UGIzbBekbo6M_JjNI-is0NTHTnZ21YTgIWvk2ygCzrzZr-iDIqzuTlNO3nbmEXBJ0_Yncrzg-grtTklcSRFvjG0TN7SkWnIcINTAxIUESXlV070yG3ZLqem1l8LiEo_Zv2TdFFk2cFM9xLKbwwTWMSNdLEHAUxSFwQvNqPjpTZyjWqpXal4sGtdBRIj6VwtpJ91HJfw8j0NmFffGB_6A1ugopiVuTs4rw5wFjZeGBxoeB1V13uIJWZfzbD7OghVi17EdaIAtjzgOnkBtsBJXsXRswHEpBfmhKeuIGPhdeOWjGTHiy2gVUb5j_5DR6GcUaILZPjNGXcZoyqSRJdQZRucSTavgUUfoRMCDRJCQDgbge0YsAnUmQCpcnF=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-07-12-resizing-persistent-volumes-using-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-07-12-resizing-persistent-volumes-using-kubernetes/pvc-storageclass.png`)\n    `content/en/blog/_posts/2017-12-00-Paddle-Paddle-Fluid-Elastic-Learning.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-sp_sVZvhMbU/WiYgXMLQKuI/AAAAAAAAAIM/uc_3iT9BZmAtQGiGGSErgueHK71uWMBCACEwYBhgL/s640/figure-1.png returned 404.\")\n    `content/en/blog/_posts/2017-04-00-Rbac-Support-In-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-v6KLs1tT_xI/WOa0anGP4sI/AAAAAAAABBo/KIgYfp8PjusuykUVTfgu9-2uKj_wXo4lwCLcB/s400/rbac1.png returned 404.\")\n    `content/en/blog/_posts/2015-05-00-Resource-Usage-Monitoring-Kubernetes.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-6Bu15356Zqk/V4mGINP8eOI/AAAAAAAAAmk/-RwvkJUt4rY2cmjqYFBmRo25FQQPRb27ACEw/s640/monitoring-architecture.png returned 404.\")\n    `content/en/blog/_posts/2016-12-00-From-Network-Policies-To-Security-Policies.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F4EWnaqIBgJ2q6-8XMpMOkXeg2zqbuCVw3g0b9Y-ickaYMZcVLbg2ukOiEkGlXxUY8BDU37LQ3UysiWZ-WdNu77bjPMXEmTxyKoDAJ445qhDUdTeRyVNT5ZYxSSVjoCJ8ikVrzjWfA0W7H9k_Idk6kys9wSN7I7I4c0F0uba5J0zthiecBHeXqeCB1oaWSpeVE6CDK2KRP7j4VEp5CzaPBB2Lq2TufiRYuCZ44-p6JjH0dEvLkL7b-nPiqfhFiOIwxMpsRRTIesQqwS2jvdWinadX0_bW-IGfFOfNe0BczqPCS51yR_Jkv9K8AFyW1uFBSfNnBFdCtV9vGxnb0m-A8G-eEgZR069yWwkME-M-Zu0X_Y2LaJVPv5b9U1nN2EPvzhkfGa--3_IesmVIA5S_IIg4VVLvXAVz7UXtcRPtSyAhOoyElqM0wiHMOK6u6CiEdH9zBQQVzSDlnKWDjT5u2NrqTGLZeTBtR1rMUfNN9eYHjMhqHu0Au5gPmZkl3mhtIFo4kFNXFn3_UB_Rab-mv-RDnNwqRDmz2ksjqRVaDrsY8=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-07-00-happy-k8sbday-1.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-Wn9QJb6wQ7w/V5Cm1Y2iKhI/AAAAAAAAAnc/SZ3yFFcxjmoqAmz9chp8o2KJJUoKI0KQwCLcB/s640/k8s%2BCommit%2BInfographic.png returned 404.\")\n    `content/en/blog/_posts/2018-01-00-Extensible-Admission-Is-Beta.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-p8WGg2BATsY/WlfywbD_tAI/AAAAAAAAAJw/mDqZV0dB4_Y0gXXQp_1tQ7CtMRSd6lHVwCK4BGAYYCw/s640/Screen%2BShot%2B2018-01-11%2Bat%2B3.22.07%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2020-12-08-kubernetes-release-1.20.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-12-08-kubernetes-1.20-release-announcement/laser.png`)\n    `content/en/blog/_posts/2015-05-00-Kubernetes-Release-0170.md`: FileReaderError(\"Cannot find image link reference: \\\"327\\\"\")\n    `content/en/blog/_posts/2018-10-03-kubedirector.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-10-03-kubedirector/kubedirector.png`)\n    `content/en/blog/_posts/2016-09-00-Creating-Postgresql-Cluster-Using-Helm.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GOifoQcTHRED_LcX0y9_X1KJ2brhvJmrbk6pInDJjDsK8fLOzUmj5M21psh0-mvw8vSF63OxDdoNVsbnnSHnNujh0RRivBaQbyy3ipB52BYStIhJuQejnyAneLgUnBU253YjfM8sUQWrWeajiA1W1A0lsNkGp-YRtMAtIcpqraDzZLhcXPiIZn0bYw6YbD6OIKw-AdzlfY3RkQzPtetHvrMQwW7XaTnO0wCMQKbQpWtVcFQwFj3sPzgUPYuASgnGfwDRycP7g5O8NAWMhYdmLMisrByfh0vxXRG98xQSz97qyi6ZVAqV8eKMkVO57-HRa7FUOaaJsJXrSYfgIWo4RKFzq2qLkSoBOhUwLtxBHZ_CSAowngs-bsCX_TDWuxVCXrTY-AuUMf8sfImUbkhL61yvIjNZf8arNc6BW-yCr-av3uOiM7Hf63LMEkkvi_fPs5-a3TgbT3aoxp-s7B9HH5RwLD_gcBvxNfjjVChgcseHGGwVyo1JKFDKQPYXD8cXu5LhjO8hn2uMZdA5aSasPyWPQ0AdeZwn_XpdPcY4TDKnov=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2019-06-12-contributor-summit-shanghai.md`: FileReaderError(\"Cannot find image link reference: \\\"picture of contributor panel at 2018 shanghai contributor summit. photo by josh berkus, licensed cc-by 4.0\\\"\")\n    `content/en/blog/_posts/2020-08-26-kubernetes-release-1.19.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2020-08-26-kubernetes-1.19-release-announcement/accentuate.png`)\n    `content/en/blog/_posts/2016-10-00-Helm-Charts-Making-It-Simple-To-Package-And-Deploy-Apps-On-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GQOYd48DhozrSuaoc-t5WRAVcBzvLdwBn43QFoGNKBI1InETV7Y_4WAI969d8tUrgRsV_56m-t1XO0ptaKY1LPTxTbxORoMsE7EBitNIUZ8R64UsnLTNLmYmOhdPsbMt9Cn1DodAtfbpwXA9oJTmBekQC5GBQlRJlNF0zBySetfC2l6sfnRyZ-FcsIV6LlPVP1Esn1nq3Kl1ZzMZlL85mhBKaNNfWsgsriLoGzeVsZ17srUKFtjrDRWIe2dWNa49BTpgu-wsRgb1MwNIvz5FhK1r8rO5mTQjIPrU0Oyy8-xBZEM0srQ6GOcuWUgxJadPWXhTBZ4DAfXfF3Wqdu3pVMgMpV8KWa6HbvIirz7ApB4v-h7i88D8MvDShtnmVtEP52IlKu2qrX76r5Z2n20nnfOJs2XLY65sfUr5JvxFTK1ILBvSUnCL2H1mFWF_Q1VhWKIXV6SapLKRvg9HU_4ISM1gTweCF9Kl7skM5B2UcMDZo1gdqZt4uZfLCwQXXWpcKfeZpPJp__YocEB7UqH1ozuZNd8KpS6cVc932go20u4QTR=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-04-24-kubernetes-application-survey-results-2018.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/survey-results/2018-application-survey/minikube-os-usage.png`)\n    `content/en/blog/_posts/2023-11-28-Gateway-API-Future.md`: FileReaderError(\"GET https://gateway-api.sigs.k8s.io/geps/images/1897-TLStermtypes.png returned 404.\")\n    `content/en/blog/_posts/2015-07-00-The-Growing-Kubernetes-Ecosystem.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HJDtCyxzlxhpBYOSNt1hz8bXiFa22cHWyj_pl3wW2fUXsxk7Bl3y7XqTJEB_XQk5X22AJ47xyEWYQSHIGmzsM9N-E2tXSMZbEXbwY17NhxO7IyLDRiwxt_vVFSOpT7b_bDaKjlGNi82UUaIrSsnz7RBYitYPQBwbEsQz4LsXkfd8B2aBfWXWZ88Cyk37G94J6iOz6uEf01OHFATufecTg32ihdZeuR-k_uk9nmtJVBgUsecUkyd4ucLD2daYujTp2_uMfKe1preyxFWFRYVQpt_DswZw8fJdsMiDFWdj8sOVaNFyQy8vpeoYZVKLiG52vofJhs_20pXh9GNUs58XrwdaIZ8a4FoYwXh61m1btwZ4B4UUXkFana40HL8zmkRlobt_C4ODvJDGgID5RUU8GmZsqMP5SkwzClZhv8pIhCYGs7Bvq9nzbqZaQpAThX6yVQQRj2jaev-8JbhoC4fi3QM3rOvKJq0LJTTEnPm7a0zo38FctZBLsKJvQfUU6bg7OXxVac-1Il_Qd_jxT1D1cyB_LQLqcyb-ZvY9ZaAojFR4A=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-11-00-Visualize-Kubelet-Performance-With-Node-Dashboard.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F_AUAqxBeNIwmEBpWH7vD5ohww_rAUJwjp4t8ARMfYg18DP3fGgmmJBYvdxqDIhIyGSggf1t8kCBaZLv_N7dLEufGOrft1eHe7wguq-WUUwnXQ5exunp4yFNripDc24yHlWIhDVyhnvodfK-yU_V05YOlZpOjk48oLUZtBBqjCfF4AokgizNz_AmBxUaBMNLpQSeNEc9meL-8s2_Yb-n9yCpgR4Nyz2tGazOB8cSJHSM1cV8vYYn4OSgXf73BhNo3_JuUW-Bf2SAGByGFDJ5_aeFmtZGGWqHqkzcXrfsJHfVrccrT2sG4JkxPvtHjd8if1l6OD0y5u4nLaJLh6IJ8Yupfww6DW0YC0upsUKcHzkCmVmp2wr4BmTkC9QZWnLT94fnOhiZWE5r0zhueouAnHA2LlLWUAOwEaiGBEh7-R15R5W7KyodMgwWm2-4xRMn-21rKIQJRaQ9F-Toz7Jh4vrJ-BlGxJ6vh9x467vGNkPN0ETEJrBdZ8PgHOTlJ4JHFytyL_knKrEHyJ9IsxgYCsuzGq_YRLfl0ye3Ol8OnIBvD7=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-07-00-Thousand-Instances-Of-Cassandra-Using-Kubernetes-Pet-Set.md`: FileReaderError(\"GET https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Cassandra1.jpeg/283px-Cassandra1.jpeg returned 403.\")\n    `content/en/blog/_posts/2015-06-00-Cluster-Level-Logging-With-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-FSXnrHLDMJs/Vxfzx2rsreI/AAAAAAAAAbk/PaDTpksKEZk4e8YQff5-JhGPoEpgyWaHgCLcB/s400/cloud-logging.png returned 404.\")\n    `content/en/docs/test.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/pencil.png`)\n    `content/en/docs/tutorials/services/source-ip.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/sourceip-externaltrafficpolicy.svg`)\n    `content/en/docs/concepts/cluster-administration/logging.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/user-guide/logging/logging-node-level.png`)\n    `content/en/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume.md`: FileReaderError(\"GET https://raw.githubusercontent.com/kubernetes/examples/master/mysql-wordpress-pd/WordPress.png returned 404.\")\n    `content/en/docs/concepts/overview/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/Container_Evolution.svg`)\n    `content/en/blog/_posts/2016-07-00-Minikube-Easily-Run-Kubernetes-Locally.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Ei9kzYnurSL8hQr861M7mOAOdv0QyhR0mB1_hB9hO55YjTgnZ7Xju-h0n4V3t5M0YV2k9bFxx5-8A9AobbEoaFo75pwXdGhIjSUpfshy7rec10ZGY865K4zmFpySxciHa3C6AOK5M7aF_X6lNUF1zY-_tHK-GnBenMPWiJurURMD_BTYyxmMkRZv6oBSDA8sn2fQejz0wNOv5N27p0QT7tWItQhjNfBCAmKqz3APBKEMrxGfekAQDQltkRCBDDxXM8TSvkNF5EkQslkv2WTmSrCXy13t_6z-nawEdNbhLZ1zWEXzeWW-K7MVbkXkapFF74SpeZ7ljnhUXzH5HLveBrWize9MGQDi0gSt8z1xDHXOa4U8vqR82PpPvMRczyf9tHtbFEQSnpCuLtnijJqxnDi_rfEpCoPW_AF4lwcy_kio_VG6Rw1Xxqr0S8Qxt8eYhp6q8Hv4fNuavndsD3HC7M17g4r0X5etsTNJ1ZJmaBDhbDy7TR5Z4oxGQDVqZolb8K6Fh7vkp9AFTzJM7dDHKbhBjXavAu3teWhQfBdvMInjKq=s1600\", source: TooManyRedirects })\n    `content/en/docs/concepts/architecture/cloud-controller.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/components-of-kubernetes.svg`)\n    `content/en/docs/concepts/security/controlling-access.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/admin/access-control-overview.svg`)\n    `content/en/docs/setup/production-environment/tools/kubeadm/ha-topology.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/kubeadm/kubeadm-ha-topology-stacked-etcd.svg`)\n    `content/en/blog/_posts/2016-08-00-Challenges-Remotely-Managed-Onpremise-Kubernetes-Cluster.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh3.googleusercontent.com/Tn67P9fhhPqCNF6xYl6mfVehG8AtLcLOM0NMW3YukBkWB5cSpYofkLQo1vrqsZiDBON05GC4ZQwWgEV9YBdoNA6Hzy_loS0cvT3BzkxmLesk6UsX_xugsrGppJD-Mc8fjHIF2QrU\", source: TimedOut })\n    `content/en/docs/tasks/extend-kubernetes/configure-aggregation-layer.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/aggregation-api-auth-flow.png`)\n    `content/en/docs/tasks/access-application-cluster/web-ui-dashboard.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/ui-dashboard.png`)\n    `content/en/docs/tasks/administer-cluster/memory-manager.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/memory-manager-diagram.svg`)\n    `content/en/docs/tasks/administer-cluster/ip-masq-agent.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/ip-masq.png`)\n    `content/en/docs/tasks/administer-cluster/reserve-compute-resources.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/docs/node-capacity.svg`)\n    `content/en/docs/tasks/administer-cluster/migrating-from-dockershim/check-if-dockershim-removal-affects-you.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/blog/2018-05-24-kubernetes-containerd-integration-goes-ga/cri-containerd.png`)\n    `content/en/releases/release.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/__tmp_a364ac3dbdf91ab5/kubernetes/./images/releases/release-cycle.jpg`)\n    `content/en/blog/_posts/2017-05-00-Managing-Microservices-With-Istio-Service-Mesh.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FIBu8djgJaJV0G3rsCs_vMAwr33BMVlZPG-c_GNt45N3mzHtFAVkesycJClMvWGl_wyY9b7pJYZzWepMTKNZAzwQnM3XCKav8Na7WNY5V-gGLwy9P-DlVmhJWAD57MVuZUMfHzuMqMH6xrG3PDM9C-CnBVH3PHZkVF-6vyyGhtsn37XNXh8WiXhNlPzTkiX1ttBxUFDkNurglppNAkiQDUVB8omxlMuU1bklQcR98KCKzD7ooR85bUfhtF-PGCoftIDIui8SEb1VZp2fu0TP-P_AyxlNBlG7pCEv22PXxXX4wjvHGtLIdfhvN_jTWBElWQ_ReIXtqbdVRUMFyxlHVEx1HSFcOOu5Vq9dt1h_e3p4sN2dsctp8A6C1qbEbTzJV-AGQrV1zU8-ioEJkNo_ypCkw1idBMMsQzmcIGxO1McFrsxU9P1efY5nKFTZ2lPmBgqW1f2y6K66bVJqUrd0nR5CLXfExrEuvaItAYM01kaIULLsH6KF0symfqDCEkR-jV1eONw4gvznek1TWsxR_QBAndeUenLKnwoleMg_cCn-hI=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-07-00-Cross-Cluster-Services.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HUfdkYTp_5vKBdzqIK9GOzCX5Qmvcn9d2ePc11gGw17ezrD06MXhUNE5IaMd1wxwiNS5G0JkHgEcmjuNg3gnCZ0PSRMqqwkE0svt4u6eAtozEoOb_j-HEwsV7IwC9zJ88X5QIVvQ0-pEXm6S3qvDs_NZXTpn0yzrn9RRAnsgOr8p5c26OTyI2CwaMUyrf-17ZNtIryFBMMbzxAYv0exfcZljTlIX-mG5OnocUTV5I5hJjm1YiI2TEJsmwM1QotsMoXrBKtytkXfgwfP0tFkUZSI5HKdV-x27sOiHI0pgTmVCsbChaY9GNK2UiOSVBSHfn-mG9DXJwBH8ZuY3bGafF1g8BsGxmbb64LOeb-ppNoGoc1hsPaYwqE0uJP2mEZCx8lNM123zhq6dl7ITOrvbhK6pdzMrUul4m7OfA2THjP2AdICNp9qacOaz6d7vvnmkLDYRzP-muBAa_WwQjYHwWMLhnmrQU34VUyr8D19lQlffZt56QcUJ6EpP8-3r3BPvzk3xZnLZybToDXTFkeZwV70-RnYJ3pBJUt-dJFWy98ULuX=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-04-00-Building-Awesome-User-Interfaces-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Fe_uCgu1-sWldPZz45D4SiS7-0Rf8UYfCyeZ4W10hfg0FZMvIufpuI4AV33Huzgp4a2W3oNeGcCwmfRsGyFki1faWgWmHu_-G7rAnPnDM3MASF7SrokhnCMUNgKF2AAm103QZaHx5Qhbcy1t1Zgbt_T4j0nJEyiTShCz5DM-0ZO4c2pNQuqfT2tMuCvWmA0M4t_aqAae1F1hdGg8QcEt2LN1j_fm-GhqdQsjnmYsVXjhXiP3VyGAGxUowRmIuH5Zr6KDTjYHVsmzPp6ArC8oQdQdId0oG03juDSTr6NDSu43Sn6Go1_zN1kVR1mdh4CZCLYmgtNSyK6sIlaDSD3DKc4HmvbnbeXc7wldX1FsdPSPW83DX5weskNZ_rARcshfqUhsgwPKb0Qw0_QKOBRYxcn2B3kPCkyEj2nmlG-lNgNUt3HwJsH8PgdJ5MPb7uq8Wqg1fSNIqTIZrSxft1w7fRkwX2i3wVBD7FP2KLH2mikncjdQWbO71d_jPsK-aQabakSYK_xzHSgo2t37QO8h8jZnm9aHk1xsD_CRgn1x7g2dyh=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-07-00-How-Did-Quake-Demo-From-Dockercon-Work.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh4.googleusercontent.com/MectR1Mh-7XA0Q5cqiQPrtNxnBE-EDkKR6XJQfazYcIJg3mSbWTcV9EyRfhu6VbIP_sFdMVCXRH1l8YYIuG05SiuO_WqaXPvOf41j0CN8eD9djd6E4joS9Y5Aljlpi64NnffiRY\", source: TimedOut })\n\nstarted creating a knowledge-base of tera\n\nfinished creating a knowledge-base of tera: it took 16 seconds\n\n----- tera (0 errors) -----\n\n\nstarted creating a knowledge-base of neovim\n\nfinished creating a knowledge-base of neovim: it took 45 seconds\n\n----- neovim (0 errors) -----\n\n\nstarted creating a knowledge-base of nushell\n\nfinished creating a knowledge-base of nushell: it took 73 seconds\n\n----- nushell (2 errors) -----\n    `book/installation.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://repology.org/badge/vertical-allrepos/nushell.svg\", source: hyper_util::client::legacy::Error(Connect, Error { code: -9836, message: \"bad protocol version\" }) })\n    `blog/2024-04-30-30k_blog.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://starchart.cc/nushell/nushell.svg?variant=adaptive\", source: TimedOut })\n\nstarted creating a knowledge-base of nix\n\nfinished creating a knowledge-base of nix: it took 24 seconds\n\n----- nix (0 errors) -----\n\n\nstarted creating a knowledge-base of nixpkgs\n\nfinished creating a knowledge-base of nixpkgs: it took 50 seconds\n\n----- nixpkgs (1 errors) -----\n    `pkgs/misc/documentation-highlighter/README.md`: FileReaderError(\"GET https://packagephobia.now.sh/badge?p=highlight.js returned 429.\")\n\nstarted creating a knowledge-base of zed\n\nfinished creating a knowledge-base of zed: it took 138 seconds\n\n----- zed (0 errors) -----\n"
        },
        "real_repos_regression": {
            "seq": 35,
            "pass": true,
            "error": null,
            "elapsed_ms": 19786,
            "message": null
        },
        "subdir": {
            "seq": 36,
            "pass": true,
            "error": null,
            "elapsed_ms": 25969,
            "message": null
        },
        "tfidf": {
            "seq": 37,
            "pass": true,
            "error": null,
            "elapsed_ms": 28892,
            "message": null
        },
        "korean": {
            "seq": 38,
            "pass": true,
            "error": null,
            "elapsed_ms": 8115,
            "message": null
        },
        "merge": {
            "seq": 39,
            "pass": true,
            "error": null,
            "elapsed_ms": 52207,
            "message": null
        },
        "summary": {
            "seq": 40,
            "pass": true,
            "error": null,
            "elapsed_ms": 20216,
            "message": null
        },
        "external_bases": {
            "seq": 41,
            "pass": true,
            "error": null,
            "elapsed_ms": 125841,
            "message": null
        },
        "end_to_end dummy": {
            "seq": 42,
            "pass": true,
            "error": null,
            "elapsed_ms": 78208,
            "message": "--- summary of the knowledge-base ---\n\ndummy\n\n\n--- What makes ragit special? ---\n\ndummy\n\n\n--- What makes ragit special? (super rerank mode) ---\n\ndummy\n"
        },
        "end_to_end llama3.3-70b": {
            "seq": 43,
            "pass": true,
            "error": null,
            "elapsed_ms": 118570,
            "message": "--- summary of the knowledge-base ---\n\nThe knowledge-base is made up of markdown and text files. It's about RAGIT, a git-like software for creating and sharing knowledge-bases. The files are structured into directories like `commands` and `server`, and individual files like `index.md` and `intro.txt`, describing RAGIT's features and workflow.\n\n\n--- What makes ragit special? ---\n\nAccording to the documents, RAGIT is special because of the following features:\n\n1. It adds a title and summary to every chunk, making it easy for AIs to re-rank chunks.\n2. It uses tfidf scores instead of vector searches, and asks an AI to generate keywords from a query before running the search.\n3. It supports markdown files with images.\n4. It supports multi-turn queries (experimental), which allows users to ask follow-up questions and provides context for the AI to answer.\n5. It allows users to clone and push knowledge-bases, similar to git.\n\nThese features make RAGIT unique and powerful compared to other RAG frameworks.\n\n---- sources ----\n1st chunk of index.md (cbcfc6a9)\n1st chunk of multi_turn.md (2400517a)\n1st chunk of models.md (1b6049bb)\n\n\n--- What makes ragit special? (super rerank mode) ---\n\nRagit is special because of several features that distinguish it from other RAG frameworks. These features include:\n\n1. **Adding a title and summary to every chunk**: This makes it easier for AIs to re-rank chunks.\n2. **Using tfidf scores instead of vector searches**: Ragit first asks an AI to generate keywords from a query, then runs a tfidf search with the keywords.\n3. **Support for markdown files with images**: This allows for more versatile and visual knowledge-bases.\n4. **Support for multi-turn queries (experimental)**: This enables users to ask follow-up questions and receive context-aware answers.\n5. **Ability to clone and push knowledge-bases like git**: This makes it easy to share and collaborate on knowledge-bases.\n\nThese features combined make Ragit a unique and powerful tool for creating and sharing knowledge-bases.\n\n---- sources ----\n1st chunk of multi_turn.md (2400517a)\n1st chunk of index.md (cbcfc6a9)\n"
        },
        "audit llama3.3-70b": {
            "seq": 44,
            "pass": true,
            "error": null,
            "elapsed_ms": 17167,
            "message": null
        },
        "logs llama3.3-70b": {
            "seq": 45,
            "pass": true,
            "error": null,
            "elapsed_ms": 6826,
            "message": null
        },
        "prompts dummy": {
            "seq": 46,
            "pass": true,
            "error": null,
            "elapsed_ms": 9355,
            "message": null
        },
        "prompts gpt-4o-mini": {
            "seq": 47,
            "pass": true,
            "error": null,
            "elapsed_ms": 65773,
            "message": null
        },
        "prompts gemini-2.0-flash": {
            "seq": 48,
            "pass": true,
            "error": null,
            "elapsed_ms": 55178,
            "message": null
        },
        "prompts claude-3.5-sonnet": {
            "seq": 49,
            "pass": true,
            "error": null,
            "elapsed_ms": 116512,
            "message": null
        },
        "empty dummy": {
            "seq": 50,
            "pass": true,
            "error": null,
            "elapsed_ms": 11736,
            "message": null
        },
        "empty llama3.3-70b": {
            "seq": 51,
            "pass": true,
            "error": null,
            "elapsed_ms": 13049,
            "message": null
        },
        "server_chat llama3.3-70b": {
            "seq": 52,
            "pass": true,
            "error": null,
            "elapsed_ms": 34588,
            "message": null
        },
        "server_chat gemini-2.0-flash": {
            "seq": 53,
            "pass": true,
            "error": null,
            "elapsed_ms": 46951,
            "message": null
        },
        "images2 gpt-4o-mini": {
            "seq": 54,
            "pass": true,
            "error": null,
            "elapsed_ms": 12076,
            "message": null
        },
        "images3 gpt-4o-mini": {
            "seq": 55,
            "pass": true,
            "error": null,
            "elapsed_ms": 11312,
            "message": null
        },
        "pdl gpt-4o-mini": {
            "seq": 56,
            "pass": true,
            "error": null,
            "elapsed_ms": 9248,
            "message": null
        },
        "pdf gpt-4o-mini": {
            "seq": 57,
            "pass": false,
            "error": "\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 739, in <lambda>\n    (\"pdf gpt-4o-mini\", lambda: pdf(test_model=\"gpt-4o-mini\")),\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/pdf.py\", line 62, in pdf\n    assert any([pdf[\"name\"] in r[\"source\"] for r in search_result])\nAssertionError\n",
            "elapsed_ms": 162462,
            "message": null
        },
        "svg gpt-4o-mini": {
            "seq": 58,
            "pass": false,
            "error": "\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 740, in <lambda>\n    (\"svg gpt-4o-mini\", lambda: svg(test_model=\"gpt-4o-mini\")),\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/svg.py\", line 130, in svg\n    assert \"ragit\" in cargo_run([\"pdl\", \"test1.pdl\"], stdout=True).lower()\nAssertionError\n",
            "elapsed_ms": 17953,
            "message": null
        },
        "web_images gpt-4o-mini": {
            "seq": 59,
            "pass": true,
            "error": null,
            "elapsed_ms": 51991,
            "message": null
        },
        "images2 claude-3.5-sonnet": {
            "seq": 60,
            "pass": true,
            "error": null,
            "elapsed_ms": 12388,
            "message": null
        },
        "extract_keywords dummy": {
            "seq": 61,
            "pass": true,
            "error": null,
            "elapsed_ms": 3092,
            "message": null
        },
        "extract_keywords gpt-4o-mini": {
            "seq": 62,
            "pass": true,
            "error": null,
            "elapsed_ms": 11127,
            "message": null
        },
        "orphan_process llama3.3-70b": {
            "seq": 63,
            "pass": true,
            "error": null,
            "elapsed_ms": 113217,
            "message": null
        },
        "write_lock llama3.3-70b": {
            "seq": 64,
            "pass": true,
            "error": null,
            "elapsed_ms": 74664,
            "message": null
        },
        "ragit_api command-r": {
            "seq": 65,
            "pass": true,
            "error": null,
            "elapsed_ms": 1692,
            "message": null
        },
        "query_options llama3.3-70b": {
            "seq": 66,
            "pass": true,
            "error": null,
            "elapsed_ms": 8913,
            "message": null
        },
        "query_with_schema llama3.3-70b": {
            "seq": 67,
            "pass": true,
            "error": null,
            "elapsed_ms": 3574,
            "message": null
        },
        "models_init": {
            "seq": 68,
            "pass": true,
            "error": null,
            "elapsed_ms": 892,
            "message": null
        },
        "test_home_config_override": {
            "seq": 69,
            "pass": true,
            "error": null,
            "elapsed_ms": 451,
            "message": null
        },
        "config": {
            "seq": 70,
            "pass": true,
            "error": null,
            "elapsed_ms": 74506,
            "message": null
        },
        "migrate": {
            "seq": 71,
            "pass": false,
            "error": "Command '['cargo', 'run', '--release', '--no-default-features', '--', 'migrate']' returned non-zero exit status 101.\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/tests.py\", line 791, in <module>\n    result[\"result\"][\"fail\"] += 1\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/migrate.py\", line 110, in migrate\n    cargo_run([\"migrate\"])\n  File \"/Users/baehyunsol/Documents/Rust/ragit-versions/ragit-0.4.2-dev/tests/utils.py\", line 88, in cargo_run\n    result = subprocess.run(args, **kwargs)\n  File \"/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/subprocess.py\", line 528, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['cargo', 'run', '--release', '--no-default-features', '--', 'migrate']' returned non-zero exit status 101.\n",
            "elapsed_ms": 173555,
            "message": null
        },
        "migrate2": {
            "seq": 72,
            "pass": true,
            "error": null,
            "elapsed_ms": 257179,
            "message": null
        },
        "migrate3": {
            "seq": 73,
            "pass": true,
            "error": null,
            "elapsed_ms": 211435,
            "message": null
        }
    },
    "result": {
        "total": 74,
        "complete": 74,
        "pass": 68,
        "fail": 6,
        "remaining": 0
    },
    "coverage": [
        "",
        "--file",
        "add",
        "add --all",
        "add --all --force",
        "add --dry-run",
        "add --dry-run --force",
        "add --dry-run --reject",
        "add --file",
        "add --force",
        "add --force -f",
        "add --invalid-flag",
        "add --reject",
        "add -C",
        "add -c",
        "add -f",
        "archive-creat",
        "archive-create",
        "archive-create --configs --no-prompts --output",
        "archive-create --force --no-configs --no-prompts --output",
        "archive-create --no-configs --no-prompts --output",
        "archive-create --no-configs --no-prompts --output --size-limit",
        "archive-create --no-configs --output --prompts",
        "archive-create -o",
        "archive-extract --force --output",
        "archive-extract --output",
        "archive-extract -o",
        "audit --json --only-tokens",
        "audit --json --only-tokens -c",
        "audit -c",
        "build",
        "build --invalid-flag",
        "build --jobs",
        "build -C",
        "cat-file",
        "cat-file --json",
        "cat-file -C",
        "check",
        "check --recover",
        "clone",
        "config --get",
        "config --get-all",
        "config --invalid-flag",
        "config --set",
        "extract-keywords",
        "extract-keywords --full-schema",
        "extract-keywords --full-schema --json",
        "extract-keywords --json",
        "gc --audit",
        "gc --images",
        "gc --logs",
        "ii-build",
        "ii-reset",
        "ii-status",
        "init",
        "init -C",
        "invalid-command",
        "ls-chunks",
        "ls-chunks --json",
        "ls-chunks --json --stat-only",
        "ls-chunks --json --uid-only",
        "ls-files",
        "ls-files --cached --json --name-only",
        "ls-files --json",
        "ls-files --json --name-only",
        "ls-files --json --name-only --processed",
        "ls-files --json --name-only --staged",
        "ls-files --json --stat-only",
        "ls-images",
        "ls-images --json",
        "ls-images --json --stat-only",
        "ls-images --json --uid-only",
        "ls-images --uid-only",
        "ls-models --json",
        "ls-models --json --name-only",
        "ls-models --json --selected",
        "ls-models --name-only --selected",
        "ls-terms",
        "ls-terms --json --term-only",
        "merge",
        "merge --force --prefix",
        "merge --prefix",
        "merge --prefix --reject",
        "meta --get",
        "meta --get-all --json",
        "meta --remove",
        "meta --set",
        "migrate",
        "model --all --existing-only --fetch --remote",
        "model --all --fetch --remote",
        "model --all --remove",
        "model --existing-only --fetch --remote",
        "model --fetch --remote",
        "model --json --remote --search",
        "model --json --search",
        "model --remove",
        "pdl",
        "pdl --context",
        "pdl --context --log --model",
        "pdl --context --model",
        "pdl --context --model --no-strict",
        "pdl --context --model --strict",
        "pdl --log --model",
        "pdl --log --model --schema",
        "pdl --model",
        "pull",
        "push",
        "push --configs --prompts --remote",
        "push --configs --remote",
        "push --remote",
        "qeury",
        "query",
        "query --agent",
        "query --disable-rag",
        "query --iterative",
        "query --josn",
        "query --max-retrieval",
        "query --max-summaries",
        "query --model",
        "query --schema",
        "query --super-rerank",
        "query -json",
        "remove",
        "remove --all",
        "remove --all --auto",
        "remove --all --auto --dry-run",
        "remove --all --processed",
        "remove --all --staged",
        "remove --dry-run --processed",
        "remove --dry-run --staged",
        "remove --processed",
        "remove --staged",
        "remove --staged -r",
        "remove -C",
        "remove -r",
        "summary",
        "summary --cached",
        "summary --force",
        "summary --remove",
        "summary --set",
        "tfidf",
        "tfidf --json",
        "tfidf --json --limit",
        "tfidf --limit",
        "tfidf --limit --uid-only",
        "uid",
        "version",
        "version --build-options --json"
    ]
}