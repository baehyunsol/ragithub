{
    "meta": {
        "complete": true,
        "started_at": "2025-07-09 10:06:45.319427Z",
        "commit": "a246185527da8f79ac5d0efa556cf4dd198a827b",
        "platform": {
            "cargo_version": "cargo 1.90.0-nightly (930b4f62c 2025-06-28)",
            "rustc_version": "rustc 1.90.0-nightly (f26e58023 2025-06-30)",
            "python_version": "3.11.7",
            "platform": "macOS-14.3.1-arm64-arm-64bit"
        },
        "ragit_version": "ragit 0.4.2-dev",
        "rand_seed": 20250709100645,
        "ended_at": "2025-07-09 12:03:26.241876Z",
        "elapsed_ms": 7000922,
        "commit_title": "fix doc warning",
        "commit_message": ""
    },
    "tests": {
        "cargo_tests": {
            "seq": 0,
            "pass": false,
            "error": "\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 22.00s\n     Running unittests src/lib.rs (target/debug/deps/ragit-3c3ca91d6068e1ba)\n     Running unittests src/main.rs (target/debug/deps/rag-9ca8ad477c356ce8)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_add_sub ... ok\ntest uid::tests::uid_endec ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `release` profile [optimized] target(s) in 9.38s\n     Running unittests src/lib.rs (target/release/deps/ragit-91813fd2df8ffe36)\n     Running unittests src/main.rs (target/release/deps/rag-ad4750ff55e180ab)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 20.32s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test --release --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\n    Finished `release` profile [optimized] target(s) in 55.91s\n     Running unittests src/lib.rs (target/release/deps/ragit-f07a29336f444666)\n     Running unittests src/main.rs (target/release/deps/rag-636fd1bfe9cfdf9c)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo doc --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 24.20s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/api: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 357 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/api: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/pdl: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 197 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/pdl: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 444 packages to latest Rust 1.90.0-nightly compatible versions\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 36.14s\n     Running unittests src/lib.rs (target/debug/deps/ragit_server-7fd07d0d2f03ddd7)\n     Running unittests src/main.rs (target/debug/deps/ragit_server-e21e0613e585ae5f)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `release` profile [optimized] target(s) in 59.09s\n     Running unittests src/lib.rs (target/release/deps/ragit_server-cbd76591eb6c88c6)\n     Running unittests src/main.rs (target/release/deps/ragit_server-55d97cd3231179eb)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 32.84s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/crates/server/target/doc/ragit_server/index.html\n\n\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/tests.py\", line 781, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/cargo_tests.py\", line 24, in cargo_tests\n    raise Exception(\"\\n\\n\".join(errors))\nException: \n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 22.00s\n     Running unittests src/lib.rs (target/debug/deps/ragit-3c3ca91d6068e1ba)\n     Running unittests src/main.rs (target/debug/deps/rag-9ca8ad477c356ce8)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_add_sub ... ok\ntest uid::tests::uid_endec ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest uid::tests::uid_save_and_load ... ok\ntest index::file::markdown::tests::markdown_test ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `release` profile [optimized] target(s) in 9.38s\n     Running unittests src/lib.rs (target/release/deps/ragit-91813fd2df8ffe36)\n     Running unittests src/main.rs (target/release/deps/rag-ad4750ff55e180ab)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 20.32s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo test --release --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 6 tests\ntest uid::tests::uid_endec ... ok\ntest uid::tests::uid_add_sub ... ok\ntest chunk::multi_modal::into_multi_modal_contents_test ... ok\ntest chunk::tests::test_merge_and_convert_chunks ... ok\ntest index::file::markdown::tests::markdown_test ... ok\ntest uid::tests::uid_save_and_load ... ok\n\ntest result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit` (lib test) generated 6 warnings (6 duplicates)\n    Finished `release` profile [optimized] target(s) in 55.91s\n     Running unittests src/lib.rs (target/release/deps/ragit-f07a29336f444666)\n     Running unittests src/main.rs (target/release/deps/rag-636fd1bfe9cfdf9c)\n   Doc-tests ragit\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit: cargo doc --features=csv,korean,pdf,svg\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 24.20s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/target/doc/ragit/index.html and 1 other file\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/api: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 357 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/api: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:184:36\n    |\n184 |     let Pdl { messages, schema } = parse_pdl(\n    |                                    ^^^^^^^^^\n...\n189 |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n188 -         true,\n    |\n\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/tests.rs:43:43\n    |\n43  |     let Pdl { messages: messages1, .. } = parse_pdl_from_file(\n    |                                           ^^^^^^^^^^^^^^^^^^^\n...\n47  |         true,\n    |         ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n46  -         true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/tests.rs:49:43\n    |\n49  |     let Pdl { messages: messages2, .. } = parse_pdl(\n    |                                           ^^^^^^^^^\n...\n54  |         true,\n    |         ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> /Users/baehyunsol/Documents/Rust/ragit/crates/pdl/src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n53  -         true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-api` (lib test) due to 3 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/pdl: cargo test\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 197 packages to latest Rust 1.90.0-nightly compatible versions\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/pdl: cargo test --release\n\n### status_code ###\n101\n\n### stdout ###\n\n\n### stderr ###\nerror[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> src/lib.rs:425:40\n    |\n425 |         let Pdl { messages, schema } = parse_pdl_from_file(\n    |                                        ^^^^^^^^^^^^^^^^^^^\n...\n429 |             true,\n    |             ---- unexpected argument #4 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:101:8\n    |\n101 | pub fn parse_pdl_from_file(\n    |        ^^^^^^^^^^^^^^^^^^^\nhelp: remove the extra argument\n    |\n428 -             true,\n    |\n\nerror[E0061]: this function takes 4 arguments but 5 arguments were supplied\n   --> src/lib.rs:457:40\n    |\n457 |         let Pdl { messages, schema } = parse_pdl(\n    |                                        ^^^^^^^^^\n...\n466 |             true,\n    |             ---- unexpected argument #5 of type `bool`\n    |\nnote: function defined here\n   --> src/lib.rs:116:8\n    |\n116 | pub fn parse_pdl(\n    |        ^^^^^^^^^\nhelp: remove the extra argument\n    |\n465 -             true,\n    |\n\nFor more information about this error, try `rustc --explain E0061`.\nerror: could not compile `ragit-pdl` (lib test) due to 2 previous errors\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo test\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\n    Updating crates.io index\n     Locking 444 packages to latest Rust 1.90.0-nightly compatible versions\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 36.14s\n     Running unittests src/lib.rs (target/debug/deps/ragit_server-7fd07d0d2f03ddd7)\n     Running unittests src/main.rs (target/debug/deps/ragit_server-e21e0613e585ae5f)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo test --release\n\n### status_code ###\n0\n\n### stdout ###\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: unreachable pattern\n  --> src/methods/search.rs:77:21\n   |\n76 |                     ChunkSource::File { path, .. } => path == &file || path.starts_with(&dir),\n   |                     ------------------------------ matches all the relevant values\n77 |                     _ => false,\n   |                     ^ no value can reach this\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: unreachable pattern\n  --> src/models/chunk.rs:40:13\n   |\n39 |             ChunkSource::File { path, index, page } => (Some(path.to_string()), Some(*index), page.clone()),\n   |             --------------------------------------- matches all the relevant values\n40 |             _ => (None, None, None),\n   |             ^ no value can reach this\n\nwarning: `ragit-server` (lib) generated 2 warnings\nwarning: `ragit` (lib) generated 6 warnings\nwarning: `ragit-server` (lib test) generated 2 warnings (2 duplicates)\n    Finished `release` profile [optimized] target(s) in 59.09s\n     Running unittests src/lib.rs (target/release/deps/ragit_server-cbd76591eb6c88c6)\n     Running unittests src/main.rs (target/release/deps/ragit_server-55d97cd3231179eb)\n   Doc-tests ragit_server\n\n\n\n\n#####################\n### path: command ###\n/Users/baehyunsol/Documents/Rust/ragit/crates/server: cargo doc\n\n### status_code ###\n0\n\n### stdout ###\n\n\n### stderr ###\nwarning: unreachable pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:323:13\n    |\n319 |             ChunkSource::File { path, index, page: _ } => {\n    |             ------------------------------------------ matches all the relevant values\n...\n323 |             _ => { unmergeable_chunks.push(chunk); },\n    |             ^ no value can reach this\n    |\n    = note: `#[warn(unreachable_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:374:5\n    |\n374 | /     let ChunkSource::File {\n375 | |         path: pre_path,\n376 | |         index: pre_index,\n377 | |         page: pre_page,\n378 | |     } = pre.source.clone() else { unreachable!() };\n    | |__________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n\nwarning: irrefutable `let...else` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/chunk.rs:379:5\n    |\n379 | /     let ChunkSource::File {\n380 | |         path: post_path,\n381 | |         index: post_index,\n382 | |         page: post_page,\n383 | |     } = post.source.clone() else { unreachable!() };\n    | |___________________________^\n    |\n    = note: this pattern will always match, so the `else` clause is useless\n    = help: consider removing the `else` clause\n\nwarning: irrefutable `if let` pattern\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/index/commands/recover.rs:113:16\n    |\n113 |             if let ChunkSource::File { path, index, page: _ } = &chunk_.source {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`\n\nwarning: type `SearchType` is more private than the item `ActionResult::Search::r#type`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:340:9\n    |\n340 |         r#type: SearchType,\n    |         ^^^^^^^^^^^^^^^^^^ field `ActionResult::Search::r#type` is reachable at visibility `pub`\n    |\nnote: but type `SearchType` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:616:1\n    |\n616 | enum SearchType {\n    | ^^^^^^^^^^^^^^^\n    = note: `#[warn(private_interfaces)]` on by default\n\nwarning: type `ArgumentTurn` is more private than the item `ActionState::argument_turns`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:466:5\n    |\n466 |     pub argument_turns: Vec<ArgumentTurn>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ActionState::argument_turns` is reachable at visibility `pub(in crate::agent)`\n    |\nnote: but type `ArgumentTurn` is only usable at visibility `pub(self)`\n   --> /Users/baehyunsol/Documents/Rust/ragit/src/agent/action.rs:599:1\n    |\n599 | struct ArgumentTurn {\n    | ^^^^^^^^^^^^^^^^^^^\n\nwarning: `ragit` (lib) generated 6 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 32.84s\n   Generated /Users/baehyunsol/Documents/Rust/ragit/crates/server/target/doc/ragit_server/index.html\n\n\n",
            "elapsed_ms": 486810,
            "message": null
        },
        "cargo_features": {
            "seq": 1,
            "pass": true,
            "error": null,
            "elapsed_ms": 205093,
            "message": null
        },
        "add_and_rm": {
            "seq": 2,
            "pass": true,
            "error": null,
            "elapsed_ms": 111624,
            "message": null
        },
        "add_and_rm2": {
            "seq": 3,
            "pass": true,
            "error": null,
            "elapsed_ms": 39140,
            "message": null
        },
        "ignore": {
            "seq": 4,
            "pass": true,
            "error": null,
            "elapsed_ms": 12431,
            "message": null
        },
        "recover": {
            "seq": 5,
            "pass": true,
            "error": null,
            "elapsed_ms": 10380,
            "message": null
        },
        "clone": {
            "seq": 6,
            "pass": true,
            "error": null,
            "elapsed_ms": 150849,
            "message": null
        },
        "clone_empty": {
            "seq": 7,
            "pass": true,
            "error": null,
            "elapsed_ms": 12160,
            "message": null
        },
        "pull": {
            "seq": 8,
            "pass": true,
            "error": null,
            "elapsed_ms": 15961,
            "message": null
        },
        "pull_ragithub": {
            "seq": 9,
            "pass": true,
            "error": null,
            "elapsed_ms": 48865,
            "message": null
        },
        "server": {
            "seq": 10,
            "pass": true,
            "error": null,
            "elapsed_ms": 524619,
            "message": null
        },
        "server_ai_model": {
            "seq": 11,
            "pass": true,
            "error": null,
            "elapsed_ms": 4642,
            "message": null
        },
        "server_permission": {
            "seq": 12,
            "pass": true,
            "error": null,
            "elapsed_ms": 73716,
            "message": null
        },
        "server_file_tree": {
            "seq": 13,
            "pass": true,
            "error": null,
            "elapsed_ms": 22366,
            "message": null
        },
        "fetch_models": {
            "seq": 14,
            "pass": true,
            "error": null,
            "elapsed_ms": 40251,
            "message": null
        },
        "cli": {
            "seq": 15,
            "pass": true,
            "error": null,
            "elapsed_ms": 21009,
            "message": null
        },
        "outside": {
            "seq": 16,
            "pass": true,
            "error": null,
            "elapsed_ms": 10536,
            "message": null
        },
        "archive": {
            "seq": 17,
            "pass": true,
            "error": null,
            "elapsed_ms": 418630,
            "message": null
        },
        "many_chunks": {
            "seq": 18,
            "pass": true,
            "error": null,
            "elapsed_ms": 356485,
            "message": null
        },
        "erroneous_llm": {
            "seq": 19,
            "pass": true,
            "error": null,
            "elapsed_ms": 263511,
            "message": null
        },
        "pdl_escape": {
            "seq": 20,
            "pass": true,
            "error": null,
            "elapsed_ms": 13933,
            "message": null
        },
        "many_jobs": {
            "seq": 21,
            "pass": true,
            "error": null,
            "elapsed_ms": 54298,
            "message": null
        },
        "ls": {
            "seq": 22,
            "pass": true,
            "error": null,
            "elapsed_ms": 300904,
            "message": null
        },
        "meta": {
            "seq": 23,
            "pass": true,
            "error": null,
            "elapsed_ms": 6672,
            "message": null
        },
        "symlink": {
            "seq": 24,
            "pass": true,
            "error": null,
            "elapsed_ms": 9686,
            "message": null
        },
        "gh_issue_20": {
            "seq": 25,
            "pass": true,
            "error": null,
            "elapsed_ms": 7364,
            "message": null
        },
        "ii": {
            "seq": 26,
            "pass": false,
            "error": "tfidf result on term 'advertis produc whether necessari search' is not close enough. error: `answer[1] not in approximation`, answer: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', 'c5406542eea53121aab7f4743be81cf947da75ce007f3c180000000100000377', '27b6fc2b9f4e9bd9a5f089ffc5d90cdf1c584013bd30d1a00000000100000fa9', '9ced635e349957dee5be69535354356fb8638c0bc871fb7f00000001000007a5', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e343362a5dd71a44378d83653d0d2c55ff01b6d907e3d7420000000100000801', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2'], approximation: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2', 'aaca4b0160f181c6635c770f2faa237611237c9159d4f2de0000000100000fa2', 'b5960bc66c1407deff56f522e1dc06c89b435e5bbec067370000000100000d88', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', '8601f65738a3bc5b457682822aabd919351a261e9c653dcd0000000100000fa7', '3b51f2a1241ff95f03406ad001d1a583489b1c9ebae929160000000100000a72']\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/ii.py\", line 100, in ii_worker\n    raise AssertionError(f\"answer[{i}] not in approximation\")\nAssertionError: answer[1] not in approximation\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/tests.py\", line 781, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/ii.py\", line 49, in ii\n    ii_worker()\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/ii.py\", line 116, in ii_worker\n    raise AssertionError(f\"tfidf result on term '{term}' is not close enough. error: `{e}`, answer: {answer}, approximation: {approximation}\")\nAssertionError: tfidf result on term 'advertis produc whether necessari search' is not close enough. error: `answer[1] not in approximation`, answer: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', 'c5406542eea53121aab7f4743be81cf947da75ce007f3c180000000100000377', '27b6fc2b9f4e9bd9a5f089ffc5d90cdf1c584013bd30d1a00000000100000fa9', '9ced635e349957dee5be69535354356fb8638c0bc871fb7f00000001000007a5', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e343362a5dd71a44378d83653d0d2c55ff01b6d907e3d7420000000100000801', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2'], approximation: ['1b1d98c1d7d571a34cf86a7f2bbec417ddd122f5a52de4280000000100000c15', '52e45c0f1150854d440e7c7dedd85f6d59b395c8aeff3c640000000100000c47', 'c52095466451a4240a9572e4b191e704c110c578be60155d0000000100000d36', 'e8c8f62816bd7ccda2f21296398822bff29e7c9d2f3e2f5e0000000100000e5c', '6c464947dc44f0c3165311044c6db16b34341b51b91f34000000000100000fa2', 'aaca4b0160f181c6635c770f2faa237611237c9159d4f2de0000000100000fa2', 'b5960bc66c1407deff56f522e1dc06c89b435e5bbec067370000000100000d88', 'f4c5567a659291a7a41aae14a66abd0d9a74d9598a920ced0000000100000fa2', '8601f65738a3bc5b457682822aabd919351a261e9c653dcd0000000100000fa7', '3b51f2a1241ff95f03406ad001d1a583489b1c9ebae929160000000100000a72']\n",
            "elapsed_ms": 145923,
            "message": null
        },
        "cat_file": {
            "seq": 27,
            "pass": true,
            "error": null,
            "elapsed_ms": 30763,
            "message": null
        },
        "generous_file_reader": {
            "seq": 28,
            "pass": true,
            "error": null,
            "elapsed_ms": 64770,
            "message": null
        },
        "clean_up_erroneous_chunk": {
            "seq": 29,
            "pass": true,
            "error": null,
            "elapsed_ms": 4380,
            "message": null
        },
        "images": {
            "seq": 30,
            "pass": true,
            "error": null,
            "elapsed_ms": 9191,
            "message": null
        },
        "markdown_reader": {
            "seq": 31,
            "pass": true,
            "error": null,
            "elapsed_ms": 13300,
            "message": null
        },
        "csv_reader": {
            "seq": 32,
            "pass": true,
            "error": null,
            "elapsed_ms": 11074,
            "message": null
        },
        "real_repos": {
            "seq": 33,
            "pass": true,
            "error": null,
            "elapsed_ms": 1066641,
            "message": "started creating a knowledge-base of ragit\n\nfinished creating a knowledge-base of ragit: it took 28 seconds\n\n----- ragit (0 errors) -----\n\n\nstarted creating a knowledge-base of git\n\nfinished creating a knowledge-base of git: it took 62 seconds\n\n----- git (0 errors) -----\n\n\nstarted creating a knowledge-base of postgresql\n\nfinished creating a knowledge-base of postgresql: it took 93 seconds\n\n----- postgresql (0 errors) -----\n\n\nstarted creating a knowledge-base of rustc\n\nfinished creating a knowledge-base of rustc: it took 24 seconds\n\n----- rustc (0 errors) -----\n\n\nstarted creating a knowledge-base of docker\n\nfinished creating a knowledge-base of docker: it took 87 seconds\n\n----- docker (37 errors) -----\n    `layouts/shortcodes/admin-sso-config.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./docker-hub/images/saml-create-connection.png`)\n    `content/get-started/docker-concepts/running-containers/sharing-local-files.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/running-containers/images/mounted-files.webp?border=true`)\n    `content/get-started/docker-concepts/building-images/understanding-image-layers.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/building-images/images/container_image_layers.webp?border=true`)\n    `content/get-started/docker-concepts/building-images/multi-stage-builds.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/building-images/images/multi-stage-builds-spring-initializer.webp?border=true`)\n    `content/get-started/docker-concepts/the-basics/what-is-a-container.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/the-basics/images/search-the-docker-image.webp?border=true&w=1000&h=700`)\n    `content/get-started/docker-concepts/the-basics/what-is-a-registry.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/the-basics/images/dockerhub-signup.webp?border`)\n    `content/get-started/docker-concepts/the-basics/what-is-docker-compose.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/the-basics/images/todo-list-delete.webp?w=930&h=400`)\n    `content/get-started/docker-concepts/the-basics/what-is-an-image.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/docker-concepts/the-basics/images/click-image.webp?border=true&w=1050&h=400`)\n    `content/get-started/introduction/get-docker-desktop.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/introduction/../docker-concepts/the-basics/images/access-the-frontend.webp?border=true`)\n    `content/get-started/workshop/07_multi_container.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/get-started/workshop/images/multi-container.webp?w=350h=250`)\n    `content/contribute/components/images.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./assets/images/footer_moby_icon.png`)\n    `content/manuals/engine/storage/drivers/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/storage/drivers/images/container-layers.webp?w=450&h=300`)\n    `content/manuals/engine/storage/drivers/zfs-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/storage/drivers/images/zfs_clones.webp?w=450`)\n    `content/manuals/engine/storage/drivers/btrfs-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/storage/drivers/images/btfs_subvolume.webp?w=350&h=100`)\n    `content/manuals/engine/network/drivers/ipvlan.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/network/drivers/images/macvlan-bridge-ipvlan-l2.webp?w=700`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/services.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/swarm/how-swarm-mode-works/../images/services-diagram.webp?w=550`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/nodes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./engine/swarm/images/swarm-diagram.webp`)\n    `content/guides/java/develop.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/guides/java/images/debug-menu.webp?w=300`)\n    `content/manuals/engine/swarm/how-swarm-mode-works/pki.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./engine/swarm/images/tls.webp?w=600`)\n    `content/manuals/build/building/multi-platform.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./build/images/single-vs-multiplatform-image.svg`)\n    `content/manuals/ai/gordon/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/ai/gordon/../../images/gordon-run-ctr.png`)\n    `content/manuals/ai/mcp-catalog-and-toolkit/toolkit.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./assets/images/mcp_servers.png`)\n    `content/manuals/extensions/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./assets/images/extensions.webp`)\n    `content/manuals/extensions/extensions-sdk/architecture/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/extensions/extensions-sdk/architecture/images/extensions-architecture.png?w=600h=400`)\n    `content/manuals/extensions/private-marketplace.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./assets/images/extensions-private-marketplace.webp`)\n    `content/manuals/scout/policy/scores.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/scout/policy/../images/score-a-shiny.png?w=450px`)\n    `content/manuals/scout/integrations/team-collaboration/slack.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/scout/integrations/team-collaboration/../../images/scout-slack-notification.png?border=true \"Example Slack notification from Docker Scout\"`)\n    `content/manuals/scout/explore/metrics-exporter.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/scout/explore/../images/scout-metrics-prom-target.png \"Docker Scout metrics exporter Prometheus target\"`)\n    `content/manuals/scout/explore/dashboard.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/scout/explore/../images/dashboard-overview.webp?border=true`)\n    `content/manuals/scout/explore/exceptions.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./scout/images/suppressed-cve-cli.png`)\n    `content/manuals/desktop/use-desktop/builds.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/desktop/use-desktop/../images/build-ui-jaeger-screenshot.png \"Screenshot of a build trace in the Jaeger UI\"`)\n    `content/manuals/admin/organization/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./admin/images/org-structure.webp`)\n    `content/manuals/build-cloud/usage.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./build/images/set-default-builder-gui.webp`)\n    `content/manuals/copilot/usage.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/copilot/images/copilot-button.png?w=400px`)\n    `content/manuals/copilot/examples.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/copilot/images/copilot-vuln-report.png?w=500px&border=1`)\n    `content/includes/admin-company-overview.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/./admin/images/docker-admin-structure.webp`)\n    `content/manuals/engine/storage/drivers/device-mapper-driver.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/docker/content/manuals/engine/storage/drivers/images/two_dm_container.webp?w=450&h=100`)\n\nstarted creating a knowledge-base of kubernetes\n\nfinished creating a knowledge-base of kubernetes: it took 413 seconds\n\n----- kubernetes (152 errors) -----\n    `content/en/blog/_posts/2021-08-09-csi-windows-support-with-csi-proxy-reaches-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-08-09-csi-windows-support-with-csi-proxy-reaches-ga/csi-proxy.png`)\n    `content/en/blog/_posts/2019-09-18-kubernetes-1-16-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-09-18-kubernetes-1-16-release-announcement/endpoint-slices.png`)\n    `content/en/blog/_posts/2019-09-24-san-diego-contributor-summit.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-09-24-san-diego-contributor-summit/IMG_2588.JPG`)\n    `content/en/blog/_posts/2021-12-21-admission-controllers-for-container-drift/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/sequence_diagram.svg`)\n    `content/en/blog/_posts/2018-10-01-health-checking-grpc.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-09-30-health-checking-grpc/options.png`)\n    `content/en/blog/_posts/2018-08-02-dynamically-expand-volume-csi.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-08-02-dynamically-expand-volume-csi/csi-diagram.png`)\n    `content/en/blog/_posts/2016-07-00-Update-On-Kubernetes-For-Windows-Server-Containers.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/muN6ySMhN7XhmNU_cuEu7CJbcnNuun_FeNidcvv1QVqtpWxTJUZVnKNDwXj9ttAsLBPDBlMi6l_-_sBxEWYvfK7SVp9bjxVa91VrR60v6Y8P8c5AQEl01Bt1cDTj4uVRPOUBn89e \\\"Wykres\\\" returned 400.\")\n    `content/en/blog/_posts/2018-04-10-container-storage-interface-beta.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog-logging/2018-04-10-container-storage-interface-beta/csi-kubernetes.png`)\n    `content/en/blog/_posts/2021-08-11-memory-manager-moves-to-beta.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-08-11-memory-manager-moves-to-beta/MemoryManagerDiagram.svg \"MemoryManagerDiagram\"`)\n    `content/en/blog/_posts/2016-07-00-Rktnetes-Brings-Rkt-Container-Engine-To-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-k3RRYf70fsg/V4a_-lVypxI/AAAAAAAAAl4/m9lVW0mxw7s35dzLlT4XJO5gdMzy_RBiQCLcB/s640/rkt%2Bstages.png returned 404.\")\n    `content/en/blog/_posts/2020-05-21-wsl2-dockerdesktop-k8s.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-05-21-wsl2-dockerdesktop-k8s/wsl2-windows-store-terminal.png`)\n    `content/en/blog/_posts/2018-07-20-history-kubernetes-community.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-07-20-history-kubernetes-community.png`)\n    `README.md`: ImageError(Unsupported(UnsupportedError { format: Unknown, kind: Format(Unknown) }))\n    `content/en/blog/_posts/2017-01-00-Scaling-Kubernetes-Deployments-With-Policy-Base-Networking.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-jJK65zh2wE8/WIE5o3HkXFI/AAAAAAAAA7U/QkoCoYnTWAEz60H0nyP4_wN0tVG3WVWAwCEw/s640/k8spolicy.png returned 404.\")\n    `content/en/blog/_posts/2016-10-00-Globally-Distributed-Services-Kubernetes-Cluster-Federation.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-Gj83DdcKqTI/WAE8pwAEZYI/AAAAAAAAAwI/9dbyBFipvDIGkPQWRB1dRxNwkrvzlcYMwCLcB/s400/k8s%2Bfed%2Bmap.png returned 404.\")\n    `content/en/blog/_posts/2018-10-08-support-for-azure-vmss.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-10-08-support-for-azure-vmss/sample-azure-cluster.png`)\n    `content/en/blog/_posts/2020-12-16-third-party-device-metrics-hits-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-12-16-third-party-device-metrics-hits-ga/metrics-chart.png`)\n    `content/en/blog/_posts/2024-05-20-cloud-provider-migration.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/components-of-kubernetes.svg`)\n    `content/en/blog/_posts/2018-01-00-Core-Workloads-Api-Ga.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/0T36knExav8JAr41ict3EVOPOqaIJPMBQrOT2N5jehXw_12jEILD87tKW8BvaK2UCOtCHzS700Oki8Fxja3bF37J3eceanEBjbHpRsATBhC1y3P0mas7DvPeQjt6QmfYuNWDqZVl returned 404.\")\n    `content/en/blog/_posts/2017-11-00-Kubernetes-Easy-Way.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/dqvtK-xyGelr_LW3qlFiamYRrpiq633R68cKitrbCZPtDY_uLBF7R7_PGVNvWja24_mG74vDBzpXddYhbRNeyBGPbQ_yfCq367Zp7eJZoiJEWurFWdmJ0AJlNJJ9TzDivE-8Ak9E returned 404.\")\n    `content/en/blog/_posts/2018-03-00-Expanding-User-Support-With-Office-Hours.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-Iy2GaddJp78/WqnFbVUu9FI/AAAAAAAAAM4/xUzhOSIlRDEMMZNl3SzPBd1Pa0T5y0pKQCLcBGAs/s400/24xkey.jpg returned 404.\")\n    `content/en/blog/_posts/2019-10-10-contributor-summit-san-diego-schedule.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-10-10-contributor-summit-san-diego-schedule/DSCF0806.jpg`)\n    `content/en/blog/_posts/2016-04-00-Kubernetes-Network-Policy-APIs.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/zMEpLMYmask-B-rYWnbMyGb0M7YusPQFPS6EfpNOSLbkf-cM49V7rTDBpA6k9-Zdh2soMul39rz9rHFJfL-jnEn_mHbpg0E1WlM-wjU-qvQu9KDTQqQ9uBmdaeWynDDNhcT3UjX5 returned 404.\")\n    `content/en/blog/_posts/2020-03-25-kubernetes-1.18-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-03-25-kubernetes-1.18-release-announcement/release-logo.png`)\n    `content/en/blog/_posts/2021-08-04-kubernetes-release-1.22.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-08-04-kubernetes-release-1.22/kubernetes-1.22.png`)\n    `content/en/blog/_posts/2018-07-11-dynamic-kubelet-configuration.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-07-11-dynamic-kubelet-configuration/kubelet-diagram.png`)\n    `content/en/blog/_posts/2018-05-17-gardener-the-kubernetes-botanist.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-05-17-gardener-the-kubernetes-botanist/dashboard.gif`)\n    `content/en/blog/_posts/2017-05-00-Kubernetes-Monitoring-Guide.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FSaDPAvZz4ybn1GUSIIrsWsrBAg_11vyDeg5q9JgwmkRU4qwTm4MPIJ2Q4Q68N6a8Qw944RnCe6aVt6hQbfvMe-ZSxv8xuDW40eH9nEm4DMGI_6Dtzk3HMqCo5hZ8Zn5uldlMeb4-nnq_VINnSUtwsSvyMl-HNJSDc6rnsIfgkvfJV0YDbbIBS4gTiOx7qr6kq35f9n70okmUE9z3SZ5CpeF60WpnPbq5hjdNay9f8BmS0ZqdlxxZg-JDr8DFXyi-VURZL3A8C9R--12paYQDVLHRiKwruOUIdvCX9WLxlRGHrKCFm2frmCs61O_2PiH3Lj_eR---Spek_HDl92zISbLr7v4LAMvJfeEYCmi0A9plA-Pkrk5-jHQGUccxcklxToOYBgimQs6OOfxXSAOq-U90FfGuexPTXDNtnf3H4FR_U1EawdmX-0-fS4J2DXIlCzPBWu0LwwGeWeqfnFMITrIayTfUTju70w5Pv2oYWgyVUuW6B5t9n7qGazCULLm-Pk8RGbb1YZkoVpo_8nGRCdDCZ6LI0OK-bVLg5PisDF8Xx=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-03-00-1000-Nodes-And-Beyond-Updates-To-Kubernetes-Performance-And-Scalability-In-12.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HmQDS6UMOYCqUXJmQ1pqWg-oCo2yvcBbjCSwp4uaTmqc7JE2D7AN-PNbxty44rqJbfbm7hf0C5f_78GRr8WLSjNgw_XLbgcD-te6lkyVPVf2veGTrRZeLUhB0gEht4Yhzp4R6PsJgUiaeZu5R3mcWN6zXmsxIIzG-xs9YzN3igx_v_yK9BU2ilxqv9w71xlBq3YUzyIsXxD7ZwN1NhD2seihyd8lzBXb4Ynx7hdFh4KRigevGwlUsBUaewdiUWlt3PEU02KODz5AzTFZByPvcDRSj7q2k5Ydjw_Zlm4K6g44JC5tfogdT0JaTk6u6cDiq3UGgcjledoEZJQ1g23fjBIesh-lYV0edFMc88IqZvXA0DwF1wUgZSyFVlxgKIOQbjNBj1GQBmyAX_KBeTZE1znBPwRdMncTVhnSVNMI9e7Jrnr_hOb-FOqgoHLMilPHDQjX0oE2L6QyOdBk2zsATgv2Zzu2TYPbQMmh1h9mQwDXvp3c1lRmg9Is0qtPQtAhVA7VWOSRxYTB20wjBDvvFfBArxoE6PKVMCQePZyM4Fu2Fu=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-01-00-How-We-Run-Kubernetes-In-Kubernetes-Kubeception.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GlQoq_Kxwx9lD2qIKFnf2MNquV9e6fcQm7umF0Y7hCNG1IRWJF0eCWlmXHSFnMbyGtsYjiY-XnGdMiS-bI3W1C6BISv1ivNpGqcyp7v6edpAQWZruymeSI-HI7QMoHmPrZ24LLTmSDzkIZgFWLGRF0gxrCKTyOnV135OLc60veS9k8tzT2DK4GJtXFyEHjlNtEvRDm_zNk8jePSIwe4ewaiNpvK_I9rK3ljVLtrrBiyaJ77vllPebdecxa4bPfYTip2nR-n7SIzm5BrafNFnkjCLeA8pFuKE9DrS2zM672YE3uzBpKVBbNu-l7eNFDMlxT03bbSp5rKLQelg8FRUrTSAM-OSR9biCaHQgcspDNldt4hGyUQwgJCi4cQ4VFVqdJszXNDltX8R8i0dZhyjxYdwVuok7NucbEVNiyOlAeQZniUUCwataO-jAz0QD20oCFWJpmaUczKk2yvCdQeNbBuEs965UkahpECr-Ibkz_r6yqEztNVDLsZMDaWlEq9-yr23VeZcM3TjryaeXhq4fvuheTbhXPI6qUU0agyidQovoG=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-04-00-Configuring-Private-Dns-Zones-Upstream-Nameservers-Kubernetes.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-Jj4r6bGt1f8/WORRugYMobI/AAAAAAAABBE/HXH-wBGqweQcJbyQA3bqnUtYeN5aOtE9ACEw/s400/dns2.png returned 404.\")\n    `content/en/blog/_posts/2017-04-00-Multi-Stage-Canary-Deployments-With-Kubernetes-In-The-Cloud-Onprem.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Gfczb7Pc-AM7FMpBOGLWG4bbcn3QG6NsCYqCRBxFddr5KGIMclFO2VCF1G7GG-B6cNx89O6BH1S2dcVqezjnDpssSN6-PIIk4IK9Xj-LJ2rypS-g7HDiyRORS7KxIa2wc6lVOwzsQfsn84xTu2l0NbzlYlVLZLKsxTSabm8VARdmmuLUMrXI9LK_VvtvyXvd4K4BoN4_oXSlG8VPV8QhCbwr4gRe9NbFUHRG725eE-TcidHWKrBaw4oRy6GJQ3E1QKiNcUxYkfTDs6cqA_qwOmVoPOkRYzeFur9CnEA2cLWshhLG8locw6FbFsaOmJGbzg_UuogKvW1JRGyxQv1vB3kJu0cQ8snbU6mfoFNjV9tUBw2VmX2HT5K96UAL2NIbRD-m6FBsem9yKGRdrTPUAcDWyQhIQ1nTksbpvyzPEO_tJxXOMH1GkByD-PzHq_EmlgoCwrmceW_sO1Est6wrBH7urpcPu82f9BzThxCtcuaqi2zRo1m3O1J-O7JKUaied2-BC10Pmvi_biyu0pGf0SjHD_fBdeHmWXia3TmLfscODd=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-11-00-Certified-Kubernetes-Conformance.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-YasPeoIh8tA/Wg28rH4dzXI/AAAAAAAAAHg/Hfk2dnUoav4XMefGyjzMWdJMZbu1QJFagCK4BGAYYCw/s200/certified_kubernetes_color.png returned 404.\")\n    `content/en/blog/_posts/2018-06-07-dynamic-ingress-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-06-01-dynamic-ingress-kubernetes/kubeflow.png`)\n    `content/en/blog/_posts/2017-02-00-Postgresql-Clusters-Kubernetes-Statefulsets.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_ESkGgJvn8azfiEQOoeQ6c8-xKV3G1cftva5DKsN_KXi1UgLBTQh2plYIiIgCszT3eM8aGbFp4MrAlKBn41aXHBcW7CjPQRFlSp5NIxAFlmGK07PpMJWRwf-tfA5Vn1VHTrqNBlZWizF8uKA4gfKZe2zdpw6Dz_IWh9jhl0vtFELZYKa3VwgyH_P5zdYx4mevGTde3u0pgDzLa8fSuNKkeIAx8oTwmA3WDIirmRTpV-8Is3t6FmkTiK6yYE4e66LDScEWeX8pkn5y3zaJrnplgZ8minpnzo7xqoojLnFBSFZOx57yGD1_xWusFLHnPfW14I3yQzwdryzaqRJttRvu_JfUiUxJ-LltYagzKd_LWKbAWW91OQHDTNpedLa-HdJfleP04DYoiuStdsAbs2G0ZX3KHPQaM-x3B-iIK-ntfogqx9-jGgklkP6qODHQ9cUrvZtcSfWU1fxaSDIEvSDPU-TLUm8Y3VZae2fXtlnfLNjlrszy5Apm6P1egvvCjhmhHS_Gw1SwOu6TS04gXRjT9GdV5D6auzBDXBZUt2I7FAvLQl=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-04-22-gateway-api/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/content/en/blog/_posts/2021-04-22-gateway-api/route-binding.png `)\n    `content/en/blog/_posts/2017-03-00-Scalability-Updates-In-Kubernetes-1-6.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/LdjAOmsLGdxLNTo222uif1V0Eupoyaq6dY-leg1FBGkyQxUNt5ROjrFh_XzW27P7nP865FYUVwTOaUpDEnirdHSBKvh9xl8PsBNEFlVWpJUbnj0FEdLX4MywqbjwK9oc8avLRNAX \\\"Wykres\\\" returned 400.\")\n    `content/en/blog/_posts/2016-07-00-Kubernetes-In-Rancher-Further-Evolution.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GszHlBuq1S4glacnnxD9vlrj-kOGHKLaKi9bJKQayMl1Z_enxkfyf7jCZLch_h0KEnvK02sjA9k596kc4nptzjWpA4XGFRSy-U9mb4WEjnO6rGYU4ljciR4Zc35A0ockzeKFt7z-ktonp5UE0GsMX3vC7pQcxzoYjzxtiDEae1QZ1kWv76MStnlk7FjnCMJSwnK-3p88tuzaba-39znh9hbUUD-n1xvmvS8zxHchAaLJbUTeA3Cbdhv6WTPJEkyClMvb7o0k61wE8-sBiLJ4CsYMgoctXuFqYDHAXT8nDq5akDaFS0KPrmzZc5kOpXyT6VLbNLdep2X2FTaIw0l19ug_ppi38xagHw-RlmQUg-K8wl168lnxkk25Tt7rnOPYitJqy9ig2TzES5A01WGvnD7Y2fstSUqpr9ENoWhDw0RmF-uPuV_MegNS3BvnE6-ZzHP2btuo3_klkhsRa2mMADvjPx_0aSinzkXmWBxxocisxHYjcwtbAXajI2YyBPm-VaNAl9Y4vh6Lc9MpNYuM8p2GuZdR2uVlWAPpeZcTaxo395=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-04-08-kubernetes-release-1.21.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-04-08-kubernetes-release-1.21/globe_250px.png`)\n    `content/en/blog/_posts/2018-04-25-open-source-charts-2017.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog-logging/2018-04-24-open-source-charts-2017/most-discussed.png`)\n    `content/en/blog/_posts/2019-08-30-announcing-etcd-3.4.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-08-30-announcing-etcd-3.4/figure-1.png`)\n    `content/en/blog/_posts/2017-03-00-K8Sport-Engaging-The-Kubernetes-Community.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EO7D_pgGCaexb5_3iO0_a5zHE76aRaKZT2-d-x9e0vN96FCxT70a8tMNrUvdpcZ5pbRXmZvgEf8Wn1tKXxH8BJPwKoYipoBk59b0bYYsO8UMzW0tkcJT3E73i-YKkhFqQQw_YtOJUv4V32WkrDSHZdOy5OmPib-XhkaMMo3y4ltD-i07igvMVZ3aLAVZCWfWxj9WNNBJc-V3dDVSZX0SkWLrWvFHh97RngGkPqrw998OyUSX_Cp1o2zza1xt5aaVtR9hXKMqKptVAImcGJHivTulQZw43oxWRiFoqKsXXe4qAyjl_ORDnyFmwjQhEvZYsmvFIZm7SPT4pcg8dmjt5UEKnljhzIFHPFpsnAlM5y12p0vEeAoXp7Z0qo4SC0GIRqLMdzz5M3Xu6e1sEw8l6imcbwU-XK7r5eDITBj2vU9VzFNDSSp02ZJ4HDEd7texhf1hIV6llUVTRpxwMH_6_Romsfn3_oVWegzvqzY2ktFgioaVIE6WChUqa0aVJL6QDGLo0ryWUbYH7urpjnNDbKMKTUqcY18wXq6h56Ux2UbDP3=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-10-00-Enforcing-Network-Policies-In-Kubernetes.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/e8JzhKYICOzh44sHcedjt4IRRpw2zpFNbJ2UY83fBdWYCIvFVSlHJNmIwLzIHVxrScc2eNCyv37mm903TVT9VkMuHPxe_5Hk8CvJTqGsSK7WtEDCbn1Q25S-o_kHcEiKUUl1NV9g returned 404.\")\n    `content/en/blog/_posts/2018-03-00-How-To-Integrate-Rollingupdate-Strategy.md`: FileReaderError(\"GET https://lh5.googleusercontent.com/4WiSkxX-XBqARVqQ0No-1tZ31op90LAUkTco3FdIO1mFScNOTVtMCgnjaO8SRUmms-6MAb46CzxlXDhLBqAAAmbx26atJnu4t1FTTALZx_CbUPqrCxjL746DW4TD42-03Ac9VB2c returned 404.\")\n    `content/en/blog/_posts/2020-08-31-increase-kubernetes-support-one-year.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-08-31-increase-kubernetes-support-one-year/versions-in-production-text-2.png`)\n    `content/en/blog/_posts/2019-06-24-kubeadm-ha-v115.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-06-24-kubeadm-ha-v115/overview.png`)\n    `content/en/blog/_posts/2016-09-00-Deploying-To-Multiple-Kubernetes-With-Kit.md`: FileReaderError(\"GET https://4.bp.blogspot.com/-BdD0AgQKFWY/V87u5p7uw2I/AAAAAAAAArM/Z6_279MSn2AVDmO192GtPPTuVBbLgsHCQCLcB/s640/kit.png returned 404.\")\n    `content/en/blog/_posts/2016-05-00-Hypernetes-Security-And-Multi-Tenancy-In-Kubernetes.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/8DjNb9IE0HjinFxkaoGbPaaKbts5_Osbj-8NVWQMgY_8D32643Aum0SaMc2OedV2gECG3EXov8qj_f8XDe0IfpptZt61HxfJEonLo3RA5xkr5zSmd2nxqVc8yESc423nPEZTj1H3 returned 404.\")\n    `content/en/blog/_posts/2016-11-00-Skytap-Modernizing-Microservice-Architecture-With-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EQBTvZIqp1DXEQ7grU9nhqj1GJs-M7n4xXaLFfn_9IlDTSQawhkxbjzPE1mOaZi64riSg40KEfvl9vdFpk21DvybWj5COsmWk5IMc5O45RiXqe1lpIiIOhWV5UlD9wi5xVn_mHEL66dxdx_B1gdz2IdWkakWC6cFtETEvJ0lVwF3d06yk63GVL0MX_4S80P1W4gJNuQy6bob_rQ27UxfwBef8IB6Fqy0y_FDc0X0YRj9Z_AvcxSPsI6MS-naF9xZwa5r4v-07wpXaPQXyc9Jk1fitj69e0Dyxthi7ZFd28o24xdhR3D1g--xHib9-ltXrQCX70iJhFoMVimirfPMahAuGn4H7N8fJgnlx3VBE4u6nkFZTMpE6XTpxSFPQQDpSxOmk45XdDsMssmRt7y6ervAhOLDytsKxKm_QjODp72fTaLllV5kX4OdkTPyz58wolSUZEtGVgaDJsOgWpb8SEDTkxgqK20mLcLezxN5dnD4JCFP73s1YN7-wh6HdWkD4cy8yT1hgUj_H9p22oX2AnWA5finfsSxuzfi-Go_jpCWe7=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-08-00-Kubernetes-Meets-High-Performance.md`: FileReaderError(\"GET https://lh6.googleusercontent.com/nKTtfQVVmL4qBoSR0lBmBuLt8KOrVEyjn9YcAu7hrhhV-rwnxRY3p-Y5Qfddf7BI6u1KN85VKfeaaU74xDl-oDk5NzybdIxAp0SJ42x14gwzpmwLwjVy5nIng6K8Ih-bRDlOmA9j returned 404.\")\n    `content/en/blog/_posts/2017-12-00-Using-Ebpf-In-Kubernetes.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/Xe8qee5yYsJton2NHFLOhHevxdbpCHHPPgttOLP18ZWtoUJp9ChFKtKJiTxqNFn8zQPRJu4BdtG7xc24vlGkD2gtfbkCuHq_eU3Tx6z2m6ld4iYGEZv-MsSCcJ3jAcJO2HkMc_d_ returned 404.\")\n    `content/en/blog/_posts/2016-07-00-Bringing-End-To-End-Kubernetes-Testing-To-Azure-2.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EzVsGxjTjLt91dBzxXFcrE3KkDcWyypcNHEmXEF7tXPApOLKMdzUNxAKhmRimKtrwldEutJyUzIP6x2kEZwZIXHoq0ubfm4ZlYUYeAzELSYLKWVnWohhbkRi8d9MEcHXQtxiwkslcrxNGKgD3s3tsG0fheEvnm1jrrof0iqweosT4QnWcrL8QtM-FwXHYZ9L6o0EOIITdwkQoRpCuQALWtMiiMohzvl4m8oERJJsL-0OyzbNbCQDp3eNYa8S5hWBrNAH9zT0h4BIiJDWo0ymyYfeGOdY_QG5zl2rENxFKkpPtN4XwjMAWrr4OChmmo14e96gnix3Q0b6knhKGrKAq7hrsqG2O1SdPW6NTheU95bFw-pWY4DjT4tbAgs-ryTFIRcG9Aipd-VnHzqqfTg7U8JdrReaR61YLNGlggSHbSqEGQlR_566GutAhgMNGhxPAdRo-zI2rQCYLvNHJkHTZDzO1bRubJPQ28dGn7YnfIRsphwDEbmX627LieZQMU69TOIlMaxQIV7zYOHchmaIE1axa4XpKtyTVU9yw0ZgeQ-5Wi=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-11-00-Securing-Software-Supply-Chain-Grafeas.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-TDD4slMA7gg/WfzDeKVLr2I/AAAAAAAAAGw/dhfWOrCMdmogSNhGr5RrA2ovr02K5nn8ACK4BGAYYCw/s400/Screen%2BShot%2B2017-11-03%2Bat%2B12.28.13%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2018-06-05-meet-our-contributors-youtube-mentoring-series.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-06-05-meet-our-contributors-youtube-mentoring-series/meet-our-contributors.png`)\n    `content/en/blog/_posts/2016-08-00-Create-Couchbase-Cluster-Using-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HPNom5ud4gXYT-aTW3PioC2Z8F017mrFQqA8w3ILC76ddhJ6tQPU22bBGmoXS2Sa4yG6nGfl-t2qJta8bcv-Ty4xTviVWexQpiMw4zltBNC_g-DkjkxUU8ND7ldoa7I2DI1IALgaW0jCWRCS40Mdq_r_lgc6-8d3w6EOoYkeJORfmqxz0c0YINoGgN4XgMceqFR9lwAbhiwCld7I01XsKWDLb2tvZ2oJRIAyVnrGhNjC3Cwhss0AOKYnIf6Y6ftPwyGGSwBJoYSIFM06566jmY7dcc5lnBdzG1Ht9_3DLhz1fMmHS64AWYlnIlBmkbHM4mGtZfKoaQdgHO3H2O6TiGASce5wNABkMGCfzDOLC7ipblA6neUdCrcL1Joep5Ljnd0Ll4-9yq983EiwGlNQVlt9cO3aLANjP-xIcR-9Gs3udScA8Wf9FGETpzxYIeTru5qxzVjazgjlnz2HdryojMxsj0FUrHp-F6CxBztlFpKBWOBiSss6uchFYyCoHvceAa8RlmeC9uW4P4RIOHDYxVI0jLy-s4ALW5e_2oOShY6QOw=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-10-09-volume-snapshot-alpha.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-10-09-volume-snapshot-alpha/snapshot.png`)\n    `content/en/blog/_posts/2017-10-00-Request-Routing-And-Policy-Management.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/kGRJnhkf30FBOY2pyZzID90f_zxlyMUv43hEvfq70bcmYhKrGv2em2qph21k-ahlwfBthV3XQSf6CuUQXMlvgSlOUJr4W1ksDVXIvChEd6a5Y51lwepHmyQx2ksJgUpyTiEbZN11 returned 404.\")\n    `content/en/blog/_posts/2016-09-00-High-Performance-Network-Policies-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh3.googleusercontent.com/2M6D3zIPSiBE1LUZ3I5oVlZtfVVGP-aK6P3Qsb_siG0Jy16zeE1pNIZGLxeRh4SLCNUKY53A0Qbcm-dwwqz6ResSLjdb1oosXywOK5oK_uU6inVWQTPtztj9cv_6JK-EESVeeoq9\", source: TimedOut })\n    `content/en/blog/_posts/2016-03-00-Kubernetes-In-Enterprise-With-Fujitsus.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EB1Mylc0CAogVXSbKhUb6tJUbdq7QTVh2JUdETDponNR8jXdhv1LR3GZcYgh0myJ8ud4d3iQN52AzOhwUyMnQ5pouXR2XcB_EsR9TglcOqZgtuUutZZfjH0_WyexGGdya56t5KUz1U5LO4kCEb_W4NzQD8uSNcbkzAhumzME0HB9R_24FVrMqylJ9ekfogNtrb5mi6GO3pV6uWER15N5_UIvc6550URa2JShgI6las22yt0ohnHTZ58JSECEZV2Qj8mzANVRmYF5fQdSqf39m4cIJVObhNHWkyisdaFFueZflSNRQ-JzRwTfmuazA0QjUNEo1aQjT5OZQGAFN66OyXe7CrbCBhq6CnNsOCuKLLcHE9klK5ThYRb3p4q4WtCrre-nHuaXngO2NIVb5cij__8Ftn8dTZLBgExBOhaSWEqs5HUak1y1ACLAdjl9EOG_CPzy_dGmdYT0kzwyXTSK8kzR8nN9frTJmWdSIl0rPK5h0hZzqDrvZ90BqbuoISEW7S-wcPPR5uZ8a2hkOIDKpEn8i_FfLAM7SaCH2vUK4JI2FX=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2019-05-23-Kyma-extend-and-build-on-kubernetes-with-ease.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-05-23-Kyma-extend-and-build-on-kubernetes-with-ease/ac-s-sc.svg`)\n    `content/en/blog/_posts/2018-11-07-grpc-load-balancing-with-linkerd.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/grpc-load-balancing-with-linkerd/Screenshot2018-11-0116-c4d86100-afc1-4a08-a01c-16da391756dd.34.36.png`)\n    `content/en/blog/_posts/2016-03-00-How-Container-Metadata-Changes-Your-Point-Of-View.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-7hrB4V8zAkg/VvmJRpLcQQI/AAAAAAAAAYA/Fz7pul56ZQ8Xus6u4zHBFAwe8HJesyeRw/s640/Kubernetes%2BMetadata%2BBlog%2B2.png returned 404.\")\n    `content/en/blog/_posts/2020-04-22-two-phased-canary-rollout-with-gloo.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-04-22-two-phased-canary-rollout-with-gloo/setup.png`)\n    `content/en/blog/_posts/2020-02-18-Contributor-Summit-Amsterdam-Schedule-Announced.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-02-18-Contributor-Summit-Amsterdam-Schedule-Announced/contribsummit.jpg`)\n    `content/en/blog/_posts/2021-09-03-api-server-tracing.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-09-03-api-server-tracing/example-trace-1.png \"Jaeger screenshot showing API server and etcd trace\"`)\n    `content/en/blog/_posts/2017-01-00-Fission-Serverless-Functions-As-Service-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HQt98AADk-xkwjhYlgpOQ3vBmiAwcQyikxWFwcVlBh8_7-pqIYr6cBfUIkkR93KiUxF34Wg2y8AwfaS7XfKK2At_Jxh-l3iymrCxP1xacQ-SKhTsKwpJhlblSWZ1uasgOY5wBMfeMQ4gatUb5zSx-CXX7TCkoBvQitDlaO5dLpngPKohPjBhgcE7WgLZ8ywb7jk69VgKNusxcXp75pM3HZdL2DXFn63BvcP8FykCdfjaRYRhRZuzitXqb8L9lQJrpO2sUbM9atBzbjtOe_JCGkgsNRtcdQFPwjDseBBQC6IBMHGP7znvKkJCaNDQ0v_kwBN7A8LL4HFEyC98UqHbsHR43op8R-QgeegadFOrAEaHG6y4eUsRMZ5vp95rr-Tfl0Yb0yiFfmIukOaC9ckBNhDPjbBd0hMxqXRP-KECspQqbzLrkMxcK8beTbCURh7DSfyC9_0In-szTuLjxeDJRLnwVliVynhwq_RvWOvVpIj4cfzx0MwbYi9ku5lOp2vwmKMSgBvkTHf3fay8TN1CCRt95MvMuL0--OMNxIdTVwyHua=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-11-00-Monitoring-Kubernetes-With-Sysdig.md`: ReqwestError(reqwest::Error { kind: Decode, source: reqwest::Error { kind: Body, source: TimedOut } })\n    `content/en/blog/_posts/2018-05-30-say-hello-to-discuss-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-05-30-say-hello-to-discuss-kubernetes.png`)\n    `content/en/blog/_posts/2016-11-00-Kubernetes-Containers-Logging-Monitoring-With-Sematext.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HC8u5WhJ-JzUNXLmQ9MSGvrSHmo75cl7SF0HgIXlK3aHZZjrnLY3t6jXPOKAiUznJRmSiDEhMeWoZ-asV8NuySwwTxXaoc2suKCnFGBM2tSrtdzKzMKFCVU6RcLVOYrwM9IRXS3F8BUQqbc3-Hhbm3XB6nkvUHLg3t5yUY72cVL2TSptkNqe7aSp0RfTAsYc3lu-0JORih5YhzMCG_X2scv-1rzKOoOmYNwe05bJsdgVhKC_q1srA31j8wqIRay6N20yj_bZ_92Y6ed0Z2RGr7ClXtX4l8ZfDZQE8bW98kqpyspSpNgqB0CGK9_qEAoxMKakzjqpJJRm8n0u4xGR1GLwY0hVOsfAgGMvudNwOLyVc4GljCEjCxZBsLKAJ4TwMZqss5iDWc2LH12fGr1-_sTiyByDYwVpXl1mWO7JtNq18d4o8c1ROCx-V6cXHp2-ZFc7ds4Riujxc39nQPP7YPwWBIXZqgxkUhxpzFus4ASwxkZjKJEt5tCgeyuVoRNGxfMXk9tOyDCuD3ncKu7qk7E61HNuDrLn4s8P0pQoz5q6hh=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-10-00-Production-Kubernetes-Dashboard-UI-1-4-improvements_3.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh5.googleusercontent.com/q2xNqiQkdcaAY9UdAlxXJkhofpb-AwMKoxE8Jdd3qRB0v8qffi4_s8GUaszmYGclNemAWCrEmbTqegKPfRoUgYHy9aRAYILXqRX1BCdLBQCUGHd-Euv0PuT5VI9viT3iSXBRHshv\", source: TimedOut })\n    `content/en/blog/_posts/2017-01-00-Running-Mongodb-On-Kubernetes-With-Statefulsets.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_E7nEiENznaJBvEKibhbtHlSVEiWpFeD72vZWjzhE13tIJLZKqawM4m3q5cxOeByRgghuCuIwmjNsroZ0ssFcTLqD3ApwwoYMUc_6b5hKzXlKlSTJ9ISzA4601lIqR3a9hFFuLo0xB11FG9lkxMnsjTWHkKyYtMIMJxtA8_k0DM1ceiobq4Xt3P0L3LMPKSRBRl__ZyvgAf3-OOqFTNFJbSAX9YBlfpwJnPGrJ3sjJRg0z8As0Eyg50Ch82v7Q5Cbnl4xNxX_kv8GzNJFIU8w_UuT64ngaHQmzW8wDXJw9gL6g8fac5GQyu8Pxq6Yv3ELGJ8r5XQFEEgjSnYtGBnM2kehLv2vvl-fMoXZBG-Ot0TYm5pLlvx15Jmr5RWl6Os_VU_BtcCo9EJxPZul8NJ5_ULpXxNnvIkRSCpEMvdBZkNdZ-1U4ntXorjcGFN_BJq3rwwh8PbOgB9yH8Sfx7GjFcnhw4f-WbiDUJJW6YIj213Uv5syjXfTbA8pMzVlkRl6GzDDDZdD-IGkczpd2o4TXVSyI8WjMGNtKaG7dHnCM4AEs9=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2020-01-15-Kubernetes-on-MIPS.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-01-15-Kubernetes-on-MIPS/kubernetes-on-mips.png`)\n    `content/en/blog/_posts/2015-07-00-Strong-Simple-Ssl-For-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-ccmpTmulrng/VaVxOs7gysI/AAAAAAAAAU8/bCEzgGGm-pE/s400/0.png returned 404.\")\n    `content/en/blog/_posts/2015-05-00-Kubernetes-On-Openstack.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-EOrCHChZJZE/VVZzq43g6CI/AAAAAAAAF-E/JUilRHk369E/s400/Untitled%2Bdrawing.jpg returned 404.\")\n    `content/en/blog/_posts/2015-06-00-The-Distributed-System-Toolkit-Patterns.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2015-06-00-The-Distributed-System-Toolkit-Patterns/sidecar-containers.png`)\n    `content/en/blog/_posts/2017-02-00-Run-Deep-Learning-With-Paddlepaddle-On-Kubernetes.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-Mwn3FU9hffI/WJk8QBxA6SI/AAAAAAAAA8w/AS5QoMdPTN8bL9jnixlsCXzj1IfYerhRQCLcB/s200/baidu_research_logo_rgb.png returned 404.\")\n    `content/en/blog/_posts/2018-10-02-network-bootable-farm-with-ltsp.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-10-01-network-bootable-farm-with-ltsp/k8s+ltsp.svg`)\n    `content/en/blog/_posts/2018-03-00-Apache-Spark-23-With-Native-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-hl4pnOqiH4M/Wp4w9QmzghI/AAAAAAAAAL4/jcWoDOKEp3Y6lCzGxzTOlbvl2Mq1-2YeQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-03-05%2Bat%2B10.10.14%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2017-10-00-Software-Conformance-Certification.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/-seEomiDY4syaWVbl0KT7k9fcJmylYK1n9_VANKyo5oIP5gH9MuIq_dcB_q3qvjE5YzOdM2HthMyc_wduC4xLmPStsb6Q6ASPBfOWi7ssGylfy1I7Pbd64THobytWa_1JX-pscH4 returned 404.\")\n    `content/en/blog/_posts/2020-05-28-my-exciting-journey-into-kubernetes-history.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-05-28-my-exciting-journey-into-kubernetes-history/created-all.svg`)\n    `content/en/blog/_posts/2016-12-00-Windows-Server-Support-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FGHvVFpXmkXzpLjT49nkRBUGagvGd5KE-IrfRVSyXwl0SgmftUwC5tK_mPB9741hcfNvSNWVu0QaYSsAorkya0W7ZDJ5nZDR-IcjeUQ-8QayKQ070x8p58U0JWdKH_jZRrt55yZb-W738v7TJFdcbpdWhPgqal_6QIvC63Q5PO0cg6joNyiy1vm0YKkD2O1kpKaZ-s-FCKrXmXDxI671Xek8LgQQ1bhQz14jqplWxTL--1a3ob08NoR2NVe0QihFkQjvlyOb4BvHOiX3FoXo5j7WiH6Nb_bDu44w4v8kW0hBedofRdaE922uK1lTVRkPsxNmftcOG7uMxamvDmetLdFM8uYz34WqzfUptXdBSlVqe0jybv_k33Vmo8fmwFJnEju2zIyhXvVKFcolaj0sn_2WUvFmnlu27j4vTXb2A3miOAuP1-wuNwyyUm-PacjHcENdUU2C9BRVga3bUuAGOxs2OX1IFiJIYzNbxH64c1jIjQJX-8EzJzBaQDjtBj-ijb3VHVWT3DxiSC7McdFb03cmwDcS-h0D5DI98YeQU1ypy_=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-12-22-kubernetes-in-kubernetes-and-pxe-bootable-server-farm.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-12-22-kubernetes-in-kubernetes-and-pxe-bootable-server-farm/screenshot01.svg`)\n    `content/en/blog/_posts/2016-09-00-How-Qbox-Saved-50-Percent-On-Aws-Bills.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FoLCXhsOj-e9pOVxQv8JPF--moMSn-RIOXtEFm_ivtFUyvP-OuZYNtXZN0t2k34p27IpGvoH0PcraF3p6MbPqds4v-60ExyxYCIfzFPbvqNyEam4HsPqlXpuBT7IKDyeSQsP7Vu8y1FdTXs7EhYXyobtGev7PPiT8u3TbjCt7NXEOZThRnygyffVLHrErteLw4_0xDf27nU8nkdtoSEaGGGfUI7MDR2-fNRXDBrynwcX-3YTbx8-shRtK5n18QY_ye89dnWzLqcixCH53t4WizVSsuRqnDrkvVkmJuvLMxsNnPB6dRJ0hs2G9laF96P17MA4GSjLVWNwzeBGtfXyTAhH9EzsDm-fgtG3R6hjn0xeS25AEwiVQdcuupJwGHvMadIMXN3LANzousTG1r56OBr7QpfSZVzFniItmAZQ8gjdSMtKQw-rogYaUN26PqljLmG4s9TEbwlwe6Ghl1308P4Mb9kLxVhpAUNIpxDE8kYdAI3d-ni4_rm5UtqAmYLVs3ma8PpasLrc4zU8BWWTzJ0jrbRNDZySAjyeeL-A1JZU4Y=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-03-00-State-Of-Container-World-February-2016.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F41YtcjuQWErHlJmqTzk3_cmAMydpspHzuvy5HPfDM78t_2xLswq9MEs7b8Cttki2bbxUdwhF07HuLDwGjvBjlcFEyRXvjgP2OjyPOk6FkzpP7cWx-i5LPuYkrWSXZJL-fWyxFnrAivJwuQfrHWifBOBlkXgyEO51t6S5oYJxj4PauXCEnH5WwZuzRBRs-_-bl9sPW8ilZCW0uj76502KpWcYhBr8w15NnzjndG04F5zFu3NJVlN8_d8Z1ODRCDpqQv9Vp1aO9thBl-4S_T3j_8j8lX7AusggfFdLeYq9vr7_nA8BdnBBm9xW3Z23l6j56ACJZ-I89npzUj2wS4XzSRAjg4g3RgAonWuOjgiM6SEsghTuy_vlEPH56N0NFGQsF7y-L7tHIwFfzzpIvdsitZtGJ4ruK2e9hMpnGSkvE6OMI7J6tpSzPuasyGU0z7mWZjJecbU3Ue3A163R5-sl2he-Ci3SpGP6EPxVtCcpdIY15uGrPKCgV3krtECZAn3aBSFI3OcKySXuE9U9-mxkjkvC5MskduljB5uTs2N7EpqsI=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2020-09-02-scaling-kubernetes-networking-endpointslices.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-09-02-scaling-kubernetes-networking-endpointslices/endpoint-slices.png`)\n    `content/en/blog/_posts/2019-01-15-container-storage-interface-ga.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog-logging/2018-04-10-container-storage-interface-beta/csi-kubernetes.png`)\n    `content/en/blog/_posts/2016-07-00-Automation-Platform-At-Wercker-With-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_G9MqrIbbtC1PA16nb3RVlm2EsAXc2yBR0zD2xbUypBQuB-m0LmzIL6kZi6Fd6eHdBg6942aLycrqZyT42ho8MwjB-K_y1DmC3lWtFgB96CcqRLdeySFOYU5y4C4PmyQDiBSE68GVuQxdsGPzj4SUYDun6bUcGeE8lxIJkEVrMIWm8iPvKsyf-2j2u2Slf794zGJhnTAVxGI7LPRS7WwMqq_bJqWCk1VKC3AzfmQMbwZ39eOGRBKLg-lQyugO7ag2jvBk-WEwty822K4tnXOWr2rjAesKnP9F4bcHgTp_2Vl7e0AfvWwfe-0jGC2dbhpK941pkj3ZlteiIvoCHdyJRvnbM_9eeRZul-TJtJ8HOfsDP8yAi3bRGzBHmU-34CqAnsUyYLiO9GhnKlvm8pNrQu427EPYB1uP2gV_fgU4FuiumPfGFbbF0RZDYsONN-QNGx3M70ou3EZeaC-C5xJRwBOVKKgQJZbezSKshmqFDpQ7IUQKsEbNwmUZUsUKbXemveA71iYpusxDLOVljGdRiDl4QEZAx3M81ZZl1omc3w4z-J=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-06-06-4-years-of-k8s.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-06-06-4-years-of-k8s/k8s-first-commit.png`)\n    `content/en/blog/_posts/2020-05-05-introducing-podtopologyspread.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-05-05-introducing-podtopologyspread/api.png`)\n    `content/en/blog/_posts/2016-10-00-Tail-Kubernetes-With-Stern.md`: FileReaderError(\"GET https://4.bp.blogspot.com/-oNscZEvpzVw/WBeWc4cW4zI/AAAAAAAAAyw/71okg07IPHM6dtBOubO_0kxdYxzwoUGOACLcB/s640/stern-long.gif returned 404.\")\n    `content/en/blog/_posts/2018-05-01-developing-on-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-05-01-developing-on-kubernetes/dok-devmodes_preview.png`)\n    `content/en/blog/_posts/2017-02-00-Inside-Jd-Com-Shift-To-Kubernetes-From-Openstack.md`: FileReaderError(\"GET https://upload.wikimedia.org/wikipedia/en/7/79/JD_logo.png returned 403.\")\n    `content/en/blog/_posts/2017-07-00-Happy-Second-Birthday-Kubernetes.md`: FileReaderError(\"GET https://lh3.googleusercontent.com/ldb4PfuqammWmcPiFpMa48ALxD0kGrSre0WGMpuXKqAqnKhyWEmIcJXnQcAK2sdVCiE5cvw0H2FXtLt_dVihAk4b-XTA2HIQba3A0irnRaIHup4bhFUwPLSSFmw3zFk9ZOt61TKc returned 404.\")\n    `content/en/blog/_posts/2023-10-31-Gateway-API-GA/index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/content/en/blog/_posts/2023-10-31-Gateway-API-GA/gateway-api-logo.png \"Gateway API Logo\"`)\n    `content/en/blog/_posts/2018-04-30-zero-downtime-deployment-kubernetes-jenkins.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-04-30-zero-downtime-deployment-kubernetes-jenkins/deployment-process.png`)\n    `content/en/blog/_posts/2017-01-00-Kubernetes-Ux-Survey-Infographic.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-aSAimiXhbkw/WHPgEveTIzI/AAAAAAAAA5s/BMa-6jVzW4Ir-JExg-njJJge2tQg6QSOwCLcB/s640/satisfaction-with-dashboard.png returned 404.\")\n    `content/en/blog/_posts/2015-09-00-Kubernetes-Performance-Measurements-And.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/NrKLoz2iB-TNdOxISL7OcqquCKL-MijDBCokf-u4ASAqgmo6zT7ZU24mXDvIwUUlRsFSsL3KF17dEAfUT41TSgNPvId5HN5ELQTXJSSBF0dp9EOccx4Y4WZ9fC9v9B_kCA=s1600 returned 403.\")\n    `content/en/blog/_posts/2016-11-00-Kompose-Tool-Go-From-Docker-Compose-To-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_FgTrdKq8kXj0t-erW7ybtAB5ItDdcORurgV1LV7P6CzFBM4iyBQnhHZs7DhdgZDVmpfkqYO8bhUQIqPjJRHKYvKaCZc5w21YWZyauaTC1yPjeiYn_uveSLPwEtuKlbJlXXIvAypzkL1nwpRPabqehBydy_wpu6jWvG1_ia8jS4FX5lXnYUaDw7fX1Sb8tNWUdBFMgG0uKCNO9hw4YL0liD-Wrr_t1NcIlDumToueY2lUTr7IKPXlNRuJl2C59wFC9m_7qrDpPORWksgTq12uuSVgIdPqhhCvvI2UaJCgs5nZW5-LHn6CS227KCBAkJBI1u3JYzqL9eTAGn3GweKWARdDQSNUdCrW91e-fpIIjZ1oEwJ0yG2fTylJ8nekxWP9jqSdUdx9-KTqteK9p4AWF5kzt1rlo8HK4AMfQW0dDZORnNgqwHhIpGYGRTT32cxuCSPPzhedYoX_rYbxUxMEhruNt_JnmOJvKt_KOXAbVUEYeWPkeH2Bw-vsizt_O-ddb1JX_2lM7W-jBu1av2k9GF1iXxzoQTpuRQcyTMeD7KUDqS=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2019-08-06-OPA-Gatekeeper-Policy-and-Governance-for-Kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-08-06-opa-gatekeeper/v3.png`)\n    `content/en/blog/_posts/2017-07-00-How-Watson-Health-Cloud-Deploys.md`: FileReaderError(\"GET https://lh4.googleusercontent.com/LeKfLOkNldqReFh47f2AuFU42dhvKDwDxac_Psil_bdZWldKY80ZZi4Rv3n0--jq8Mqq9qRFVa1AbLIt9TIPLLRVmon4DaBsltFYbUJikrOp0qcavJQ9XHjRL-A1yvWR6mTNayBP returned 404.\")\n    `content/en/blog/_posts/2016-06-00-Bringing-End-To-End-Testing-To-Azure.md`: FileReaderError(\"GET https://3.bp.blogspot.com/-U2KYWNzJpFI/V3QMYbKRX8I/AAAAAAAAAks/SqEvCDJHJ8QtbB9hJVM8WAkFuAUlrFl8ACLcB/s400/Kubernetes%2BBlog%2BPost%2B-%2BKubernetes%2Bon%2BAzure%2B%2528Part%2B1%2529.png returned 404.\")\n    `content/en/blog/_posts/2018-08-03-make-kubernetes-production-grade-anywhere.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-08-03-make-kubernetes-production-grade-anywhere/without-incidence.png`)\n    `content/en/blog/_posts/2016-07-00-Dashboard-Web-Interface-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_G7DcZixFwMvB5Txue-ExQ77S6284PfX57C9ORV9k_uuQARBHPwuYlGwcsIBqZG4daOIOwWfLrPFx_gbp-K7fjrVvskQpFBmZFUmDSDgR4Apze11DmC_gy7remeZNrcBR_ikHTqx_54tboKzfVqWbyM-nA_14MIvm24A40-6zfeUk9n8EPb4vdvGIlX7cmhctPwbBEuZT-5dOJUtIjDzyvDJEvhZ3g3M6gH5SHjCbDHaCDIjqj1uN5hjU4pLiJN73-L5d9PNrNaNcu5d4QcCU68w_-Zd886Y7FVADbDKXoBM1BvRi7WflzlwTapzGt3705Wpj3V633PxunbFIKIcBROZDhVmrJfjsGISCb8-8wwdXG2YWUGX7unckJC59aVewMfHZIIB8RTodyl7MzmiC6ly5HsRD5zTO0KuXAyMe-maWSOewS2iiWqNV-M-pqavczrhaTRCgLRVjQxnY3I0EoGVxcL2CmgUlfQie2CEUTYGXYlSSUjQYiFx7-zuEVJ0uxBMuXJrEVKXvw2XsZN9YIkqtl6lwVlXiKF-rpXoe2jYUJT=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2021-10-08-clusterclass-and-managed-topologies.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2021-10-08-clusterclass-and-managed-topologies/clusterclass.svg`)\n    `content/en/blog/_posts/2019-06-19-kubernetes-1-15-release-announcement.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2019-06-19-kubernetes-1-15-release-announcement/kubeadm-logo.png`)\n    `content/en/blog/_posts/2018-07-24-cpu-manager.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-07-24-cpu-manager/cpu-manager.png`)\n    `content/en/blog/_posts/2016-03-00-Appformix-Helping-Enterprises.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Fvo2mGeoKlHnKocimZfxcW5NC3C65bTBUBU8i5dL17pikjwJIimZRwdRwrIvqgipy-MieKU2REoLcPgDe_156IBF7QCxE1RwIo9b0ruzktYuO1tzz84ZZPhty-C2zkRm1aAU8l9bqQIrUYHsYeUTNQGGJ4NAp1p0dRX_QwtGLn1FgoAE_fiXg0RfZvZTIRY9_mWwfP00OXFRP3jKA65a-csI1LQsnhY88a2fPqSdoJ_R57zolk-TVRtFpoqLpUII_jfD8fxVw0s9uq5sKVMLVUtdi_nm3Xzw837KfQ-4mlPN_UR6dbIwUQnVSjBk3C_Iw2bQrR4d3cFVHSwFNK9h23mU54uSTErSA8KzukSH7NX61eOhqjI4wMMLSDUn_kosB72WyN52H_2naQFTNqArESx09KtJhVIrcv_evYiaMFOsSc2wVYCgkmmkEt5D31VFhiD-snEtRnJRRqe7jCSyOZMjFELYE4UO_Dfbi-c_8w2DtFJBPrnAoRzsMzyLqUI_m_fJ-McRqkwJthssoJHx9yvESebfj9eznGuc_IEgMMtkAM=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2020-03-18-Kong-Ingress-Controller-and-Service-Mesh.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/Kong-Ingress-Controller-and-Service-Mesh/KIC-gRPC.png`)\n    `content/en/blog/_posts/2017-12-00-Paddle-Paddle-Fluid-Elastic-Learning.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-sp_sVZvhMbU/WiYgXMLQKuI/AAAAAAAAAIM/uc_3iT9BZmAtQGiGGSErgueHK71uWMBCACEwYBhgL/s640/figure-1.png returned 404.\")\n    `content/en/blog/_posts/2018-07-12-resizing-persistent-volumes-using-kubernetes.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-07-12-resizing-persistent-volumes-using-kubernetes/pvc-storageclass.png`)\n    `content/en/blog/_posts/2016-08-00-Stateful-Applications-Using-Kubernetes-Datera.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_H-cFkoE_cbwKBgUaYSxKdtz3PwzzuzwZ_chK3LUjyJAGb_xGLFcjBDVPVFMzyZ1ligOSjFZYYFImgcJtWyiMWgMEmB6xGaBOWo-2pfYmAsomB1sdtaUwx7PhAmpPDmFadt0ZByNMh4vANtTqe63ThmM4YT7vIQgsbtG7UWKtc_b3CUsldEv1wwV3uz7ospjm6h3UHYAB4Dv3vqkBRjLSrGxEL-lqKSXHdiRdLpXbku22MeA85kJaR4S0yQLrxLxudXNyXkuusgk3iSDgxeHELt_x8LfOeXFb7WN007QpCKIOwRohJZu6fxucqU_KSOyWKg3bzmnKGPZ4AGWZZ4vJiT7vFoZBbCAPWNpb0yTuxDQDLYBeSI-AtSgNUPHmpvibSbZK3i538xjsFTQ3hk1LhC0qZ0YOQP5wXXLGILSuCuwZp9Yr-Wt7pl_DGBE8f4lcMAeKJs9hMOd6owNIGY7URWUGCrqZLAUCcY8Qnh_eM7McoAgM-yMBwP1rAG9EfuYUym2LV8y2aZTv8WAfLEPSMDUMS0FLBGt-GLiUX2gJrMH4tV=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-10-00-Kubernetes-And-Openstack-At-Yahoo-Japan.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EVz25113g8o0diI2Gy4vS-nE0UTzVc0aEqTgobDa0btFJdW9omXK1JzxzoiNYjtNExkFbdhhXvwXwJAbju0p8DaCVhs4DF8z8L0sOL_WeKGjhRJG4P6297kGtJocUrFkHfNNgv9fajU0X0Fuxd_s1Bq-Ak4TGCjz2UocApaFJtfTEPEIsG8h9ZPUIPCqryIExX3BVBHc8baZSUiU7l3PfZl5f2l-IEUf8JaOAxAFGsNmh9vwcOsyy0OoGOfifS9w8ZBEHy-JhjwcjkCu8od6Hw6sYubZn7oiOruth4icL-knTjghQdRwXs2AbM-4N7kaeeSeige4bIXhGw_JD4FIsGL5XNPRAXMzj1R6pkHKU18wDfp6IjPioY1_tiGkrw2lCTSoc93CTkXEDslWNE61Te9-Sc2ST-IKIZfCyhArpA161f3MLxQkqGlNXr2DnboaPMqnHgGvl98AuZ2VmdZ32PmSZ5yziEC8df5AA6ZNErYZklY5nrqDa3ZysNPiIjSBsSM0T5OtDLDErfci8LYS3mFAEG_DxjM0fAmJlb9ejqTM8x=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-04-00-Rbac-Support-In-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-v6KLs1tT_xI/WOa0anGP4sI/AAAAAAAABBo/KIgYfp8PjusuykUVTfgu9-2uKj_wXo4lwCLcB/s400/rbac1.png returned 404.\")\n    `content/en/blog/_posts/2016-04-00-Adding-Support-For-Kubernetes-In-Rancher.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_Gcq_lFZCTulTIYriiCm2_NZ5cUE4uImQgDL92OCtxHah8ZpxA3zZ5lPSEJy1wKQ26RrWPBNXdU8aM_dZfgmostwVXQDEndaBFf0wzLlwlWF5Xjux-y1vcN-wVCvrcF891DoWKLGqbgFMtfaVvUszFOmWJXbEDfRTajlA8XIEjJ6zocKwY_EUA62GDl1JCOz8U7q6qYrlD8mManLpOh7x7q-tnsl56GCbceol8WmuncoCrLOMiUKqyWKzFCzgGAlm7Dl3Y8nqetzo7cog1PySZH-KyauWdWAvxzwf2qscY_Z8lW3_WqCcHf-JvGzemqInPNjL164-hhqfAqPhvSBV-ZNFzjUbRR3gWOjZdZgvrzQf0MD9P4ArwI1HMJVcLRGtIAkmV9QJZXrTHnjffLWZX9ft6h8TrzuyfS9AF2kp9fktWjnF_kZl2Z8U0GMsfud7ljLFSCNrv_w3cwydAhGzSmjSQeKJDBvK6hLpdsPZDTL06lAIxW45UDhjQwl5M-hNiX3lHOoCVgdtH19GtbS9e0jKA8nxCIGtcqemq8VVvu8Pkg=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-05-00-Resource-Usage-Monitoring-Kubernetes.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-6Bu15356Zqk/V4mGINP8eOI/AAAAAAAAAmk/-RwvkJUt4rY2cmjqYFBmRo25FQQPRb27ACEw/s640/monitoring-architecture.png returned 404.\")\n    `content/en/blog/_posts/2016-07-00-happy-k8sbday-1.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-Wn9QJb6wQ7w/V5Cm1Y2iKhI/AAAAAAAAAnc/SZ3yFFcxjmoqAmz9chp8o2KJJUoKI0KQwCLcB/s640/k8s%2BCommit%2BInfographic.png returned 404.\")\n    `content/en/blog/_posts/2018-01-00-Extensible-Admission-Is-Beta.md`: FileReaderError(\"GET https://2.bp.blogspot.com/-p8WGg2BATsY/WlfywbD_tAI/AAAAAAAAAJw/mDqZV0dB4_Y0gXXQp_1tQ7CtMRSd6lHVwCK4BGAYYCw/s640/Screen%2BShot%2B2018-01-11%2Bat%2B3.22.07%2BPM.png returned 404.\")\n    `content/en/blog/_posts/2020-12-08-kubernetes-release-1.20.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-12-08-kubernetes-1.20-release-announcement/laser.png`)\n    `content/en/blog/_posts/2016-12-00-From-Network-Policies-To-Security-Policies.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EIY4K-7Gs-y7a-nQKPxUWDhWcJ7qP2xto8Ou8jYqQtStDcxrBu5wRYhTpqi5JSiisxQ6dt6nIN95piDKqPwZzLkEbqx-GjoexjDLGR8CZXBHiyC3WkOTd5ty8PeBhNyzQb1rKn0zFvAmzCUmIzvNDqnblL3Y1Uv_1FQQ-Vudc-LIYSkAJ4igxvf_1noQ6pshj2zrI0ecuM-9rP6oaTrFzafYT6H0CrctAEZ2iVVnBetg0aFQnbLHzv60MAKHT9xEqydqv18rJtf2XpK5gSn7OqIG1PZ9X5FqPJBMu-TpdgcDfDMc5p8k2vJdE62Jfz7tGt1Aj6ZslLSAMXh6167h2Nzs5_nwYlP3POpFShKg3O8n0iBtI2HMeQglhCOzoceSMcH-DWXpaVXOyLqUYAAK4ZFuKRmP4Kssr0Bum8AfIMF3GfUPedm3UQtHMlgk6PuDU66cSvTyQx_yzB1wN_aoksNfft0RvclroFnZsWWejWJ1ZBuMDxsQmHO8rZjjAqgMk2CUzsSjyHQHehSMcG46sgJnEQinU0Xa5dlqZByc_dxDll=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-05-00-Kubernetes-Release-0170.md`: FileReaderError(\"Cannot find image link reference: \\\"327\\\"\")\n    `content/en/blog/_posts/2018-10-03-kubedirector.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-10-03-kubedirector/kubedirector.png`)\n    `content/en/blog/_posts/2016-09-00-Creating-Postgresql-Cluster-Using-Helm.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_HO9TkMd0hvRosQQlvnQ2WDQxdhwPcB4eRHAKKa3Kxo8QBYn0RlfQ67krcmam8RAHvr_zP3HADfroQhMqTRmMUc0EpAeQTHF1Nk_-shDPRoZCo7OZo4ZTNyAf6fxt8a1GX-9HRq5ejBe-1rraNEHqIo56ZFMQE2GPNLdYc5meCJ4F4CYgk9SYJS17TFbExTBOltbLVJflOfS-lVsxNJaeZAllFFVtejK_HUjWbjpyhpOOD4SqUjxaYbv5IGOpC1CI6wDwXThJt5iTQJQqFotWvy5Sjl1EqEbjooMaq-23nYl86W9dVx8cPjVCkvnrpmSdTUNBxL5KcsWrOPS2G5Hn_dgY_NvNJo_1kNFmMXSwYw7X-X5i6HXvBJxEE_8X-AbPMrgcBnmE0ApUAKNNh-FMyfLcrbtS3gGU3qo7VWRuLIBDAd1fwM7DzBcx8DZraDquHgC3nJX9nHmYvOLTWErxD2B_5ByO16ZTpBCTb1H-CAul0RIuPukrhzPUsnWSbV83zy9IJlyhq85hNebeZoU79vMqO0XcvqSHkc-RYsGEbbyxnl=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2019-06-12-contributor-summit-shanghai.md`: FileReaderError(\"Cannot find image link reference: \\\"picture of contributor panel at 2018 shanghai contributor summit. photo by josh berkus, licensed cc-by 4.0\\\"\")\n    `content/en/blog/_posts/2020-08-26-kubernetes-release-1.19.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2020-08-26-kubernetes-1.19-release-announcement/accentuate.png`)\n    `content/en/blog/_posts/2016-10-00-Helm-Charts-Making-It-Simple-To-Package-And-Deploy-Apps-On-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_G5rCSXcW73hMmoF6QqRCURnespzAOysZxTdqMlKWLP1lODJjAaINiwVszUBcZX78CLrJwiDowpvfNz8mot4JbHpnKZwgWgdyiDTD7VKuWr9e0ALzA7QEbaqdHRZkrVeIwfNGQuBUxs4MERjJwFomw4mFbM0_blyU0EJZ8nJWgZKF3Y66SMl3SHXYuBCNML7maIKizUw_gmGjEFdXW2ie2hQGw7N2rJpxHhYhMA-wInkqGH9k33IFQoeXbQKiyizxW8gajEDlS3pQ3ki15pNOHgaL_30cDQbRnTFRJGyD7vl-BDyAn2mkDdmjNmg9mucfCTqtAjX3xwNquuNimZutYz7bTBwe35WCtKe0Dqrw93Mvv2Kq1mS6VZyKGyLGg4hMhP6IxgTuNYslJ__uptjui-P6gnTTMNntJD-4SJFrwhgZK54Mk-CMTLjZ1BkwiVyyI7N7PJdD4jFMIOrLEBshgSG394AMXx-3Jb6HGW15Y5I1w_j1DCFKVxqM24jyg0syjVGC9dGwxhyS2c3eqDY6rN98XqcTcVB3hr2f723JAwZLS3=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2018-04-24-kubernetes-application-survey-results-2018.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/survey-results/2018-application-survey/minikube-os-usage.png`)\n    `content/en/blog/_posts/2023-11-28-Gateway-API-Future.md`: FileReaderError(\"GET https://gateway-api.sigs.k8s.io/geps/images/1897-TLStermtypes.png returned 404.\")\n    `content/en/blog/_posts/2015-07-00-The-Growing-Kubernetes-Ecosystem.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_GCrWZaoUKWszL_Uq8PgoxWFRqDKlhYWnQbXCB90NaHdO6vpQ5O_P7GikfJZS2qRoHUc7eMW7ncG86toxAmbhHgQuZlYwh4vJBSu6cyaa_FFgUhBqhhV5O3N74IM06UJGKiMdkcO3sRRyrnZ-EEmKX1FcXY-KdO2nSiKHkubScm8NsSIyCYcl51Kkoxwc9praPgA3m3krqnhxvZrGqeACFn7EISKw11d3BOh61VppGrIOKHGtXjRlp7Gh_2rL7zibKmi12MhCKR2It2jwDy4EL4uwnH0cM_-um9Z3SI-ZDMNVAhtp_29PXaWNxyHJSbaS09jF0FRvLGo_9wVreLs7M5j_H_EniQwoB2X3JH1BlMEMF1XCyTJWOEea1wHVS4KblFW5UjydzUwvdLNMcYL_DN64iLxXdjWqCLhb6qoew6Vi333pnSeTCpN56zsVs2IRtVE18r-vrp0xCrqe_XnNW4iNw-febydgurq1As8GebMJIwJf_gbaCnNuYyMzGHyZM3h0a37y-aP45rr2K0Vyezj_aAZA_Ai9Y0fLJNxIRnkqo=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-06-00-Cluster-Level-Logging-With-Kubernetes.md`: FileReaderError(\"GET https://1.bp.blogspot.com/-FSXnrHLDMJs/Vxfzx2rsreI/AAAAAAAAAbk/PaDTpksKEZk4e8YQff5-JhGPoEpgyWaHgCLcB/s400/cloud-logging.png returned 404.\")\n    `content/en/blog/_posts/2016-11-00-Visualize-Kubelet-Performance-With-Node-Dashboard.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EVq984Z9I9M08pqmDwYUVkHIeXzC9NbovHsY5VTtpuMRZmrRXumBUXDMpeqAwqfZyhmqtMtxMTxcWGmtJqLuQXJif3EvcMFaFnKSxdbgh8KETgpxZ8Ei0qJCiuvzNTng5CM6J7hpHdjah7ev76K-IAdLRv5QCIBmWkkQdlai3W6vX6yzQfgkphchBpvV3apV20Jq2fn_KGJrXlaFunwhqE-8mda74fw4jl3rp4BBaN7ku-HHGFex9kd_gF5j4YMB1ErcvmmfEKg7btYzvy3ifhWDDYKM98LOeltWI6bQGFgPn7uJWiIC3RnOrKZV8iAFaz2E9NV7LGpSGBW-TzWuTgILzR-Sj_brKwhOP4aYmn_uhNuwDDGpyaeRI9TStSHr42YvKQ2XC47At7CkoduYActmX_LzT3rxbrRrg2uL_sHonI6NZM0iqopoPN3SCqmNSeygHQ9bmwXuyMhM9C7Cx1MHjtwqXADbEFOsyzZsHY-4M4EC_exQJytBzaryZjRx1Jh9rtv1zwUTqxggQ1A88OHted9RShHPG83oQ80Y2hDjjB=s1600\", source: TooManyRedirects })\n    `content/en/docs/test.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/pencil.png`)\n    `content/en/blog/_posts/2016-07-00-Thousand-Instances-Of-Cassandra-Using-Kubernetes-Pet-Set.md`: FileReaderError(\"GET https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Cassandra1.jpeg/283px-Cassandra1.jpeg returned 403.\")\n    `content/en/blog/_posts/2016-08-00-Challenges-Remotely-Managed-Onpremise-Kubernetes-Cluster.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_F8eXqe8CVIbYfDxd4IZsVwyGGL7q7bjUrtvlucnB3MRWYJPHfacFmnQtUJH7ttZof3XTtD9aNkIBtzqtML8Aa5qmkfldbUrOqI3Z2y5Zmmw6nU3KdZmpMLQ2VPWV6B3szcMFHer_1eJZxlKzV79d6M9zGDY8LROubimlNtdHzdif7VIfxnOGCtULW_o3MUpAY3d0nxiw-m_SzPb9WpvVp_ZcCFJjz6Hij9oGVZaimhiVKRUVNSCK1gVnWskQn59thh6JeKPXRc24u7oExU51tA81Uo2jyuRFBzt5VU6rL3lHTIHE67wykE2ep1LYCMg7QgOCHR8g5e2NPkYTyK_2apO61eJqjZL9emfw6DEO319_wE-fTcw9eY_B-_EFAaY7wl-EIrpjYT0u6O2NONZOn5X_IoC76Tcsbz1gCEbYnm7dhEW2mTdlyHazhS8_RYr9YYK_7_XlEaAj0I3-rug7zkwFyitc-6anXRuxjbWy2ELr9zyUF6xdzaReKO2HBxP0xKRiJCo6P_IxZs0MIZy0z5Il4_eA17uTfI90eiVw47n_uB=s1600\", source: TooManyRedirects })\n    `content/en/docs/tutorials/services/source-ip.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/sourceip-externaltrafficpolicy.svg`)\n    `content/en/docs/concepts/cluster-administration/logging.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/user-guide/logging/logging-node-level.png`)\n    `content/en/docs/concepts/overview/_index.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/Container_Evolution.svg`)\n    `content/en/docs/concepts/architecture/cloud-controller.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/components-of-kubernetes.svg`)\n    `content/en/docs/concepts/security/controlling-access.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/admin/access-control-overview.svg`)\n    `content/en/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume.md`: FileReaderError(\"GET https://raw.githubusercontent.com/kubernetes/examples/master/mysql-wordpress-pd/WordPress.png returned 404.\")\n    `content/en/docs/setup/production-environment/tools/kubeadm/ha-topology.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/kubeadm/kubeadm-ha-topology-stacked-etcd.svg`)\n    `content/en/docs/tasks/extend-kubernetes/configure-aggregation-layer.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/aggregation-api-auth-flow.png`)\n    `content/en/docs/tasks/access-application-cluster/web-ui-dashboard.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/ui-dashboard.png`)\n    `content/en/docs/tasks/administer-cluster/memory-manager.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/memory-manager-diagram.svg`)\n    `content/en/docs/tasks/administer-cluster/ip-masq-agent.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/ip-masq.png`)\n    `content/en/docs/tasks/administer-cluster/reserve-compute-resources.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/docs/node-capacity.svg`)\n    `content/en/blog/_posts/2016-07-00-Minikube-Easily-Run-Kubernetes-Locally.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_EPyPYWybQ_6Sq9wC4Lr-NqURxoHWr6mVDg3z54cJRIGvdI4X8kVM_1trIJFLU550d8kAUhFHntCudUihYDZWWDdbtxgWU2EDeYuEjiE_nasaT-aZoJP4DovFdd4FPwHnhh-n__T7abtiOy8v_7ATMPglOvKLDm8C2bzZWhVOp4ojyvdUBQs9CHZmTXwXNZjvayzAIH9cFRtpMf_fMu4CgfIy0jAIm9Aw-Q1ixGyn_wVDR1z4-FcHMZj2JpjYiQbYUdlA0oqWREZu4wjmDwfEmNwnVDiCEn792276UbWX3uaN4JZy80SWSq_E331sNZ-HHJcvxm0RkGrvwGfWoTrm9knoB_j2wzYMnDz2blHatw7qFyuslDp2ufaU-ezc3tcxWksFaNHepOv9JfgBNq03uugomu66M2l2bIMDAZ2Wor4NQyG4q6FgEzBJcTIU_51jWo7hq8MaxXJnz8Sg-3qbPIH0ZMC7p2OrYpO6yJaLw-4xwEdzjB3WPSBIl5p5NoT97dEZOqi1mRAYxaW2YsxlCnTf6kRGZIkpQx0Tp1l2a0k2-k=s1600\", source: TooManyRedirects })\n    `content/en/docs/tasks/administer-cluster/migrating-from-dockershim/check-if-dockershim-removal-affects-you.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/blog/2018-05-24-kubernetes-containerd-integration-goes-ga/cri-containerd.png`)\n    `content/en/releases/release.md`: FileError(file not found: `/Users/baehyunsol/Documents/Rust/ragit/__tmp_9006fa62b5fa9b16/kubernetes/./images/releases/release-cycle.jpg`)\n    `content/en/blog/_posts/2016-07-00-Cross-Cluster-Services.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_G2on0N0LuMuUHc1y9DJcbSU80wgWoyMQy_gqCHLanuEmZl5N080Mr9_OLW7kN8a0J6-MR7d7bTeGGsfMfo4aT0gHskDQYBaaQ6SMJMxnXz_lQZ2_3XVcvVqwkh6rriW5j03Qq305ZVrezbD5ll13CiFgpaRZeK1syuBWM7wNe7-UPJE9XHu2rP9-a7gxY8dIF7WjJNYbAYcRDrtN_PSvGSAQDo-1nDMCpybQEVIqBlFI86TtouACLw61uzbhQXwH9P27_VGydilz3VY3KYq94CE7L8wJ3n0H_Z4PFJ83sSdjD4a4F55kqbl73dlfOf9Z36yb2UtNTEPwlG3S_sLu077qHV-mzIEp9H3kheRkMrUAnTTaFSe6AoCZvJu6vhcr9PZ2bYX4jP4zZdC36If7ljAOzWX9uCNVlioDX9ogpxEdMnE93liWQAXMMlTuq-RE7KicJOIOWsAWKkM7A_sxrC41zZtUZ2w3-AkYR343G2yFzclfjOgUzAtpmhwG70cfDg2zKzzUZX0iU5KkfAwsYAvzdl7Imc8ECWtWUB0Fyt8az0=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2017-05-00-Managing-Microservices-With-Istio-Service-Mesh.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_E8KJp-P2d8QDiEYnLJqdSKFL3UIDk5wYahScvun5Itj7JuXIyW28MT4tcG-4OPkHBdQbZNBq87jnoPXTDymbGUJDJLJahILJ55nLkobBBcaLXukYiV8WpqdyVpyWvS2-UEua1yKyeMipl9LVQaln6ku3nh11j6GqYj6GSigydsAqClLLeSS_Bm8nY4JrnPrBeH3unHaiwPJrTWCxi22dRCJMR8RYSgm25AxJqTh9pt_YiI2GlTEszPQPtqpMXy-9G3MHAi7wl2bGpoe9smdOWIk5DuMbV1uMGPNEi4LbCCShVYq7ADyx9KpPc1PxRZCfWFP0piayYHMUlSUMex2jq1LYV9QNNRBxVfZ2TJFHgitzo43WGkJsXsGdf2FuoMC9ijxvAdI-NIwD7wTvi_mXE_mETiCz21_tpVXE3ZKXGxUECkiAjzVjc4kvZR0bAFBEwPHal0aRSpkVKA3EGulNTZoyDccE48TM94xb66ltZJn2oL-zslCbxehcTByxKFk4FZTBmmjZLyudzIFN5E8jvAO_BglgLQYO2rL9Tf7pWmnT1_=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2016-04-00-Building-Awesome-User-Interfaces-For-Kubernetes.md`: ReqwestError(reqwest::Error { kind: Redirect, url: \"https://lh3.googleusercontent.com/fife/ALs6j_H_A4zQm2jR1Lv8QtUSEVOyqa0FnD1Tl0ENoqjsG121_t80gvL7tQijNH_hJ9XrPMOzQ5t50Xt6sGsaZNL3sCBkDt6YaP5C90pKDfgBlWsPjQO1egr31LW7ngG9CceGGKEZ_-NGKzO3NknZGy-4qq6uIQZVsugquTXeobJ7ol_rSLl1Z5pESSy6cAFAGyUnT8Ecj8X88N1XqBxTrynb4sA0Ax_ESf7wRTKvpUO378rVqhXcxi-XOgMVQ-oz-vFwYfLcdhD2MWd9RZv793rkzOgethdy2ezwTZmuZyNx1SaZj0OxOKzuC-uZzjVl0qoPl9TbHBIIOxmbugWgH7b_Y9S_8m3Kbq-_uHKKXX4jIKCg3YnKOVqGGC9g-DhpFR0E8LtpvWKBe_SLdZaMSfbL-cxp34-iBF1f_lSAI5vJl7lDrbe18TT_Z79rlf8Jui40U_FIICf2jj44y393vhEANqlmNrlRf92VQ_EhuEOESZWff1QXJaMhiwAi7Ei0zDQKnZUve85iT1Mct5K31snaPA-aZw6JyzdtnnkNDQwYihliwaII=s1600\", source: TooManyRedirects })\n    `content/en/blog/_posts/2015-07-00-How-Did-Quake-Demo-From-Dockercon-Work.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://lh4.googleusercontent.com/MectR1Mh-7XA0Q5cqiQPrtNxnBE-EDkKR6XJQfazYcIJg3mSbWTcV9EyRfhu6VbIP_sFdMVCXRH1l8YYIuG05SiuO_WqaXPvOf41j0CN8eD9djd6E4joS9Y5Aljlpi64NnffiRY\", source: TimedOut })\n\nstarted creating a knowledge-base of tera\n\nfinished creating a knowledge-base of tera: it took 16 seconds\n\n----- tera (0 errors) -----\n\n\nstarted creating a knowledge-base of neovim\n\nfinished creating a knowledge-base of neovim: it took 45 seconds\n\n----- neovim (0 errors) -----\n\n\nstarted creating a knowledge-base of nushell\n\nfinished creating a knowledge-base of nushell: it took 73 seconds\n\n----- nushell (2 errors) -----\n    `book/installation.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://repology.org/badge/vertical-allrepos/nushell.svg\", source: hyper_util::client::legacy::Error(Connect, Error { code: -9836, message: \"bad protocol version\" }) })\n    `blog/2024-04-30-30k_blog.md`: ReqwestError(reqwest::Error { kind: Request, url: \"https://starchart.cc/nushell/nushell.svg?variant=adaptive\", source: TimedOut })\n\nstarted creating a knowledge-base of nix\n\nfinished creating a knowledge-base of nix: it took 24 seconds\n\n----- nix (0 errors) -----\n\n\nstarted creating a knowledge-base of nixpkgs\n\nfinished creating a knowledge-base of nixpkgs: it took 52 seconds\n\n----- nixpkgs (1 errors) -----\n    `pkgs/misc/documentation-highlighter/README.md`: FileReaderError(\"GET https://packagephobia.now.sh/badge?p=highlight.js returned 429.\")\n\nstarted creating a knowledge-base of zed\n\nfinished creating a knowledge-base of zed: it took 141 seconds\n\n----- zed (0 errors) -----\n"
        },
        "real_repos_regression": {
            "seq": 34,
            "pass": true,
            "error": null,
            "elapsed_ms": 19164,
            "message": null
        },
        "subdir": {
            "seq": 35,
            "pass": true,
            "error": null,
            "elapsed_ms": 25689,
            "message": null
        },
        "tfidf": {
            "seq": 36,
            "pass": true,
            "error": null,
            "elapsed_ms": 28459,
            "message": null
        },
        "korean": {
            "seq": 37,
            "pass": true,
            "error": null,
            "elapsed_ms": 8021,
            "message": null
        },
        "merge": {
            "seq": 38,
            "pass": true,
            "error": null,
            "elapsed_ms": 50305,
            "message": null
        },
        "summary": {
            "seq": 39,
            "pass": false,
            "error": "\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/tests.py\", line 781, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/summary.py\", line 29, in summary\n    assert cargo_run([\"summary\", \"--cached\"], check=False) != 0\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError\n",
            "elapsed_ms": 3898,
            "message": null
        },
        "external_bases": {
            "seq": 40,
            "pass": true,
            "error": null,
            "elapsed_ms": 95061,
            "message": null
        },
        "end_to_end dummy": {
            "seq": 41,
            "pass": true,
            "error": null,
            "elapsed_ms": 69750,
            "message": "--- summary of the knowledge-base ---\n\ndummy\n"
        },
        "end_to_end llama3.3-70b": {
            "seq": 42,
            "pass": true,
            "error": null,
            "elapsed_ms": 135726,
            "message": "--- summary of the knowledge-base ---\n\nThe knowledge-base is a collection of 52 files, comprising 76413 characters of text, with a mix of `.md` and `.txt` file extensions, containing information about the RAGIT project, a git-like software designed to create, query, and share knowledge-bases. The main goal of the RAGIT project is to make knowledge-bases easy to create and share. The knowledge-base is organized into directories, including a commands directory with documentation for various RAGIT commands, as well as individual files such as `index.md`, `intro.txt`, and others that provide an introduction to RAGIT, its goals, and its usage, including topics like contribution, evaluation, and publishing, offering a comprehensive overview of the project and its functionality.\n"
        },
        "audit llama3.3-70b": {
            "seq": 43,
            "pass": true,
            "error": null,
            "elapsed_ms": 19457,
            "message": null
        },
        "logs llama3.3-70b": {
            "seq": 44,
            "pass": true,
            "error": null,
            "elapsed_ms": 7749,
            "message": null
        },
        "prompts dummy": {
            "seq": 45,
            "pass": true,
            "error": null,
            "elapsed_ms": 9720,
            "message": null
        },
        "prompts gpt-4o-mini": {
            "seq": 46,
            "pass": true,
            "error": null,
            "elapsed_ms": 94020,
            "message": null
        },
        "prompts gemini-2.0-flash": {
            "seq": 47,
            "pass": true,
            "error": null,
            "elapsed_ms": 57017,
            "message": null
        },
        "prompts claude-3.5-sonnet": {
            "seq": 48,
            "pass": true,
            "error": null,
            "elapsed_ms": 123454,
            "message": null
        },
        "empty dummy": {
            "seq": 49,
            "pass": true,
            "error": null,
            "elapsed_ms": 12289,
            "message": null
        },
        "empty llama3.3-70b": {
            "seq": 50,
            "pass": true,
            "error": null,
            "elapsed_ms": 13365,
            "message": null
        },
        "server_chat llama3.3-70b": {
            "seq": 51,
            "pass": true,
            "error": null,
            "elapsed_ms": 31751,
            "message": null
        },
        "server_chat gemini-2.0-flash": {
            "seq": 52,
            "pass": true,
            "error": null,
            "elapsed_ms": 54592,
            "message": null
        },
        "images2 gpt-4o-mini": {
            "seq": 53,
            "pass": true,
            "error": null,
            "elapsed_ms": 10800,
            "message": null
        },
        "images3 gpt-4o-mini": {
            "seq": 54,
            "pass": true,
            "error": null,
            "elapsed_ms": 10633,
            "message": null
        },
        "pdl gpt-4o-mini": {
            "seq": 55,
            "pass": true,
            "error": null,
            "elapsed_ms": 20642,
            "message": null
        },
        "pdf gpt-4o-mini": {
            "seq": 56,
            "pass": true,
            "error": null,
            "elapsed_ms": 135782,
            "message": null
        },
        "svg gpt-4o-mini": {
            "seq": 57,
            "pass": false,
            "error": "\nTraceback (most recent call last):\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/tests.py\", line 781, in <module>\n    test()\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/tests.py\", line 730, in <lambda>\n    (\"svg gpt-4o-mini\", lambda: svg(test_model=\"gpt-4o-mini\")),\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/baehyunsol/Documents/Rust/ragit/tests/svg.py\", line 130, in svg\n    assert \"ragit\" in cargo_run([\"pdl\", \"test1.pdl\"], stdout=True).lower()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError\n",
            "elapsed_ms": 17974,
            "message": null
        },
        "web_images gpt-4o-mini": {
            "seq": 58,
            "pass": true,
            "error": null,
            "elapsed_ms": 51712,
            "message": null
        },
        "images2 claude-3.5-sonnet": {
            "seq": 59,
            "pass": true,
            "error": null,
            "elapsed_ms": 13898,
            "message": null
        },
        "extract_keywords dummy": {
            "seq": 60,
            "pass": true,
            "error": null,
            "elapsed_ms": 5760,
            "message": null
        },
        "extract_keywords gpt-4o-mini": {
            "seq": 61,
            "pass": true,
            "error": null,
            "elapsed_ms": 13164,
            "message": null
        },
        "orphan_process llama3.3-70b": {
            "seq": 62,
            "pass": true,
            "error": null,
            "elapsed_ms": 266587,
            "message": null
        },
        "write_lock llama3.3-70b": {
            "seq": 63,
            "pass": true,
            "error": null,
            "elapsed_ms": 108109,
            "message": null
        },
        "ragit_api command-r": {
            "seq": 64,
            "pass": true,
            "error": null,
            "elapsed_ms": 1632,
            "message": null
        },
        "query_options llama3.3-70b": {
            "seq": 65,
            "pass": true,
            "error": null,
            "elapsed_ms": 9190,
            "message": null
        },
        "query_with_schema llama3.3-70b": {
            "seq": 66,
            "pass": true,
            "error": null,
            "elapsed_ms": 3597,
            "message": null
        },
        "models_init": {
            "seq": 67,
            "pass": true,
            "error": null,
            "elapsed_ms": 869,
            "message": null
        },
        "test_home_config_override": {
            "seq": 68,
            "pass": true,
            "error": null,
            "elapsed_ms": 425,
            "message": null
        },
        "config": {
            "seq": 69,
            "pass": true,
            "error": null,
            "elapsed_ms": 72856,
            "message": null
        },
        "migrate": {
            "seq": 70,
            "pass": true,
            "error": null,
            "elapsed_ms": 203673,
            "message": null
        },
        "migrate2": {
            "seq": 71,
            "pass": true,
            "error": null,
            "elapsed_ms": 262689,
            "message": null
        },
        "migrate3": {
            "seq": 72,
            "pass": true,
            "error": null,
            "elapsed_ms": 212737,
            "message": null
        }
    },
    "result": {
        "total": 73,
        "complete": 73,
        "pass": 69,
        "fail": 4,
        "remaining": 0
    },
    "coverage": [
        "",
        "--file",
        "add",
        "add --all",
        "add --all --force",
        "add --dry-run",
        "add --dry-run --force",
        "add --dry-run --reject",
        "add --file",
        "add --force",
        "add --force -f",
        "add --invalid-flag",
        "add --reject",
        "add -C",
        "add -c",
        "add -f",
        "archive-creat",
        "archive-create",
        "archive-create --configs --no-prompts --output",
        "archive-create --force --no-configs --no-prompts --output",
        "archive-create --no-configs --no-prompts --output",
        "archive-create --no-configs --no-prompts --output --size-limit",
        "archive-create --no-configs --output --prompts",
        "archive-create -o",
        "archive-extract --force --output",
        "archive-extract --output",
        "archive-extract -o",
        "audit --json --only-tokens",
        "audit --json --only-tokens -c",
        "audit -c",
        "build",
        "build --invalid-flag",
        "build --jobs",
        "build -C",
        "cat-file",
        "cat-file --json",
        "cat-file -C",
        "check",
        "check --recover",
        "clone",
        "config --get",
        "config --get-all",
        "config --invalid-flag",
        "config --set",
        "extract-keywords",
        "extract-keywords --full-schema",
        "extract-keywords --full-schema --json",
        "extract-keywords --json",
        "gc --audit",
        "gc --images",
        "gc --logs",
        "ii-build",
        "ii-reset",
        "ii-status",
        "init",
        "init -C",
        "invalid-command",
        "ls-chunks",
        "ls-chunks --json",
        "ls-chunks --json --stat-only",
        "ls-chunks --json --uid-only",
        "ls-files",
        "ls-files --cached --json --name-only",
        "ls-files --json",
        "ls-files --json --name-only",
        "ls-files --json --name-only --processed",
        "ls-files --json --name-only --staged",
        "ls-files --json --stat-only",
        "ls-images",
        "ls-images --json",
        "ls-images --json --stat-only",
        "ls-images --json --uid-only",
        "ls-images --uid-only",
        "ls-models --json",
        "ls-models --json --name-only",
        "ls-models --json --selected",
        "ls-models --name-only --selected",
        "ls-terms",
        "ls-terms --json --term-only",
        "merge",
        "merge --force --prefix",
        "merge --prefix",
        "merge --prefix --reject",
        "meta --get",
        "meta --get-all --json",
        "meta --remove",
        "meta --set",
        "migrate",
        "model --all --existing-only --fetch --remote",
        "model --all --fetch --remote",
        "model --all --remove",
        "model --existing-only --fetch --remote",
        "model --fetch --remote",
        "model --json --remote --search",
        "model --json --search",
        "model --remove",
        "pdl",
        "pdl --context",
        "pdl --context --log --model",
        "pdl --context --model",
        "pdl --context --model --no-strict",
        "pdl --context --model --strict",
        "pdl --log --model",
        "pdl --log --model --schema",
        "pdl --model",
        "pull",
        "push",
        "push --configs --prompts --remote",
        "push --configs --remote",
        "push --remote",
        "qeury",
        "query",
        "query --agent",
        "query --disable-rag",
        "query --iterative",
        "query --josn",
        "query --max-retrieval",
        "query --max-summaries",
        "query --model",
        "query --schema",
        "query --super-rerank",
        "query -json",
        "remove",
        "remove --all",
        "remove --all --auto",
        "remove --all --auto --dry-run",
        "remove --all --processed",
        "remove --all --staged",
        "remove --dry-run --processed",
        "remove --dry-run --staged",
        "remove --processed",
        "remove --staged",
        "remove --staged -r",
        "remove -C",
        "remove -r",
        "summary",
        "summary --cached",
        "tfidf",
        "tfidf --json",
        "tfidf --json --limit",
        "tfidf --limit",
        "tfidf --limit --uid-only",
        "uid",
        "version",
        "version --build-options --json"
    ]
}